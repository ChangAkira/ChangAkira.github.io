<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>庆祝一下！</title>
      <link href="/2024/08/30/2th-celebration/"/>
      <url>/2024/08/30/2th-celebration/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><span class='p center logo large'>HALOW WORD!</span><span class='p center small'>两周岁生日快乐！</span><span id="more"></span><h2 id="听歌"><a href="#听歌" class="headerlink" title="听歌"></a>听歌</h2><bilibili-card vid="BV1nP4y1W7dr" type="video" title="【三无】石头歌【专辑曲】" author="三无Marblue" cover="http://i0.hdslb.com/bfs/archive/07229b70cdf7c7cd736520402f59e3e380ba4b0f.jpg" duration="03:24" views="175.8万" danmakus="2826" comments="5548" favorites="5.1万" coins="7.3万" likes="9.7万"></bilibili-card><br/><div class="video"><video controls preload><source src='/videos/石头歌.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><h2 id="喝饮料"><a href="#喝饮料" class="headerlink" title="喝饮料"></a>喝饮料</h2><div id="iframe-container" style="text-align:center">    <iframe src="/HTML/drinks.html" style="border: none;height: 520px; width: 750px">        <p>啊，你的浏览器不支持！？</p>    </iframe></div><span class='p center small'>窝请你喝饮料！想喝多少都可以！</span><h2 id="畅聊"><a href="#畅聊" class="headerlink" title="畅聊"></a>畅聊</h2><h3 id="一-杂乱无章"><a href="#一-杂乱无章" class="headerlink" title="一 &#x2F; 杂乱无章"></a>一 &#x2F; 杂乱无章</h3><h3 id="二-少即是多"><a href="#二-少即是多" class="headerlink" title="二 &#x2F; 少即是多"></a>二 &#x2F; 少即是多</h3><h3 id="三-断言"><a href="#三-断言" class="headerlink" title="三 &#x2F; 断言"></a>三 &#x2F; 断言</h3><h3 id="四-十日章"><a href="#四-十日章" class="headerlink" title="四 &#x2F; 十日章"></a>四 &#x2F; 十日章</h3><h3 id="五-何为默元"><a href="#五-何为默元" class="headerlink" title="五 &#x2F; 何为默元"></a>五 &#x2F; 何为默元</h3><h3 id="六-桌前闲影忙"><a href="#六-桌前闲影忙" class="headerlink" title="六 &#x2F; 桌前闲影忙"></a>六 &#x2F; 桌前闲影忙</h3><h3 id="七-曾经的可能"><a href="#七-曾经的可能" class="headerlink" title="七 &#x2F; 曾经的可能"></a>七 &#x2F; 曾经的可能</h3><h3 id="八-惯常之事，推脱之辞"><a href="#八-惯常之事，推脱之辞" class="headerlink" title="八 &#x2F; 惯常之事，推脱之辞"></a>八 &#x2F; 惯常之事，推脱之辞</h3><h3 id="九-小人物，大人物"><a href="#九-小人物，大人物" class="headerlink" title="九 &#x2F; 小人物，大人物"></a>九 &#x2F; 小人物，大人物</h3><h3 id="十-匆忙流逝"><a href="#十-匆忙流逝" class="headerlink" title="十 &#x2F; 匆忙流逝"></a>十 &#x2F; 匆忙流逝</h3><h2 id="今日全新上线：安利墙“‘一’系列”"><a href="#今日全新上线：安利墙“‘一’系列”" class="headerlink" title="今日全新上线：安利墙“‘一’系列”"></a>今日全新上线：安利墙“‘一’系列”</h2><p>顶部导航栏“‘一’系列”直达！</p><h3 id="一-一张纸"><a href="#一-一张纸" class="headerlink" title="一 &#x2F; 一张纸"></a>一 &#x2F; 一张纸</h3><h3 id="一-一本书"><a href="#一-一本书" class="headerlink" title="一 &#x2F; 一本书"></a>一 &#x2F; 一本书</h3><h3 id="一-一部番"><a href="#一-一部番" class="headerlink" title="一 &#x2F; 一部番"></a>一 &#x2F; 一部番</h3><h2 id="INFOS"><a href="#INFOS" class="headerlink" title="INFOS"></a>INFOS</h2><details yellow open><summary> 视频信息 </summary>              <div class='content'>              <p><a href="https://www.bilibili.com/video/BV1nP4y1W7dr/">https://www.bilibili.com/video/BV1nP4y1W7dr/</a><br>专辑首发单曲《石头歌》（网络先行版）<br>唱&#x2F;人声编辑：三无Marblue<br>词&#x2F;曲&#x2F;编&#x2F;PV：ilem</p>              </div>            </details><details green open><summary> 饮料信息 </summary>              <div class='content'>              <p>该动画取自公众号《前端嘛》，其演示网站地址<a href="https://www.fecoder.cn/code-fun/sprite-or-cola-animation-demo">https://www.fecoder.cn/code-fun/sprite-or-cola-animation-demo</a> 本人对其做少量修改，以iframe形式放在博客某页面上。</p><p>主要调整内容：调整了杯子大小、杯子圆角、水果大小、气泡大小、气泡速率、吸管大小与倾斜角。</p>              </div>            </details><details blue open><summary> 本文信息 </summary>              <div class='content'>              <p>本文为庆祝该网站的两周岁生日而作<br>零散写了一些近年感悟</p><p>8月20日落笔写下目录<br><del>而它的完成遥遥无期</del><br><psw>你知道的，我是超级鸽王</psw></p><p>目录写完后立即发在了QQ空间<br>感谢朋友们对我一直以来的支持</p>              </div>            </details><details red open><summary> 你好，世界 </summary>              <div class='content'>              <p>默元也很好</p><p>你好，默元</p>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 庆典 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 庆典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bilibili-card 视频卡片</title>
      <link href="/2024/08/22/bilibili-card-test/"/>
      <url>/2024/08/22/bilibili-card-test/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Hexo一个插入bilibili视频链接卡片的插件。</p><span id="more"></span><h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><bilibili-card vid="BV1nP4y1W7dr" type="video" title="【三无】石头歌【专辑曲】" author="三无Marblue" cover="http://i0.hdslb.com/bfs/archive/07229b70cdf7c7cd736520402f59e3e380ba4b0f.jpg" duration="03:24" views="175.8万" danmakus="2826" comments="5548" favorites="5.1万" coins="7.3万" likes="9.7万"></bilibili-card><br/><div class="video"><video controls preload><source src='/videos/石头歌.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><p>超爱这首的！</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre><code>&#123;% bilibili_card BV1nP4y1W7dr video %&#125;          &lt;!-- 这是插件用法 --&gt; &lt;br/&gt;           &lt;!-- 一个空行 --&gt; &#123;% video /videos/石头歌.mp4 %&#125;         &lt;!-- Volantis主题插入本地视频的写法 --&gt;</code></pre><h2 id="为啥用这个插件？"><a href="#为啥用这个插件？" class="headerlink" title="为啥用这个插件？"></a>为啥用这个插件？</h2><p>在我们写文章时，经常会有插入B站视频的需求。</p><p>点击B站视频下方的分享按钮生成的代码，形如：</p><pre><code>&lt;iframe src=&quot;//player.bilibili.com/player.html?isOutside=true&amp;aid=889743543&amp;bvid=BV1nP4y1W7dr&amp;cid=386543997&amp;p=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot; height=&quot;450&quot; width=&quot;750&quot;&gt;&lt;/iframe&gt;</code></pre><p>此处height&#x3D;”450” width&#x3D;”750”为自行添加的，直接复制B站给的代码里没有。</p><p>效果如：</p><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=889743543&bvid=BV1nP4y1W7dr&cid=386543997&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" height="450" width="750"></iframe><p>它有几个问题：一是由于不登陆而导致不能高清，二是很乱、很丑，三是把播放器也拿来了，很不好！四是一不小心就会跳到B站去。还会自动播放！</p><p>这时候，聪明的人们就开始研究这串代码，并立即发明了直接给出视频链接的iframe。这时候你会发现：网页竟然会立马自己重定向到B站去！</p><p>人们研究了很多方法，最后这些方法却都失效了。</p><p>于是人们迫不得已自己下载B站视频、再放到自己网页上。这时候，善良的人们就会标注好视频来源。</p><p>但是！这明显算是一种转载。看着视频上方写的那行小字，你的良心不会痛吗！</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/df47247ee41b40897e61e164c162a549481184837.png@1e_1c.webp' data-fancybox='default' data-caption='🚫未经作者授权，禁止转载'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/df47247ee41b40897e61e164c162a549481184837.png@1e_1c.webp" alt="🚫未经作者授权，禁止转载"></a><span class='image-caption'>🚫未经作者授权，禁止转载</span></div></div><p>但是！我们都知道，直接转B站链接，就是可以的。而上文中的B站代码，本质不也是一种放视频、并且你可以跳转到B站原视频地址的东西嘛！</p><p>于是聪明的我将本地视频和B站视频卡片结合起来使用。</p><p>我好，阅读文章的人好，视频原作者好，只有B站受伤的世界达成了——它不能那么轻易的引流了！也不能限制视频分辨率了！</p><p>完美。</p><h2 id="插件地址"><a href="#插件地址" class="headerlink" title="插件地址"></a>插件地址</h2><div class="tag link"><a class="link-card" title="插件在GitHub的地址" href="https://github.com/wherewhere/hexo-tag-bilibili-card"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">插件在GitHub的地址</p><p class="url">https://github.com/wherewhere/hexo-tag-bilibili-card</p></div></a></div><h2 id="为啥不用真正的B站视频插件？"><a href="#为啥不用真正的B站视频插件？" class="headerlink" title="为啥不用真正的B站视频插件？"></a>为啥不用真正的B站视频插件？</h2><p>如 <code>hexo-tag-bili</code> 。</p><div class="tag link"><a class="link-card" title="hexo-tag-bili在GitHub的地址" href="https://github.com/honjun/hexo-tag-bili"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">hexo-tag-bili在GitHub的地址</p><p class="url">https://github.com/honjun/hexo-tag-bili</p></div></a></div><p>答：太丑了。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Volantis主题外部.md引用详解</title>
      <link href="/2024/08/17/Volantis%E4%B8%BB%E9%A2%98%E5%A4%96%E9%83%A8-md%E5%BC%95%E7%94%A8%E8%AF%A6%E8%A7%A3/"/>
      <url>/2024/08/17/Volantis%E4%B8%BB%E9%A2%98%E5%A4%96%E9%83%A8-md%E5%BC%95%E7%94%A8%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Volantis 标签插件 在局部渲染外部md文件 用法详解</p><span id="more"></span><div class="tag link"><a class="link-card" title="官方文档地址" href="https://volantis.js.org/v5/tag-plugins/?keyword=%E5%A4%96%E9%83%A8md"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">官方文档地址</p><p class="url">https://volantis.js.org/v5/tag-plugins/?keyword=%E5%A4%96%E9%83%A8md</p></div></a></div><div class="note quote"><p>在局部渲染外部md文件</p></div><h2 id="为什么？"><a href="#为什么？" class="headerlink" title="为什么？"></a>为什么？</h2><p>首先我们来说什么叫“外部md文件”，这个指的其实是我们网站外部的文件，比如官方文档中的链接<a href="https://gcore.jsdelivr.net/gh/volantis-x/hexo-theme-volantis/README.md%E3%80%82">https://gcore.jsdelivr.net/gh/volantis-x/hexo-theme-volantis/README.md。</a></p><p>但是大家既然用着gitpages和hexo搭建博客，想来是没有自己服务器的，而且也不想这里上传一些文件那里上传一些文件吧……如果我们可以就在博客目录下存放我们的md文件，然后随着网页一起更新到GitHub上怎么样呢？</p><p>其实外部md文件的目的是保证hexo对该文件夹下的文件不进行渲染。我们知道，当我们输入hexo g回车的时候，我们写的页面.md文件就会被渲染为.html文件，然后hexo d上传到GitHub。所以我们可以在保证.md文件不被渲染的情况下，将.md文件保存在博客目录下。</p><h2 id="怎么做？"><a href="#怎么做？" class="headerlink" title="怎么做？"></a>怎么做？</h2><p>参考<a href="https://changakira.github.io/2024/07/12/html-posts/"> <strong>Hexo创建自定义的html页面</strong> </a>，原理是一样的。</p><p>首先在博客source目录下创建一个叫md的文件夹。（放别的位置也可以，放在这里便于管理）</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/Volantis%E4%B8%BB%E9%A2%98%E5%A4%96%E9%83%A8.md%E5%BC%95%E7%94%A8%E8%AF%A6%E8%A7%A3/%E6%96%87%E4%BB%B6%E5%A4%B9%E5%87%86%E5%A4%87.png' data-fancybox='default' data-caption='文件夹准备'><img fancybox itemprop="contentUrl" src="/class_1/Volantis%E4%B8%BB%E9%A2%98%E5%A4%96%E9%83%A8.md%E5%BC%95%E7%94%A8%E8%AF%A6%E8%A7%A3/%E6%96%87%E4%BB%B6%E5%A4%B9%E5%87%86%E5%A4%87.png" alt="文件夹准备"></a><span class='image-caption'>文件夹准备</span></div></div><p>在里面放上你的.md文件。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/Volantis%E4%B8%BB%E9%A2%98%E5%A4%96%E9%83%A8.md%E5%BC%95%E7%94%A8%E8%AF%A6%E8%A7%A3/%E6%94%BE%E4%B8%8A.md%E6%96%87%E4%BB%B6.png' data-fancybox='default' data-caption='放上.md文件'><img fancybox itemprop="contentUrl" src="/class_1/Volantis%E4%B8%BB%E9%A2%98%E5%A4%96%E9%83%A8.md%E5%BC%95%E7%94%A8%E8%AF%A6%E8%A7%A3/%E6%94%BE%E4%B8%8A.md%E6%96%87%E4%BB%B6.png" alt="放上.md文件"></a><span class='image-caption'>放上.md文件</span></div></div><p>在主题的或hexo的_cofig.yml中修改 <code>skip_render</code> 项（若（主题的）_config.yml中没有这一项，在合适的地方添加即可）。在 <code>skip_render：</code> 后面加上要跳过渲染的文件夹名称。接下来我们就以source目录下的md文件夹举例。</p><p>修改方式有几种：</p><pre><code>skip_render: md/xxxx.md只跳过该文件的渲染skip_render: md/*单个文件夹下的全部文件skip_render: md/*.md该文件夹下某一类型的全部文件skip_render: md/**该文件夹下的全部子文件夹和文件skip_render:- &#39;md1/*.md&#39;- &#39;md2/**&#39;多个文件夹或其它复杂情况</code></pre><p>以上修改中，若写为单行（1~4的情况），则不需要加引号。写为多行（5）的情况，则需要加引号，单引号双引号均可。</p><p>另外，单行的也可以写成多行的便于以后增添或删除，注意添加引号，如情况2也可以写作：</p><pre><code>skip_render:- &#39;md/*&#39;</code></pre><p>那么在使用的时候，我们可以写相对路径。如：</p><pre><code>&#123;% md /md/md_example.md %&#125;</code></pre><p>md_example.md是我的文件名。内容是：</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/Volantis%E4%B8%BB%E9%A2%98%E5%A4%96%E9%83%A8.md%E5%BC%95%E7%94%A8%E8%AF%A6%E8%A7%A3/%E9%9A%8F%E4%BE%BF%E5%86%99%E4%BA%86%E7%82%B9%E5%86%85%E5%AE%B9.png' data-fancybox='default' data-caption='随便写了点内容'><img fancybox itemprop="contentUrl" src="/class_1/Volantis%E4%B8%BB%E9%A2%98%E5%A4%96%E9%83%A8.md%E5%BC%95%E7%94%A8%E8%AF%A6%E8%A7%A3/%E9%9A%8F%E4%BE%BF%E5%86%99%E4%BA%86%E7%82%B9%E5%86%85%E5%AE%B9.png" alt="随便写了点内容"></a><span class='image-caption'>随便写了点内容</span></div></div><p>效果如下：</p>  <div id="md-e8aa9403-5e2d-8e46-8922-0e5f6874e767" class="tag-md markdown-body"></div>  <script>  (()=>{    volantis.css("https://unpkg.com/volantis-static@0.0.1654736714924/libs/github-markdown-css/github-markdown.css");    const contentEl = document.getElementById("md-e8aa9403-5e2d-8e46-8922-0e5f6874e767");    const loadMarkdown = (url) => {      if (!window.fetch) {        contentEl.innerHTML =          '<div style="font-size: 24px"><p>Your browser outdated. Please use the latest version of Chrome or Firefox!</p><p>您的浏览器版本过低，请使用最新版的 Chrome 或 Firefox 浏览器！</p></div>';      } else {        contentEl.innerHTML =          '<div style="font-size: 24px">Loading ... | 加载中。。。</div>';        fetch(url, { method: "GET" })          .then((resp) => {            return Promise.all([              resp.ok,              resp.status,              resp.text(),              resp.headers,            ]);          })          .then(([ok, status, data, headers]) => {            if (ok) {              return {                ok,                status,                data,                headers,              };            } else {              throw new Error(JSON.stringify(json.error));            }          })          .then((resp) => {            let data = marked.parse(resp.data);            contentEl.innerHTML = data;          })          .catch((error) => {            console.log(error);            contentEl.innerHTML =              '<div style="font-size: 24px"><p>There was a problem loading the file!</p><p>加载文件时出现问题！</p></div>';          });      };    };    volantis.js("https://unpkg.com/volantis-static@0.0.1654736714924/libs/marked/marked.min.js").then(()=>{      loadMarkdown("/md/md_example.md?t=" + new Date().getTime());    })  })();  </script>  <p>我们可以看到它是直接显示的，效果跟官方文档的不一样。其实官方文档里是用一个folding套了一下，代码里没有明确写出来。</p><p>官方文档效果是这样的：</p><p><img src="/class_1/Volantis%E4%B8%BB%E9%A2%98%E5%A4%96%E9%83%A8.md%E5%BC%95%E7%94%A8%E8%AF%A6%E8%A7%A3/%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E6%95%88%E6%9E%9C.gif" alt="官方文档效果"></p><p>用folding套一下代码：</p><pre><code>&#123;% folding::用folding套一下.md显示 %&#125;&#123;% md /md/md_example.md %&#125;&#123;% endfolding %&#125;</code></pre><p>效果如下。</p><details ><summary> 用 folding 套一下的 md 显示 </summary>              <div class='content'>              <div id="md-5122063b-94d3-ddf9-ac49-8d854f1fd6ef" class="tag-md markdown-body"></div><script>(()=>{  volantis.css("https://unpkg.com/volantis-static@0.0.1654736714924/libs/github-markdown-css/github-markdown.css");  const contentEl = document.getElementById("md-5122063b-94d3-ddf9-ac49-8d854f1fd6ef");  const loadMarkdown = (url) => {    if (!window.fetch) {      contentEl.innerHTML =        '<div style="font-size: 24px"><p>Your browser outdated. Please use the latest version of Chrome or Firefox!</p><p>您的浏览器版本过低，请使用最新版的 Chrome 或 Firefox 浏览器！</p></div>';    } else {      contentEl.innerHTML =        '<div style="font-size: 24px">Loading ... | 加载中。。。</div>';      fetch(url, { method: "GET" })        .then((resp) => {          return Promise.all([            resp.ok,            resp.status,            resp.text(),            resp.headers,          ]);        })        .then(([ok, status, data, headers]) => {          if (ok) {            return {              ok,              status,              data,              headers,            };          } else {            throw new Error(JSON.stringify(json.error));          }        })        .then((resp) => {          let data = marked.parse(resp.data);          contentEl.innerHTML = data;        })        .catch((error) => {          console.log(error);          contentEl.innerHTML =            '<div style="font-size: 24px"><p>There was a problem loading the file!</p><p>加载文件时出现问题！</p></div>';        });    };  };  volantis.js("https://unpkg.com/volantis-static@0.0.1654736714924/libs/marked/marked.min.js").then(()=>{    loadMarkdown("/md/md_example.md?t=" + new Date().getTime());  })})();</script>              </div>            </details><p>当然folding的颜色是可选的。</p>]]></content>
      
      
      <categories>
          
          <category> Volantis主题 </category>
          
          <category> 用法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Volantis主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataWhaleX魔搭_AI夏令营_四期AIGC方向_task03</title>
      <link href="/2024/08/17/DataWhaleX%E9%AD%94%E6%90%AD-AI%E5%A4%8F%E4%BB%A4%E8%90%A5-%E5%9B%9B%E6%9C%9FAIGC%E6%96%B9%E5%90%91-task03/"/>
      <url>/2024/08/17/DataWhaleX%E9%AD%94%E6%90%AD-AI%E5%A4%8F%E4%BB%A4%E8%90%A5-%E5%9B%9B%E6%9C%9FAIGC%E6%96%B9%E5%90%91-task03/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>DataWhaleX魔搭_AI夏令营_四期AIGC方向_task03 学习笔记</p><span id="more"></span><h2 id="任务详情"><a href="#任务详情" class="headerlink" title="任务详情"></a>任务详情</h2><p>进阶上分-实战优化：我们今天的任务是了解微调的基本原理，对微调的各种参数有一个更加清楚的了解，来实现一个更好的效果，以及文生图的工作流平台工具ComfyUI，实现一个更加高度定制的文生图。</p><h2 id="ComfyUI"><a href="#ComfyUI" class="headerlink" title="ComfyUI"></a>ComfyUI</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>ComfyUI 是GUI的一种，是基于节点工作的用户界面，主要用于操作图像的生成技术，ComfyUI 的特别之处在于它采用了一种模块化的设计，把图像生成的过程分解成了许多小的步骤，每个步骤都是一个节点。这些节点可以连接起来形成一个工作流程，这样用户就可以根据需要定制自己的图像生成过程。</p><div class="note quote"><p>ComfyUI : The most powerful and modular stable diffusion GUI and backend.</p></div><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/63e554df00e3eaaade16d450c74de99f481184837.png' data-fancybox='default' data-caption='ComfyUI图片生成流程'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/63e554df00e3eaaade16d450c74de99f481184837.png" alt="ComfyUI图片生成流程"></a><span class='image-caption'>ComfyUI图片生成流程</span></div></div><h3 id="找到的一些学习资料"><a href="#找到的一些学习资料" class="headerlink" title="找到的一些学习资料"></a>找到的一些学习资料</h3><div class="tag link"><a class="link-card" title="ComfyUI_GitHub地址" href="https://github.com/comfyanonymous/ComfyUI"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">ComfyUI_GitHub地址</p><p class="url">https://github.com/comfyanonymous/ComfyUI</p></div></a></div><div class="tag link"><a class="link-card" title="社区地址" href="https://openart.ai/workflows/home"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">社区地址</p><p class="url">https://openart.ai/workflows/home</p></div></a></div><div class="tag link"><a class="link-card" title="一个相关教程" href="https://www.uisdc.com/stable-diffusion-comfyui"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">一个相关教程</p><p class="url">https://www.uisdc.com/stable-diffusion-comfyui</p></div></a></div><div class="tag link"><a class="link-card" title="魔搭社区教程" href="https://www.bilibili.com/video/BV1nT421k7Fa/?share_source=copy_web&vd_source=c806d41a4bffef5b492529ce1bae16d6"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">魔搭社区教程</p><p class="url">https://www.bilibili.com/video/BV1nT421k7Fa/?share_source=copy_web&vd_source=c806d41a4bffef5b492529ce1bae16d6</p></div></a></div><h3 id="ComfyUI的优势"><a href="#ComfyUI的优势" class="headerlink" title="ComfyUI的优势"></a>ComfyUI的优势</h3><details yellow open><summary> ComfyUI的优势 </summary>              <div class='content'>              <ol><li>模块化和灵活性：ComfyUI 提供了一个模块化的系统，用户可以通过拖放不同的模块来构建复杂的工作流程。这种灵活性允许用户根据自己的需求自由组合和调整模型、输入、输出、和其他处理步骤。</li><li>可视化界面：ComfyUI 提供了直观的图形界面，使得用户能够更清晰地理解和操作复杂的 AI 模型和数据流。这对没有编程背景的用户特别有帮助，使他们能够轻松构建和管理工作流程。</li><li>多模型支持：ComfyUI 支持多个不同的生成模型，用户可以在同一平台上集成和切换使用不同的模型，从而实现更广泛的应用场景。</li><li>调试和优化：通过其可视化界面，ComfyUI 使得调试生成过程变得更简单。用户可以轻松地追踪数据流，识别并解决问题，从而优化生成结果。</li><li>开放和可扩展：ComfyUI 是一个开源项目，具有高度的可扩展性。开发者可以根据需要编写新的模块或插件，扩展系统功能，并根据项目需求进行定制。</li><li>用户友好性：尽管其功能强大，但 ComfyUI 仍然保持了用户友好性，即使对于复杂任务，也能以相对简单的方式完成，使其成为生成式 AI 工作流程管理的有力工具。</li></ol>              </div>            </details><h3 id="使用魔搭社区提供的Notebook和免费的GPU算力体验来体验ComfyUI"><a href="#使用魔搭社区提供的Notebook和免费的GPU算力体验来体验ComfyUI" class="headerlink" title="使用魔搭社区提供的Notebook和免费的GPU算力体验来体验ComfyUI"></a>使用魔搭社区提供的Notebook和免费的GPU算力体验来体验ComfyUI</h3><h4 id="Notebook"><a href="#Notebook" class="headerlink" title="Notebook"></a>Notebook</h4><p>依然在魔搭社区打开GPU环境Notebook。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/3fd25fbeeda8155c0ba5d70b13b6e311481184837.png' data-fancybox='default' data-caption='打开Notebook'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/3fd25fbeeda8155c0ba5d70b13b6e311481184837.png" alt="打开Notebook"></a><span class='image-caption'>打开Notebook</span></div></div><h4 id="下载脚本代码文件"><a href="#下载脚本代码文件" class="headerlink" title="下载脚本代码文件"></a>下载脚本代码文件</h4><p>新建一个terminal，下载安装<code>ComfyUI的执行文件</code>和<code>task1中微调完成Lora文件</code>。</p><pre><code>git lfs installgit clone https://www.modelscope.cn/datasets/maochase/kolors_test_comfyui.gitmv kolors_test_comfyui/* ./rm -rf kolors_test_comfyui/mkdir -p /mnt/workspace/models/lightning_logs/version_0/checkpoints/mv epoch=0-step=500.ckpt /mnt/workspace/models/lightning_logs/version_0/ checkpoints/</code></pre><h4 id="进入ComfyUI的安装部署文件"><a href="#进入ComfyUI的安装部署文件" class="headerlink" title="进入ComfyUI的安装部署文件"></a>进入ComfyUI的安装部署文件</h4><p>双击进入ComfyUI.ipynb文件。一键执行安装程序。（点击Restart按钮）</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/27c07b5a864222683b5e54e868c2d873481184837.png' data-fancybox='default' data-caption='进入文件'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/27c07b5a864222683b5e54e868c2d873481184837.png" alt="进入文件"></a><span class='image-caption'>进入文件</span></div></div><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/42217919ddfd7a10219c629a12b5e609481184837.png' data-fancybox='default' data-caption='运行'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/42217919ddfd7a10219c629a12b5e609481184837.png" alt="运行"></a><span class='image-caption'>运行</span></div></div><h4 id="进入预览界面"><a href="#进入预览界面" class="headerlink" title="进入预览界面"></a>进入预览界面</h4><p>当执行到最后一个节点的内容输出了一个访问的链接的时候，复制链接到浏览器中访问。</p><div class="note guide clear"><p>不需要等待全部代码运行完毕，只需要等到链接出现即可打开它。</p></div><div class="note warning"><p>如果链接访问白屏，或者报错，就等一会再访问重试，程序可能没有正常启动完毕。</p></div><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/d798f7271d3c4281e7488e3bea09f9f3481184837.png' data-fancybox='default' data-caption='打开这样的链接'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/d798f7271d3c4281e7488e3bea09f9f3481184837.png" alt="打开这样的链接"></a><span class='image-caption'>打开这样的链接</span></div></div><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/4c2a76e8175cf263ec985c5fac6de4cf481184837.png' data-fancybox='default' data-caption='进入连接以后的主界面'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/4c2a76e8175cf263ec985c5fac6de4cf481184837.png" alt="进入连接以后的主界面"></a><span class='image-caption'>进入连接以后的主界面</span></div></div><h4 id="下载工作流脚本"><a href="#下载工作流脚本" class="headerlink" title="下载工作流脚本"></a>下载工作流脚本</h4><p>本次Task用到两个工作流脚本，在下方的夸克网盘中。</p><div class="tag link"><a class="link-card" title="工作流脚本" href="https://pan.quark.cn/s/d5bbb9235c91"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">工作流脚本</p><p class="url">https://pan.quark.cn/s/d5bbb9235c91</p></div></a></div><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/0d83ace03e1658c082e888e96ff076a8481184837.png' data-fancybox='default' data-caption='网盘链接内容'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/0d83ace03e1658c082e888e96ff076a8481184837.png" alt="网盘链接内容"></a><span class='image-caption'>网盘链接内容</span></div></div><p>首先下载kolors_example.json文件。点击ComfyUI主界面上的”Load”按钮，选择刚刚下载的文件，输入你的正向提示词、反向提示词后，点击Queue Prompt按钮运行。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/627e7d4903bfa07dfb0544238f7f5d98481184837.png' data-fancybox='default' data-caption='点击运行'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/627e7d4903bfa07dfb0544238f7f5d98481184837.png" alt="点击运行"></a><span class='image-caption'>点击运行</span></div></div><p>以上的文件是不带Lora的工作流样例。接下来我们使用带Lora的工作流样例来生成图片。</p><ol><li>这里的Lora是我们Task1微调训练出来的文件</li><li>地址是：&#x2F;mnt&#x2F;workspace&#x2F;models&#x2F;lightning_logs&#x2F;version_0&#x2F;checkpoints&#x2F;epoch&#x3D;0-step&#x3D;500.ckpt</li><li>如有有其他的Lora文件，可以在下面截图Lora文件地址区域更换成自己的地址</li></ol><p>同样地，先Load，再写提示词，最后生成图片。</p><h3 id="一些学习网站"><a href="#一些学习网站" class="headerlink" title="一些学习网站"></a>一些学习网站</h3><table><thead><tr><th>名称</th><th>链接地址</th></tr></thead><tbody><tr><td>在魔搭使用ComfyUI，玩转AIGC！</td><td><a href="https://modelscope.cn/headlines/article/429">https://modelscope.cn/headlines/article/429</a></td></tr><tr><td>ComfyUI的官方地址</td><td><a href="https://github.com/comfyanonymous/ComfyUI">https://github.com/comfyanonymous/ComfyUI</a></td></tr><tr><td>ComfyUI官方示范</td><td><a href="https://comfyanonymous.github.io/ComfyUI_examples/">https://comfyanonymous.github.io/ComfyUI_examples/</a></td></tr><tr><td>别人的基础工作流示范</td><td><a href="https://github.com/cubiq/ComfyUI_Workflows">https://github.com/cubiq/ComfyUI_Workflows</a></td></tr><tr><td></td><td><a href="https://github.com/wyrde/wyrde-comfyui-workflows">https://github.com/wyrde/wyrde-comfyui-workflows</a></td></tr><tr><td>工作流分享网站</td><td><a href="https://comfyworkflows.com/">https://comfyworkflows.com/</a></td></tr><tr><td>推荐一个比较好的comfyui的github仓库网站</td><td><a href="https://github.com/ZHO-ZHO-ZHO/ComfyUI-Workflows-ZHO?tab=readme-ov-file">https://github.com/ZHO-ZHO-ZHO/ComfyUI-Workflows-ZHO?tab=readme-ov-file</a></td></tr></tbody></table><p>魔搭官方教程：</p><div class="tag link"><a class="link-card" title="ComfyUI应用场景探索" href="https://www.bilibili.com/video/BV1nT421k7Fa/?share_source=copy_web&vd_source=c806d41a4bffef5b492529ce1bae16d6"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">ComfyUI应用场景探索</p><p class="url">https://www.bilibili.com/video/BV1nT421k7Fa/?share_source=copy_web&vd_source=c806d41a4bffef5b492529ce1bae16d6</p></div></a></div><h2 id="Lora微调"><a href="#Lora微调" class="headerlink" title="Lora微调"></a>Lora微调</h2><h3 id="Lora简介"><a href="#Lora简介" class="headerlink" title="Lora简介"></a>Lora简介</h3><p>LoRA (Low-Rank Adaptation) 微调是一种用于在预训练模型上进行高效微调的技术。它可以通过高效且灵活的方式实现模型的个性化调整，使其能够适应特定的任务或领域，同时保持良好的泛化能力和较低的资源消耗。这对于推动大规模预训练模型的实际应用至关重要。</p><h4 id="Lora微调的原理"><a href="#Lora微调的原理" class="headerlink" title="Lora微调的原理"></a>Lora微调的原理</h4><p>LoRA通过在预训练模型的关键层中添加低秩矩阵来实现。这些低秩矩阵通常被设计成具有较低维度的参数空间，这样它们就可以在不改变模型整体结构的情况下进行微调。在训练过程中，只有这些新增的低秩矩阵被更新，而原始模型的大部分权重保持不变。</p><div class="tag link"><a class="link-card" title="通俗易懂理解全量微调和LoRA微调" href="https://www.bilibili.com/video/BV1tthPeFEWb/?share_source=copy_web&vd_source=c806d41a4bffef5b492529ce1bae16d6"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">通俗易懂理解全量微调和LoRA微调</p><p class="url">https://www.bilibili.com/video/BV1tthPeFEWb/?share_source=copy_web&vd_source=c806d41a4bffef5b492529ce1bae16d6</p></div></a></div><h4 id="Lora微调的优势"><a href="#Lora微调的优势" class="headerlink" title="Lora微调的优势"></a>Lora微调的优势</h4><ol><li>快速适应新任务<br>在特定领域有少量标注数据的情况下，也可以有效地对模型进行个性化调整，可以迅速适应新的领域或特定任务。</li><li>保持泛化能力<br>LoRA通过微调模型的一部分，有助于保持模型在未见过的数据上的泛化能力，同时还能学习到特定任务的知识。</li><li>资源效率<br>LoRA旨在通过仅微调模型的部分权重，而不是整个模型，从而减少所需的计算资源和存储空间。</li></ol><h3 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h3><details green open><summary> Task2中的的微调代码 </summary>              <div class='content'>              <p>import os<br>cmd &#x3D; “””<br>python DiffSynth-Studio&#x2F;examples&#x2F;train&#x2F;kolors&#x2F;train_kolors_lora.py \ # 选择使用可图的Lora训练脚本DiffSynth-Studio&#x2F;examples&#x2F;train&#x2F;kolors&#x2F;train_kolors_lora.py<br>  –pretrained_unet_path models&#x2F;kolors&#x2F;Kolors&#x2F;unet&#x2F;diffusion_pytorch_model.safetensors \ # 选择unet模型<br>  –pretrained_text_encoder_path models&#x2F;kolors&#x2F;Kolors&#x2F;text_encoder \ # 选择text_encoder<br>  –pretrained_fp16_vae_path models&#x2F;sdxl-vae-fp16-fix&#x2F;diffusion_pytorch_model.safetensors \ # 选择vae模型<br>  –lora_rank 16 \ # lora_rank 16 表示在权衡模型表达能力和训练效率时，选择了使用 16 作为秩，适合在不显著降低模型性能的前提下，通过 LoRA 减少计算和内存的需求<br>  –lora_alpha 4.0 \ # 设置 LoRA 的 alpha 值，影响调整的强度<br>  –dataset_path data&#x2F;lora_dataset_processed \ # 指定数据集路径，用于训练模型<br>  –output_path .&#x2F;models \ # 指定输出路径，用于保存模型<br>  –max_epochs 1 \ # 设置最大训练轮数为 1<br>  –center_crop \ # 启用中心裁剪，这通常用于图像预处理<br>  –use_gradient_checkpointing \ # 启用梯度检查点技术，以节省内存<br>  –precision “16-mixed” # 指定训练时的精度为混合 16 位精度（half precision），这可以加速训练并减少显存使用<br>“””.strip()<br>os.system(cmd) # 执行可图Lora训练    </p>              </div>            </details><table><thead><tr><th>参数名称</th><th>参数值</th><th>说明</th></tr></thead><tbody><tr><td>pretrained_unet_path</td><td>models&#x2F;kolors&#x2F;Kolors&#x2F;unet&#x2F;diffusion_pytorch_model.safetensors</td><td>指定预训练UNet模型的路径</td></tr><tr><td>pretrained_text_encoder_path</td><td>models&#x2F;kolors&#x2F;Kolors&#x2F;text_encoder</td><td>指定预训练文本编码器的路径</td></tr><tr><td>pretrained_fp16_vae_path</td><td>models&#x2F;sdxl-vae-fp16-fix&#x2F;diffusion_pytorch_model.safetensors</td><td>指定预训练VAE模型的路径</td></tr><tr><td>lora_rank</td><td>16</td><td>设置LoRA的秩（rank），影响模型的复杂度和性能</td></tr><tr><td>lora_alpha</td><td>4</td><td>设置LoRA的alpha值，控制微调的强度</td></tr><tr><td>dataset_path</td><td>data&#x2F;lora_dataset_processed</td><td>指定用于训练的数据集路径</td></tr><tr><td>output_path</td><td>.&#x2F;models</td><td>指定训练完成后保存模型的路径</td></tr><tr><td>max_epochs</td><td>1</td><td>设置最大训练轮数为1</td></tr><tr><td>center_crop</td><td></td><td>启用中心裁剪，用于图像预处理</td></tr><tr><td>use_gradient_checkpointing</td><td></td><td>启用梯度检查点，节省显存</td></tr><tr><td>precision</td><td>“16-mixed”</td><td>设置训练时的精度为混合16位精度（half precision）</td></tr></tbody></table><h3 id="UNet、VAE和文本编码器的协作关系"><a href="#UNet、VAE和文本编码器的协作关系" class="headerlink" title="UNet、VAE和文本编码器的协作关系"></a>UNet、VAE和文本编码器的协作关系</h3><ul><li><p>UNet：负责根据输入的噪声和文本条件生成图像。在Stable Diffusion模型中，UNet接收由VAE编码器产生的噪声和文本编码器转换的文本向量作为输入，并预测去噪后的噪声，从而生成与文本描述相符的图像</p></li><li><p>VAE：生成模型，用于将输入数据映射到潜在空间，并从中采样以生成新图像。在Stable Diffusion中，VAE编码器首先生成带有噪声的潜在表示，这些表示随后与文本条件一起输入到UNet中</p></li><li><p>文本编码器：将文本输入转换为模型可以理解的向量表示。在Stable Diffusion模型中，文本编码器使用CLIP模型将文本提示转换为向量，这些向量与VAE生成的噪声一起输入到UNet中，指导图像的生成过程</p></li></ul><h2 id="高质量的数据集"><a href="#高质量的数据集" class="headerlink" title="高质量的数据集"></a>高质量的数据集</h2><p>当我们进行图片生成相关的工作时，选择合适的数据集是非常重要的。</p><p>推荐自学python爬取网站数据。爬虫教程推荐慕课上的。</p><p>爬虫对于想要用AI生成某动漫或漫画画风的作品的同学十分具有针对性。如，如果想生成一个长得像《瑞克与莫蒂》作品中姥爷的科学家，就需要用爬虫去爬取网页上的数据了。这是使用其他数据收集方式无法做到的。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Datawhale_AI夏令营 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataWhaleX魔搭_AI夏令营_四期AIGC方向_task02</title>
      <link href="/2024/08/14/DataWhaleX%E9%AD%94%E6%90%AD-AI%E5%A4%8F%E4%BB%A4%E8%90%A5-%E5%9B%9B%E6%9C%9FAIGC%E6%96%B9%E5%90%91-task02/"/>
      <url>/2024/08/14/DataWhaleX%E9%AD%94%E6%90%AD-AI%E5%A4%8F%E4%BB%A4%E8%90%A5-%E5%9B%9B%E6%9C%9FAIGC%E6%96%B9%E5%90%91-task02/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>DataWhaleX魔搭_AI夏令营_四期AIGC方向_task02 学习笔记</p><span id="more"></span><p>接上文。</p><div class="tag link"><a class="link-card" title="task01 学习笔记" href="local/2024/08/09/DataWhale-AI夏令营-四期AIGC方向-task01/"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">task01 学习笔记</p><p class="url">local/2024/08/09/DataWhale-AI夏令营-四期AIGC方向-task01/</p></div></a></div><p>本次的任务是利用AI继续精读代码、利用AI完成一次比赛任务。</p><h2 id="AI生图前沿"><a href="#AI生图前沿" class="headerlink" title="AI生图前沿"></a>AI生图前沿</h2><p>在仔细阅读Task02所给的教程之后，我内心其实是有一些震惊的。在上一篇学习笔记中，我也大量地提到了AI生图目前的局限性——我提到了细节绘图能力不行、画不好手等等，但教程中的信息告诉我，这都是一年多前的老黄历了，目前业界已有相当多的解决方案。</p><div class="note quote"><p>给图片里的人手打上标记，像把手掌、拇指、食指啥的，都给清楚地标出来</p></div><p>是的，这个解决方案在我的上一篇笔记中也设想过……虽然麻烦，但是确实是有效的。</p><p>过去文生图主要以 SD 系列基础模型为主，仅支持英文的prompt，但可图是支持中文的文生图模型，文生图的prompt格式较为固定，魔搭社区还开源了专门的各种风格的<a href="https://modelscope.cn/datasets/modelscope/Kolors_awesome_prompts/dataPeview">可图优质咒语书</a>，可以针对600+种不同风格，完善prompt，生成各种风格图片，可以在我们的学习当中使用。</p><p>这样一来，我们对于prompt的使用不局限于第三方工具了。同时，我经过测试发现，靠前的prompt似乎权重更大。</p><p>在我的上一篇文章中，还提到了AI生成图片时一般无法正确生成文字的问题。看过教程后我发现，这一点竟然也已经有了解决方案。</p><div class="note quote"><p>在某些设计的场景中，我们还希望AI能为我们将特定的文字生成在图片当中，比如下面这种海报——</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/847661f351d9cb947e4c0df54ec2d0bd481184837.png' data-fancybox='default' data-caption='AI生成的海报'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/847661f351d9cb947e4c0df54ec2d0bd481184837.png" alt="AI生成的海报"></a><span class='image-caption'>AI生成的海报</span></div></div><p>但实际上，这种固定文字生成，往往难度较大，一是具体生成在哪些位置，往往需要人为设定，为了更方便地制作类似这样的海报还产生了PS等图片编辑工具，才能实现相应的效果，想要让AI稳定生成相似效果的图片可想而知难度之大。</p><p>像我们Task1中介绍的<a href="https://modelscope.cn/studios/iic/PosterGenius"> <strong>创意海报生成</strong> </a>工具，早已在代码中固定了相应的文字位置和对应的字体，才能进行相应的生成，且大概率是进行了两个步骤——</p><ul><li>一个步骤是AI生成背景，</li><li>另一个步骤是通过代码将对应的文字显示到对应位置，</li><li>然后渲染，合成图片，给到我们。</li></ul></div><p>这真的让我比较吃惊了，虽然是通过曲线救国的方式，但确实解决了一大难题，使得AI生图能在更多更广的领域派上用场。</p><p>总之，我发现我对于AI生图的理解（上一篇笔记中聊到的）竟然相当过时了。我确实是在23年年底一段时间关注该领域相当多，但我没想到技术发展这么快，很多当时认为的难点都已经早早攻克了。我对AI生图，包括AI生成视频（我得也再多多关注一下生成视频的新发展）原本是不报有很大的希望的，认为短时间内它们还不能取代人类工作者，但现在我认为在一般的领域，它们已经完全可以胜任工作了。上面那张海报真的让我看傻了，直接给我的话，我绝对是分辨不出来的。<del>这一顿吃多少画师啊。</del></p><p>魔搭社区在学习方面确实有着相当丰富的资料，这些工具也相当好用啊。</p><div class="tag link"><a class="link-card" title="再放一下魔搭主页" href="https://modelscope.cn/home"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">再放一下魔搭主页</p><p class="url">https://modelscope.cn/home</p></div></a></div><p>写笔记写到这里，我也去试了试魔搭的海报生成工具。效果其实还算中规中矩吧，并没有上图宣传的那么震撼，也可能是我的prompt描述不到位。但是这个工具集成了AI扩展文本描述和扩展提示词，有几种风格可以选择，还可以提升结果分辨率和做细节修复，总的来说呢还是很好用的，应付一般需求是足够的。</p><p>我是顺手拿这个工具做了两张海报。</p><div class="tabs" id="tab-海报"><ul class="nav-tabs"><li class="tab active"><a class="#海报-1">海报1</a></li><li class="tab"><a class="#海报-2">海报2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="海报-1"><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/64420862cace33310409919421565048481184837.png' data-fancybox='default' data-caption='海报1'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/64420862cace33310409919421565048481184837.png" alt="海报1"></a><span class='image-caption'>海报1</span></div></div></div><div class="tab-pane" id="海报-2"><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/fbe887beca83d008740708ec3e580264481184837.png' data-fancybox='default' data-caption='海报2'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/fbe887beca83d008740708ec3e580264481184837.png" alt="海报2"></a><span class='image-caption'>海报2</span></div></div></div></div></div><p>总之，可以直接使用，就算不太满意，上PS稍微调一调、多加点元素绝对没问题了。</p><h2 id="向AI提问、精读代码"><a href="#向AI提问、精读代码" class="headerlink" title="向AI提问、精读代码"></a>向AI提问、精读代码</h2><h3 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h3><p>本次Task主要任务是通过提问AI的方式来精读baseline代码，夏令营使用的是通义千问大语言模型。</p><p>我日常使用大语言模型还是比较频繁的，主要使用的是文心一言、讯飞星火和ChatGPT。ChatGPT我身边很多同学使用国内不知道哪儿找的，应该是调用的接口，也可以正常使用。我是魔法上网在官网用的，当初GPT推出以后没多久就搞了国外临时手机号注册的，不知道现在那方法还能不能用。这样算有利有弊吧，利的方面来说我可以肯定我这是ChatGPT，而我同学们使用的，我仔细观察总觉得是骗人的，看着还挺智障的，并且我没花钱（搞国外临时手机号花了一点点来着）（可能他们那种也没花钱，这要看搞这东西的人的良心的）。弊的方面来讲，我是永远不会使用新的GPT的，一直只用了3.5，是因为没精力搞，也是因为没钱，而我的同学们那种呢，反正宣传上是4.0。是不是真的4.0呢？可能吧~</p><p>关于各厂家的大语言模型实际使用体验怎么样，我也不在这里多说。其实我认为，用着顺手的就是好的。平常不太重要的事情我就问讯飞星火了，我爸公司经常需要做PPT，我爸也不会，我也准备给他推荐讯飞星火了。涉及一些有风险的事情，我就去魔法上网问问ChatGPT，<psw>比如写思政课论文</psw>。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>代码在Task02任务文档中给出。</p><div class="note warning"><ol><li>以下代码为方便大家阅读理解，故放在了一起。但不能一键运行跑通，如何跑通代码，请直接参考task1中的内容。</li></ol></div><p>代码内容比较长，并且在本篇文章中我们不需要人为的去一字一句看代码，因此我将其放入folding中以便展开和收起。</p><details blue><summary> 代码点这里 </summary>              <div class='content'>              <div id="md-941c9898-d075-ad94-8e83-cc743d118e85" class="tag-md markdown-body"></div><script>(()=>{  volantis.css("https://unpkg.com/volantis-static@0.0.1654736714924/libs/github-markdown-css/github-markdown.css");  const contentEl = document.getElementById("md-941c9898-d075-ad94-8e83-cc743d118e85");  const loadMarkdown = (url) => {    if (!window.fetch) {      contentEl.innerHTML =        '<div style="font-size: 24px"><p>Your browser outdated. Please use the latest version of Chrome or Firefox!</p><p>您的浏览器版本过低，请使用最新版的 Chrome 或 Firefox 浏览器！</p></div>';    } else {      contentEl.innerHTML =        '<div style="font-size: 24px">Loading ... | 加载中。。。</div>';      fetch(url, { method: "GET" })        .then((resp) => {          return Promise.all([            resp.ok,            resp.status,            resp.text(),            resp.headers,          ]);        })        .then(([ok, status, data, headers]) => {          if (ok) {            return {              ok,              status,              data,              headers,            };          } else {            throw new Error(JSON.stringify(json.error));          }        })        .then((resp) => {          let data = marked.parse(resp.data);          contentEl.innerHTML = data;        })        .catch((error) => {          console.log(error);          contentEl.innerHTML =            '<div style="font-size: 24px"><p>There was a problem loading the file!</p><p>加载文件时出现问题！</p></div>';        });    };  };  volantis.js("https://unpkg.com/volantis-static@0.0.1654736714924/libs/marked/marked.min.js").then(()=>{    loadMarkdown("/md/datawhale_AI_code01.md?t=" + new Date().getTime());  })})();</script>              </div>            </details><p>首先我们来直观感知下这个文生图代码的框架结构：</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/984f647724ddb472cd0bc7bee867ef36481184837.png' data-fancybox='default' data-caption='代码框架结构'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/984f647724ddb472cd0bc7bee867ef36481184837.png" alt="代码框架结构"></a><span class='image-caption'>代码框架结构</span></div></div><h3 id="分析代码的主体架构"><a href="#分析代码的主体架构" class="headerlink" title="分析代码的主体架构"></a>分析代码的主体架构</h3><p>依然还是老样子，我们需要一个prompt。</p><pre><code>你是一个优秀的python开发工程师，现在我们需要你帮我们分析这个代码的主体框架，你需要把代码按照工作流分成几部分，用中文回答我的问题。&#123;此处替换前面的代码&#125;</code></pre><p>打开（随便一个）大语言模型，输入上面的prompt。</p><p>等一下，我突然发现一件事：我现在使用的不是3.5，而是ChatGPT 4o mini。不过这不是什么重要的事情了。</p><p>来看看它的输出。因为有大标题小标题啥的，而且直接复制也是MarkDown形式，我使用外部.md文件的形式来呈现。</p><details green open><summary> 输出 </summary>              <div class='content'>              <div id="md-d5e5182a-6ed4-2722-8a50-f33710ef9405" class="tag-md markdown-body"></div><script>(()=>{  volantis.css("https://unpkg.com/volantis-static@0.0.1654736714924/libs/github-markdown-css/github-markdown.css");  const contentEl = document.getElementById("md-d5e5182a-6ed4-2722-8a50-f33710ef9405");  const loadMarkdown = (url) => {    if (!window.fetch) {      contentEl.innerHTML =        '<div style="font-size: 24px"><p>Your browser outdated. Please use the latest version of Chrome or Firefox!</p><p>您的浏览器版本过低，请使用最新版的 Chrome 或 Firefox 浏览器！</p></div>';    } else {      contentEl.innerHTML =        '<div style="font-size: 24px">Loading ... | 加载中。。。</div>';      fetch(url, { method: "GET" })        .then((resp) => {          return Promise.all([            resp.ok,            resp.status,            resp.text(),            resp.headers,          ]);        })        .then(([ok, status, data, headers]) => {          if (ok) {            return {              ok,              status,              data,              headers,            };          } else {            throw new Error(JSON.stringify(json.error));          }        })        .then((resp) => {          let data = marked.parse(resp.data);          contentEl.innerHTML = data;        })        .catch((error) => {          console.log(error);          contentEl.innerHTML =            '<div style="font-size: 24px"><p>There was a problem loading the file!</p><p>加载文件时出现问题！</p></div>';        });    };  };  volantis.js("https://unpkg.com/volantis-static@0.0.1654736714924/libs/marked/marked.min.js").then(()=>{    loadMarkdown("/md/datawhale_AI_md01.md?t=" + new Date().getTime());  })})();</script>              </div>            </details><h3 id="逐行解释代码"><a href="#逐行解释代码" class="headerlink" title="逐行解释代码"></a>逐行解释代码</h3><p>prompt:</p><pre><code>你是一个优秀的python开发工程师，现在我们需要你帮我们逐行分析这个代码，用中文回答我的问题。&#123;此处替换前面的代码&#125;</code></pre><details green open><summary> 输出 </summary>              <div class='content'>              <div id="md-b0d522e4-b49a-1cbb-8fc2-74e3d5ece3b7" class="tag-md markdown-body"></div><script>(()=>{  volantis.css("https://unpkg.com/volantis-static@0.0.1654736714924/libs/github-markdown-css/github-markdown.css");  const contentEl = document.getElementById("md-b0d522e4-b49a-1cbb-8fc2-74e3d5ece3b7");  const loadMarkdown = (url) => {    if (!window.fetch) {      contentEl.innerHTML =        '<div style="font-size: 24px"><p>Your browser outdated. Please use the latest version of Chrome or Firefox!</p><p>您的浏览器版本过低，请使用最新版的 Chrome 或 Firefox 浏览器！</p></div>';    } else {      contentEl.innerHTML =        '<div style="font-size: 24px">Loading ... | 加载中。。。</div>';      fetch(url, { method: "GET" })        .then((resp) => {          return Promise.all([            resp.ok,            resp.status,            resp.text(),            resp.headers,          ]);        })        .then(([ok, status, data, headers]) => {          if (ok) {            return {              ok,              status,              data,              headers,            };          } else {            throw new Error(JSON.stringify(json.error));          }        })        .then((resp) => {          let data = marked.parse(resp.data);          contentEl.innerHTML = data;        })        .catch((error) => {          console.log(error);          contentEl.innerHTML =            '<div style="font-size: 24px"><p>There was a problem loading the file!</p><p>加载文件时出现问题！</p></div>';        });    };  };  volantis.js("https://unpkg.com/volantis-static@0.0.1654736714924/libs/marked/marked.min.js").then(()=>{    loadMarkdown("/md/datawhale_AI_md02.md?t=" + new Date().getTime());  })})();</script>              </div>            </details><h2 id="实战演练"><a href="#实战演练" class="headerlink" title="实战演练"></a>实战演练</h2><p>这次我选择魔搭平台GPU免费Notebook实例。</p><p>让ChatGPT帮我选的故事主题、写的故事梗概、写的prompt，自己稍微调整了一下prompt。</p><h3 id="故事主题：时间旅行的笑话-主角偶然发现了一个时间旅行的装置，但每次使用都会发生搞笑的意外情况。"><a href="#故事主题：时间旅行的笑话-主角偶然发现了一个时间旅行的装置，但每次使用都会发生搞笑的意外情况。" class="headerlink" title="故事主题：时间旅行的笑话-主角偶然发现了一个时间旅行的装置，但每次使用都会发生搞笑的意外情况。"></a>故事主题：时间旅行的笑话-主角偶然发现了一个时间旅行的装置，但每次使用都会发生搞笑的意外情况。</h3><h3 id="内容："><a href="#内容：" class="headerlink" title="内容："></a>内容：</h3><div class="timeline"><p class='p h2'>故事内容详述</p><div class="timenode"><div class="meta"><p><p>第1格</p></p></div><div class="body"><p>画面：一个不起眼的车库里，一名主角（可以是一个有点邋遢的科学家或发明家）在摆弄一个看起来非常复杂的机器。机器上贴满了“警告”和“试验中”的标签。</p><p>文字：主角自言自语：“今天是大日子，我终于完成了我的时间旅行机！”</p></div></div><div class="timenode"><div class="meta"><p><p>第2格</p></p></div><div class="body"><p>画面：主角激动地按下机器上的大按钮，机器开始发出闪烁的灯光和奇怪的声音。<br>文字：主角兴奋地说：“让我们看看未来有什么有趣的事物吧！”</p></div></div><div class="timenode"><div class="meta"><p><p>第3格</p></p></div><div class="body"><p>画面：机器在闪烁光芒中开始旋转，主角突然消失，周围的物品也跟着闪烁。<br>文字：旁白：“经过一阵强烈的光芒，主角进入了未来。”</p></div></div><div class="timenode"><div class="meta"><p><p>第4格</p></p></div><div class="body"><p>画面：主角出现在一个看起来很平常的现代办公室里，四周是高科技设备和未来风格的办公桌。<br>文字：主角满怀期待地观察四周：“哇！这是未来吗？！”</p></div></div><div class="timenode"><div class="meta"><p><p>第5格</p></p></div><div class="body"><p>画面：一位未来的办公室职员（穿着超前卫的工作服）看到主角，表现出困惑和惊讶。<br>文字：职员说：“你是从哪里来的？今天不是穿越时空的日子。”</p></div></div><div class="timenode"><div class="meta"><p><p>第6格</p></p></div><div class="body"><p>画面：主角挠头，尴尬地解释：“呃，我好像搞错了日期，我以为这是未来的日子。”</p></div></div><div class="timenode"><div class="meta"><p><p>第7格</p></p></div><div class="body"><p>画面：职员微笑着，递给主角一个现代的日历和时光机的使用手册。<br>文字：职员说：“时间旅行有时需要准确的计划。这里是正确的时间表和使用指南。”</p></div></div><div class="timenode"><div class="meta"><p><p>第8格</p></p></div><div class="body"><p>画面：主角看着手中的日历和手册，一脸的无奈和搞笑的困惑。背景是未来办公室的职员们在窃笑。<br>文字：主角叹气道：“看来我得先学会时间管理了！”</p></div></div></div><h3 id="prompt"><a href="#prompt" class="headerlink" title="prompt"></a>prompt</h3><div class="timeline"><p class='p h2'>prompt</p><div class="timenode"><div class="meta"><p><p>第1格</p></p></div><div class="body"><div class="tabs" id="tab-prompt1"><ul class="nav-tabs"><li class="tab active"><a class="#prompt1-1">正向</a></li><li class="tab"><a class="#prompt1-2">反向</a></li></ul><div class="tab-content"><div class="tab-pane active" id="prompt1-1"><p>未调整：一个车库里，一名邋遢的科学家正在操作一个复杂的时间旅行机器。机器上贴满了‘警告’和‘试验中’的标签，科学家神情兴奋，车库里充满了各种工具和零件。</p><p>调整后：漫画风，美漫，一个车库里，一名邋遢的科学家正在头操作一个复杂的时间旅行机器，科学家只出现侧影，科学家胡子较长、头发是暗黄色的，体格壮实，大约四五十岁，佝偻着背，机器上贴满了标签，科学家神情兴奋，车库里充满了各种工具和零件。</p></div><div class="tab-pane" id="prompt1-2"><p>未调整：不要画一个干净整洁的实验室或现代化的研究环境，也不要画出没有标签和警告的机器。</p><p>调整后：二次元，不要出现科学家的正脸，不要出现歪曲的手指、膨大的关节，不要画一个干净整洁的实验室或现代化的研究环境，也不要画出没有标签和警告的机器。</p></div></div></div></div></div><div class="timenode"><div class="meta"><p><p>第2格</p></p></div><div class="body"><div class="tabs" id="tab-prompt2"><ul class="nav-tabs"><li class="tab active"><a class="#prompt2-1">正向</a></li><li class="tab"><a class="#prompt2-2">反向</a></li></ul><div class="tab-content"><div class="tab-pane active" id="prompt2-1"><p>未调整：科学家激动地按下时间旅行机器上的大按钮，机器开始发出闪烁的灯光和奇怪的声音。画面中可以看到按钮被按下，机器发出光芒。</p><p>调整后：漫画风，美漫，一个车库里，一名邋遢的科学家正在头操作一个复杂的时间旅行机器，科学家只出现侧影，科学家胡子较长、头发是暗黄色的，体格壮实，大约四五十岁，佝偻着背，机器上贴满了标签，科学家激动地按下时间旅行机器上的大按钮，机器发出光芒。</p></div><div class="tab-pane" id="prompt2-2"><p>未调整：不要画出没有任何动作的机器，或是科学家没有进行任何操作的画面。</p><p>调整后：二次元，不要出现科学家的正脸，不要出现歪曲的手指、膨大的关节，不要画一个干净整洁的实验室或现代化的研究环境，也不要画出没有标签和警告的机器，不要画出没有任何动作的机器，或是科学家没有进行任何操作的画面。</p></div></div></div></div></div><div class="timenode"><div class="meta"><p><p>第3格</p></p></div><div class="body"><div class="tabs" id="tab-prompt3"><ul class="nav-tabs"><li class="tab active"><a class="#prompt3-1">正向</a></li><li class="tab"><a class="#prompt3-2">反向</a></li></ul><div class="tab-content"><div class="tab-pane active" id="prompt3-1"><p>未调整：时间旅行机器在闪烁光芒中旋转，科学家和周围的物品一起被包裹在光芒中，画面中显示出物品和科学家被传送的效果。</p><p>调整后：漫画风，美漫，一个车库里，一名邋遢的科学家正在头操作一个复杂的时间旅行机器，科学家只出现侧影，科学家胡子较长、头发是暗黄色的，体格比一般人略微壮实一些，大约四五十岁，佝偻着背，机器上贴满了标签，时间旅行机器在剧烈的闪烁白色光芒中旋转，科学家和周围的物品一起被包裹在白色光芒中，画面中显示出物品和科学家被传送的效果。</p></div><div class="tab-pane" id="prompt3-2"><p>未调整：不要画出没有时间旅行效果的画面，也不要画出科学家静止不动的情况。</p><p>调整后：二次元，不要出现科学家的正脸，不要画一个肥胖的科学家，不要出现歪曲的手指、膨大的关节，不要画一个干净整洁的实验室或现代化的研究环境，也不要画出没有标签和警告的机器，不要画出没有时间旅行效果的画面，也不要画出科学家静止不动的情况。</p></div></div></div></div></div><div class="timenode"><div class="meta"><p><p>第4格</p></p></div><div class="body"><div class="tabs" id="tab-prompt4"><ul class="nav-tabs"><li class="tab active"><a class="#prompt4-1">正向</a></li><li class="tab"><a class="#prompt4-2">反向</a></li></ul><div class="tab-content"><div class="tab-pane active" id="prompt4-1"><p>未调整：科学家出现在一个现代办公室，办公室里有高科技设备和未来风格的办公桌。科学家看起来惊讶和好奇。</p><p>调整后：漫画风，美漫，画风写实、粗犷，一名邋遢的科学家出现在一个现代办公室，科学家胡子较长、头发是暗黄色的，体格壮实，大约四五十岁，佝偻着背，办公室里有高科技设备和未来风格的办公桌。科学家看起来惊讶和好奇。</p></div><div class="tab-pane" id="prompt4-2"><p>未调整：不要画传统或普通的办公室环境，也不要画出科学家没有表现出惊讶或好奇的情况。</p><p>调整后：二次元，不要出现歪曲的手指、膨大的关节，不要画传统或普通的办公室环境，也不要画出科学家没有表现出惊讶或好奇的情况。</p></div></div></div></div></div><div class="timenode"><div class="meta"><p><p>第5格</p></p></div><div class="body"><div class="tabs" id="tab-prompt5"><ul class="nav-tabs"><li class="tab active"><a class="#prompt5-1">正向</a></li><li class="tab"><a class="#prompt5-2">反向</a></li></ul><div class="tab-content"><div class="tab-pane active" id="prompt5-1"><p>未调整：一位未来风格的办公室职员穿着超前卫的工作服，看到科学家后表现出困惑和惊讶，背景是现代化的办公室。</p><p>调整后：漫画风，美漫，两个人面对面相隔较远，画出全身。一名邋遢的科学家，科学家胡子较长、头发是暗黄色的，体格壮实，大约四五十岁，佝偻着背，表情十分惊讶；一位未来风格的男性办公室职员，穿着超前卫的工作服，看到科学家后表现出一丝困惑和惊讶，背景是现代化的办公室。</p></div><div class="tab-pane" id="prompt5-2"><p>未调整：不要画穿着普通衣服的职员，也不要画出职员没有表现出困惑和惊讶的情景。</p><p>调整后：二次元，不要出现歪曲的手指、膨大的关节，不要画传统或普通的办公室环境，也不要画出科学家没有表现出惊讶或好奇的情况。不要画穿着普通衣服的职员，也不要画出职员没有表现出困惑和惊讶的情景。</p></div></div></div></div></div><div class="timenode"><div class="meta"><p><p>第6格</p></p></div><div class="body"><div class="tabs" id="tab-prompt6"><ul class="nav-tabs"><li class="tab active"><a class="#prompt6-1">正向</a></li><li class="tab"><a class="#prompt6-2">反向</a></li></ul><div class="tab-content"><div class="tab-pane active" id="prompt6-1"><p>未调整：科学家挠头，尴尬地解释自己的误会。画面中可以看到科学家手舞足蹈，职员则听着他的解释。</p><p>调整后：漫画风，美漫，两个主要人物。一名邋遢的科学家科学家挠头，科学家胡子较长、头发是暗黄色的，体格壮实，大约四五十岁，佝偻着背，画面中可以看到科学家手舞足蹈；另一名职员冷静地听着他的解释。背景是白色的未来风办公室。</p></div><div class="tab-pane" id="prompt6-2"><p>未调整：不要画出科学家没有任何动作或表情的画面，也不要画出职员没有听科学家解释的情况。</p><p>调整后：二次元，不要画出科学家没有任何动作或表情的画面，也不要画出职员没有听科学家解释的情况。</p></div></div></div></div></div><div class="timenode"><div class="meta"><p><p>第7格</p></p></div><div class="body"><div class="tabs" id="tab-prompt7"><ul class="nav-tabs"><li class="tab active"><a class="#prompt7-1">正向</a></li><li class="tab"><a class="#prompt7-2">反向</a></li></ul><div class="tab-content"><div class="tab-pane active" id="prompt7-1"><p>未调整：职员微笑着，递给科学家一个现代的日历和时间旅行机的使用手册。科学家看起来有些困惑但接受了这些物品。</p><p>调整后：漫画风，美漫，两个人面对面相隔较远，画出全身。一名职员微笑着，递给科学家一个现代的日历和一本使用手册；一名科学家，看起来有些困惑，接受了职员给的这些物品。科学家胡子较长、头发是暗黄色的，体格壮实，大约四五十岁，佝偻着背</p></div><div class="tab-pane" id="prompt7-2"><p>未调整：不要画出职员没有递送物品或科学家没有接受物品的画面。</p><p>调整后：二次元，不要画出职员没有递送物品或科学家没有接受物品的画面。</p></div></div></div></div></div><div class="timenode"><div class="meta"><p><p>第8格</p></p></div><div class="body"><div class="tabs" id="tab-prompt8"><ul class="nav-tabs"><li class="tab active"><a class="#prompt8-1">正向</a></li><li class="tab"><a class="#prompt8-2">反向</a></li></ul><div class="tab-content"><div class="tab-pane active" id="prompt8-1"><p>未调整：科学家看着手中的日历和手册，表现出无奈和搞笑的困惑，背景中职员们在窃笑。画面充满幽默感。</p><p>调整后：漫画风，美漫，科学家看着手中的日历和手册，表现出无奈和搞笑的困惑，背景中职员们在窃笑。画面充满幽默感。</p></div><div class="tab-pane" id="prompt8-2"><p>未调整：不要画出科学家没有任何情绪表现的画面，也不要画出背景中职员们没有表现出窃笑的情况。</p><p>调整后：二次元，不要画出科学家没有任何情绪表现的画面，也不要画出背景中职员们没有表现出窃笑的情况。</p></div></div></div></div></div></div><p>感觉似乎ChatGPT并不是十分理解什么是文生图prompt。而且为了上下图中人物长相的一致性，我们还需要增添许多细节描述。</p><h3 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h3><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery stretch" col='2' data-group='four'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/5d2b3ad6954c4c8947301ee9456370f0481184837.jpg' data-fancybox='four' data-caption='科学家自言自语：“今天是大日子，我终于完成了我的时间旅行机！”'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/5d2b3ad6954c4c8947301ee9456370f0481184837.jpg" alt="科学家自言自语：“今天是大日子，我终于完成了我的时间旅行机！”"></a><span class='image-caption'>科学家自言自语：“今天是大日子，我终于完成了我的时间旅行机！”</span></div></p><p><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/60a4700834924f76a1247f099a0d6502481184837.jpg' data-fancybox='four' data-caption='科学家兴奋地说：“让我们看看未来有什么有趣的事物吧！”'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/60a4700834924f76a1247f099a0d6502481184837.jpg" alt="科学家兴奋地说：“让我们看看未来有什么有趣的事物吧！”"></a><span class='image-caption'>科学家兴奋地说：“让我们看看未来有什么有趣的事物吧！”</span></div></p><p><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/499df67fb89dd7dd7b7022ccfe405630481184837.jpg' data-fancybox='four' data-caption='经过一阵强烈的光芒，科学家进入了未来。'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/499df67fb89dd7dd7b7022ccfe405630481184837.jpg" alt="经过一阵强烈的光芒，科学家进入了未来。"></a><span class='image-caption'>经过一阵强烈的光芒，科学家进入了未来。</span></div></p><p><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/165f2372dcbbad483f018d867d8ec0f3481184837.jpg' data-fancybox='four' data-caption='科学家满怀期待地观察四周：“哇！这是未来吗？！”'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/165f2372dcbbad483f018d867d8ec0f3481184837.jpg" alt="科学家满怀期待地观察四周：“哇！这是未来吗？！”"></a><span class='image-caption'>科学家满怀期待地观察四周：“哇！这是未来吗？！”</span></div></p><p><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/f74ec393f8270749874dfedeae37b87b481184837.jpg' data-fancybox='four' data-caption='一位未来的办公室职员（穿着超前卫的工作服）看到科学家，表现出困惑和惊讶，说：“你是从哪里来的？今天不是穿越时空的日子。”'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/f74ec393f8270749874dfedeae37b87b481184837.jpg" alt="一位未来的办公室职员（穿着超前卫的工作服）看到科学家，表现出困惑和惊讶，说：“你是从哪里来的？今天不是穿越时空的日子。”"></a><span class='image-caption'>一位未来的办公室职员（穿着超前卫的工作服）看到科学家，表现出困惑和惊讶，说：“你是从哪里来的？今天不是穿越时空的日子。”</span></div></div><p>额，后面的搞丢了。我会抽时间重新跑一遍的。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Datawhale_AI夏令营 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataWhaleX魔搭_AI夏令营_四期AIGC方向_task01</title>
      <link href="/2024/08/09/DataWhale-AI%E5%A4%8F%E4%BB%A4%E8%90%A5-%E5%9B%9B%E6%9C%9FAIGC%E6%96%B9%E5%90%91-task01/"/>
      <url>/2024/08/09/DataWhale-AI%E5%A4%8F%E4%BB%A4%E8%90%A5-%E5%9B%9B%E6%9C%9FAIGC%E6%96%B9%E5%90%91-task01/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>DataWhaleX魔搭_AI夏令营_四期AIGC方向_task01 学习笔记</p><span id="more"></span><h2 id="AI生图"><a href="#AI生图" class="headerlink" title="AI生图"></a>AI生图</h2><div class="note quote"><p><strong>学习主题介绍</strong></p><p>从零入门AI生图原理&amp;实践 是 Datawhale 2024 年 AI 夏令营第四期的学习活动（“AIGC”方向），基于魔搭社区“可图Kolors-LoRA风格故事挑战赛”开展的实践学习——</p><div class="note info"><p><strong></strong></p><p>适合想 入门并实践 AIGC文生图、工作流搭建、LoRA微调 的学习者参与</p></div><p>学习内容提要：从文生图实现方案逐渐进阶，教程偏重图像工作流、微调、图像优化等思路，最后会简单介绍AIGC应用方向、数字人技术（选学）</p></div><h2 id="比赛介绍"><a href="#比赛介绍" class="headerlink" title="比赛介绍"></a>比赛介绍</h2><p>本次学习任务基于可图Kolors-LoRA风格故事挑战赛，该比赛同样由阿里云天池平台联合魔搭社区举办。进行学习任务，需要报名参加该比赛来更好地检验自己的学习成果。</p><h2 id="赛题内容"><a href="#赛题内容" class="headerlink" title="赛题内容"></a>赛题内容</h2><ol><li><p>参赛者需在可图Kolors 模型的基础上训练LoRA 模型，生成无限风格，如水墨画风格、水彩风格、赛博朋克风格、日漫风格……</p></li><li><p>基于LoRA模型生成 8 张图片组成连贯故事，故事内容可自定义；基于8图故事，评估 LoRA 风格的美感度及连贯性</p></li></ol><details yellow open><summary> 样例：偶像少女养成日记 </summary>              <div class='content'>              <div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/6f52154dd9f7452b9fa2114907ad2857481184837.png@1e_1c.webp' data-fancybox='default' data-caption='大赛所给样例'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/6f52154dd9f7452b9fa2114907ad2857481184837.png@1e_1c.webp" alt="大赛所给样例"></a><span class='image-caption'>大赛所给样例</span></div></div>              </div>            </details><h2 id="对样例的想法与解说"><a href="#对样例的想法与解说" class="headerlink" title="对样例的想法与解说"></a>对样例的想法与解说</h2><h3 id="由八图故事表现形式，联想到早期四格漫画"><a href="#由八图故事表现形式，联想到早期四格漫画" class="headerlink" title="由八图故事表现形式，联想到早期四格漫画"></a>由八图故事表现形式，联想到早期四格漫画</h3><p>八图故事，顾名思义，由八张图片组成连贯的故事。其实我最初看到这个要求的时候，脑中立马闪过小时候很流行的“四格漫画”。</p><details green><summary> 啥是四格漫画？ </summary>              <div class='content'>              <p>四格漫画，是以四个画面分格来完成一个小故事或一个创意点子的表现形式。</p><p>四格漫画短短几格就涵盖了一个事件的发生、情节转折及幽默的结局。让人看完不觉莞尔，会心一笑或捧腹大笑。</p><p>四格漫画着重点子创意，画面不需很复杂，角色也不需要太多，对白精简，让人容易轻松阅读。</p><p>四格漫画是一种古老的艺术表现形式，四格漫画在表现上的特点主要强调叙事。</p><p>早期的漫画除了传统的单幅外，就是四格讽刺漫画：开头，发展，高潮，结尾，所以是四格。六格和八格是后来才出现的，情节展开会比较多。其实四格漫画对格数已经没有限制。</p>              </div>            </details><p>当时的四格漫画大多画风简单而突出重点，富有表现力，故事情节简单而富有转折、诙谐幽默<del>冷幽默</del>。</p><details green><summary> 早期四格漫画示例 </summary>              <div class='content'>              <div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/4206f6d3cb2cb76cfdbe1fd67cb3ea6f481184837.png' data-fancybox='default' data-caption='早期四格漫画示例'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/4206f6d3cb2cb76cfdbe1fd67cb3ea6f481184837.png" alt="早期四格漫画示例"></a><span class='image-caption'>早期四格漫画示例</span></div></div><p><psw>赛尔号打钱！</psw></p>              </div>            </details><h3 id="早期四格漫画形式的借鉴意义"><a href="#早期四格漫画形式的借鉴意义" class="headerlink" title="早期四格漫画形式的借鉴意义"></a>早期四格漫画形式的借鉴意义</h3><div class="tabs" id="tab-思考1"><ul class="nav-tabs"><li class="tab active"><a class="#思考1-1">风格上</a></li><li class="tab"><a class="#思考1-2">故事上</a></li></ul><div class="tab-content"><div class="tab-pane active" id="思考1-1"><p>而现在，我们用AI生成故事，也就不需要拘泥于漫画的表现风格了，赛题要求中也写道：</p><div class="note quote"><p>如水墨画风格、水彩风格、赛博朋克风格、日漫风格……</p></div><p>而我们要讲的故事所适合的风格，我想这是我们需要思考的。</p><p>如在交流群中，有一位同学想讲“指环王里一开头弗罗多的故事”，但生成的图片风格却是比较写实的，头发画的比较细腻，光线也打的较为柔和，整体全是人物近景，有背景的图片中，背景又虚化比较严重……导致该同学表示“生成的好像和我想的一点儿关系也没有，除了衣服配上了”，这就说明该同学存在的问题是描述细节多，而对整体风格要求可能较少。</p></div><div class="tab-pane" id="思考1-2"><p>风格上，我们不必拘泥于早期四格漫画形式，但在如何讲好一个故事上，我想四格漫画有很重要的参考意义。</p><ol><li><p>在早期四格漫画中，故事大多具有转折或幽默特点，四格中一般即起、承、转、结，前三格铺陈蓄势，第四格让人意想不到；</p></li><li><p>使用的对白尽量精简，不用对白只靠表情跟动作是最好也是最难的演出；但是，由于AI绘图很难绘制出正确的文字，所以这一点我们可以不予考虑（记得要在反向提示词中加入”text”以防万一），取而代之的是，我们可以在故事的描述文字上（示例中每张图片上方的文字）多做注意，做到文字简明、概括。</p></li><li><p>动作、表情、对白、情节安排必须符合各个角色设定的性格特征与一贯性。如果在仅仅八格的内容中就出现了角色前后形象大不一致（不是由于剧情发展而引起的正常转变）、甚至直接人设崩塌，这是绝对不能接受的。</p></li></ol></div></div></div><h3 id="样例是如何生成的？"><a href="#样例是如何生成的？" class="headerlink" title="样例是如何生成的？"></a>样例是如何生成的？</h3><p>你可能使用过AI生成图片，那么对于我们要做的事情应该很清楚：给AI提示词。</p><div class="note guide clear"><p><strong>什么是 prompt ？</strong></p><p>在使用大语言模型时，使用 prompt 往往可以获得更好、更精确的结果。prompt直译为“提示语”。现在已经有专门研究大语言模型prompt的工作（prompt engineer）。</p><div class="tag link"><a class="link-card" title="AI 科普：什么是Prompt？如何写Prompt" href="https://base.feishu.cn/academy/ai/beginner-prompt"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">AI 科普：什么是Prompt？如何写Prompt</p><p class="url">https://base.feishu.cn/academy/ai/beginner-prompt</p></div></a></div><div class="tag link"><a class="link-card" title="关于提示工程（Prompt Engineering）" href="https://www.promptingguide.ai/zh"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">关于提示工程（Prompt Engineering）</p><p class="url">https://www.promptingguide.ai/zh</p></div></a></div></div><p>我们也可以简单地理解为在这次任务中，我们对于AI的要求。试想：我们在请人类作画时，尚且需要提出要求呢。</p><p>我们可以打开baseline.ipynb查看样例所给的prompt。</p><p>由于现在还没有按照教程打开魔搭社区notebook，且我们只是要先下载baseline.ipynb文件看一眼，所以我在本地新建一个临时文件夹进行了clone：</p><pre><code>git lfs installgit clone https://www.modelscope.cn/datasets/maochase/kolors.git</code></pre><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/5486996d5d913879284737b25e8d4755481184837.png' data-fancybox='default' data-caption='本地clone'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/5486996d5d913879284737b25e8d4755481184837.png" alt="本地clone"></a><span class='image-caption'>本地clone</span></div></div><p>打开文件夹，找到baseline.ipynb文件并用notepad–等类似软件打开，在稍后面一点的位置，找到了八组prompt。去掉格式化字符”\n”等后内容如下：</p><div class="timeline"><p class='p h2'>8组prompt内容</p><div class="timenode"><div class="meta"><p><p>图片1</p></p></div><div class="body"><div class="tabs" id="tab-图片1"><ul class="nav-tabs"><li class="tab active"><a class="#图片1-1">prompt</a></li><li class="tab"><a class="#图片1-2">negative_prompt</a></li></ul><div class="tab-content"><div class="tab-pane active" id="图片1-1"><p>二次元，一个紫色短发小女孩，在家中沙发上坐着，双手托着腮，很无聊，全身，粉色连衣裙</p></div><div class="tab-pane" id="图片1-2"><p>丑陋、变形、嘈杂、模糊、低对比度</p></div></div></div></div></div><div class="timenode"><div class="meta"><p><p>图片2</p></p></div><div class="body"><div class="tabs" id="tab-图片2"><ul class="nav-tabs"><li class="tab active"><a class="#图片2-1">prompt</a></li><li class="tab"><a class="#图片2-2">negative_prompt</a></li></ul><div class="tab-content"><div class="tab-pane active" id="图片2-1"><p>二次元，日系动漫，演唱会的观众席，人山人海，一个紫色短发小女孩穿着粉色吊带漏肩连衣裙坐在演唱会的观众席，舞台上衣着华丽的歌星们在唱歌</p></div><div class="tab-pane" id="图片2-2"><p>丑陋、变形、嘈杂、模糊、低对比度</p></div></div></div></div></div><div class="timenode"><div class="meta"><p><p>图片3</p></p></div><div class="body"><div class="tabs" id="tab-图片3"><ul class="nav-tabs"><li class="tab active"><a class="#图片3-1">prompt</a></li><li class="tab"><a class="#图片3-2">negative_prompt</a></li></ul><div class="tab-content"><div class="tab-pane active" id="图片3-1"><p>二次元，一个紫色短发小女孩穿着粉色吊带漏肩连衣裙坐在演唱会的观众席，露出憧憬的神情</p></div><div class="tab-pane" id="图片3-2"><p>丑陋、变形、嘈杂、模糊、低对比度，色情擦边</p></div></div></div></div></div><div class="timenode"><div class="meta"><p><p>图片4</p></p></div><div class="body"><div class="tabs" id="tab-图片4"><ul class="nav-tabs"><li class="tab active"><a class="#图片4-1">prompt</a></li><li class="tab"><a class="#图片4-2">negative_prompt</a></li></ul><div class="tab-content"><div class="tab-pane active" id="图片4-1"><p>二次元，一个紫色短发小女孩穿着粉色吊带漏肩连衣裙，对着流星许愿，闭着眼睛，十指交叉，侧面</p></div><div class="tab-pane" id="图片4-2"><p>丑陋、变形、嘈杂、模糊、低对比度，扭曲的手指，多余的手指</p></div></div></div></div></div><div class="timenode"><div class="meta"><p><p>图片5</p></p></div><div class="body"><div class="tabs" id="tab-图片5"><ul class="nav-tabs"><li class="tab active"><a class="#图片5-1">prompt</a></li><li class="tab"><a class="#图片5-2">negative_prompt</a></li></ul><div class="tab-content"><div class="tab-pane active" id="图片5-1"><p>二次元，一个紫色中等长度头发小女孩穿着粉色吊带漏肩连衣裙，在练习室练习唱歌</p></div><div class="tab-pane" id="图片5-2"><p>丑陋、变形、嘈杂、模糊、低对比度</p></div></div></div></div></div><div class="timenode"><div class="meta"><p><p>图片6</p></p></div><div class="body"><div class="tabs" id="tab-图片6"><ul class="nav-tabs"><li class="tab active"><a class="#图片6-1">prompt</a></li><li class="tab"><a class="#图片6-2">negative_prompt</a></li></ul><div class="tab-content"><div class="tab-pane active" id="图片6-1"><p>二次元，一个紫色长发小女孩穿着粉色吊带漏肩连衣裙，在练习室练习唱歌，手持话筒</p></div><div class="tab-pane" id="图片6-2"><p>丑陋、变形、嘈杂、模糊、低对比度</p></div></div></div></div></div><div class="timenode"><div class="meta"><p><p>图片7</p></p></div><div class="body"><div class="tabs" id="tab-图片7"><ul class="nav-tabs"><li class="tab active"><a class="#图片7-1">prompt</a></li><li class="tab"><a class="#图片7-2">negative_prompt</a></li></ul><div class="tab-content"><div class="tab-pane active" id="图片7-1"><p>二次元，紫色长发少女，穿着黑色连衣裙，试衣间，心情忐忑</p></div><div class="tab-pane" id="图片7-2"><p>丑陋、变形、嘈杂、模糊、低对比度</p></div></div></div></div></div><div class="timenode"><div class="meta"><p><p>图片8</p></p></div><div class="body"><div class="tabs" id="tab-图片8"><ul class="nav-tabs"><li class="tab active"><a class="#图片8-1">prompt</a></li><li class="tab"><a class="#图片8-2">negative_prompt</a></li></ul><div class="tab-content"><div class="tab-pane active" id="图片8-1"><p>二次元，紫色长发少女，穿着黑色礼服，连衣裙，在台上唱歌</p></div><div class="tab-pane" id="图片8-2"><p>丑陋、变形、嘈杂、模糊、低对比度</p></div></div></div></div></div></div><p>我们再将大赛所给样例拿出来进行对照：</p><details yellow open><summary> 样例：偶像少女养成日记 </summary>              <div class='content'>              <div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/6f52154dd9f7452b9fa2114907ad2857481184837.png@1e_1c.webp' data-fancybox='default' data-caption='大赛所给样例'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/6f52154dd9f7452b9fa2114907ad2857481184837.png@1e_1c.webp" alt="大赛所给样例"></a><span class='image-caption'>大赛所给样例</span></div></div>              </div>            </details><p>这样一来，你是否理解了prompt、negative_prompt的作用呢？其中，negative_prompt为排除项，即negative_prompt中写上“多余的手指”，则AI生成的图片中就不会有多余的手指。</p><p>我们在写自己的prompt时，可以借助于一些prompt工具，如我使用的<a href="http://www.atoolbox.net/Tool.php?Id=1101"> <em>AI绘画提示词生成器</em> </a>，预览如下：</p><iframe src="http://www.atoolbox.net/Tool.php?Id=1101" width="760" height="450"></iframe><h3 id="样例存在哪些问题？"><a href="#样例存在哪些问题？" class="headerlink" title="样例存在哪些问题？"></a>样例存在哪些问题？</h3><p>大赛所给样例只是最基本的完成情况，我们可以挑一挑其中存在的问题，在我们自己作画时避免。</p><p>首先是故事讲述的问题，这是一个极其平淡的故事。</p><p>其次，整个画面风格有些奇怪。这应该也是由于prompt对风格要求较少导致的。</p><h3 id="注意到图片4中negative-prompt多次出现手指"><a href="#注意到图片4中negative-prompt多次出现手指" class="headerlink" title="注意到图片4中negative_prompt多次出现手指"></a>注意到图片4中negative_prompt多次出现手指</h3><p>首先我们看到：图片4的prompt中有 <code>十指交叉</code> 的要求。而即使图片4negative_prompt中排除了扭曲的手指，多余的手指，AI绘制出来的手指也稍显奇怪。</p><p>为什么AI总是画不好人的手呢？这是一个非常经典的问题，了解这个问题可以让我们对AI绘画的原理理解更深。</p><p>其实原因很简单：</p><ol><li>人手动作极多。人的手看似结构简单，只有五根指头，仿佛画好五根指头就可以了。然而，对于AI来说，人手做出的每个动作都是完全不同的。举个例子：我们先虚握拳头，让手围成一个圈，这是第一个动作；然后紧握拳头，这是第二个动作。对于人类来说，我们知道这两个动作是类似的，可能只是幅度的不同。然而对于AI来说，给它两张这样的动作图片，它将感到十分困惑：为什么手有时候是这样的，有时候是那样的？而这只是一个浅显的例子，在这个例子中，我们尚且可以告诉AI：第一个动作叫虚握，第二个动作叫实握，从而让AI理解。但是人手的动作实在太多了，我们既不可能给每个有细微差别的动作都起名，也不大可能准备如此海量的训练数据喂给AI。</li><li>人手空间变化多。人的手十分灵巧，关节很多、自由度很大，而我们训练生成图片的AI，使用的自然也是图片，这就导致一个问题：在照片中，当人手做出某个动作时，就可能有部分手指看不到，这就导致AI不清楚人类到底应该有几根手指。另一个严重的问题是使AI分不清楚各个手指的粗细关系。比如，同样是竖两根手指，比个正常的耶（✌），AI发现这两根手指差不多长。接着我们竖起来食指和小拇指，小拇指比食指短很多，AI就要变得困惑了。</li></ol><div class="note guide clear"><p><strong>那么，如果我们一直只喂给AI手完全打开的、正面的图片，AI是不是就不会画错了呢？</strong></p><p>是的，但AI也就只能画出手完全打开的、正面的图片了。</p></div><ol start="3"><li>人手的细节非常复杂，包括指甲、指纹、皮肤褶皱等，这些需要很高的算力才能画出。</li></ol><div class="note quote"><p>同样的问题有时也会出现在AI试图绘画更小的特征时，比如耳朵，看起来像没有复杂软骨结构的肉质漩涡；或者牙齿，不正确地放在嘴里；或者瞳孔，变成了小山羊的斑点。AI可以掌握视觉模式，但无法掌握潜在的生物逻辑。</p></div><p>暂时地，AI还有很多东西都画不好。</p><h2 id="文生图的历史"><a href="#文生图的历史" class="headerlink" title="文生图的历史"></a>文生图的历史</h2><p>（点击展开介绍）</p><details yellow><summary> 早期探索（20世纪60年代-20世纪90年代） </summary>              <div class='content'>              <p>文生图的概念最早出现于计算机视觉和图像处理的早期研究中。</p><p>早期的图像生成技术主要依赖于规则和模板匹配，通过预定义的规则将文本转换为简单的图形。</p><p>然而，由于计算能力和算法的限制，这一阶段的技术能力非常有限，生成的图像质量较低，应用场景也非常有限。</p>              </div>            </details><details yellow><summary> 基于统计模型的方法（2000年代） </summary>              <div class='content'>              <p>进入2000年代，随着统计模型和机器学习技术的发展，文生图技术开始得到更多关注。</p><p>研究者们开始利用概率图模型和统计语言模型来生成图像。尽管这一阶段的技术在生成图像的多样性和质量上有了一定提升，但由于模型的复杂性和计算资源的限制，生成的图像仍然较为粗糙，不够逼真。</p>              </div>            </details><details yellow><summary> 深度学习的崛起（2010年代） </summary>              <div class='content'>              <p>2010年代是文生图技术发展的一个重要转折点。</p><p>随着深度学习，尤其是卷积神经网络（CNN）和生成对抗网络（GAN）的发展，文生图技术取得了突破性进展。2014年，Goodfellow等人提出的GAN模型通过生成器和判别器的对抗训练，极大地提升了图像生成的质量。随后，各类变种GAN模型被提出，如DCGAN、Pix2Pix等，使得文生图技术在生成逼真图像方面达到了前所未有的高度。</p>              </div>            </details><details yellow><summary> 大规模预训练模型（2020年代） </summary>              <div class='content'>              <p>进入2020年代，大规模预训练模型如OpenAI的CLIP、DALL-E以及Stable Diffusion等的出现，标志着文生图技术进入了一个新的时代。</p><p>CLIP通过大规模的文本和图像配对数据训练，能够理解和生成高度一致的文本和图像；DALL-E和Stable Diffusion进一步提升了生成图像的创意和细节表现能力，使得通过简单的文本描述生成高质量、复杂图像成为可能。</p><p>这些技术的应用范围从艺术创作、广告设计到辅助医疗诊断，展现了广泛的商业价值和社会影响力。</p>              </div>            </details><h2 id="Task1-流程回顾"><a href="#Task1-流程回顾" class="headerlink" title="Task1 流程回顾"></a>Task1 流程回顾</h2><p>该部分内容详见<a href="https://linklearner.com/activity/14/10/24"> <em>Task1学习手册</em> </a>，以下仅作简要回顾。</p><h3 id="开通阿里云PAI-DSW试用"><a href="#开通阿里云PAI-DSW试用" class="headerlink" title="开通阿里云PAI-DSW试用"></a>开通阿里云PAI-DSW试用</h3><div class="tag link"><a class="link-card" title="阿里云免费试用云产品" href="https://free.aliyun.com/?productCode=learn"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">阿里云免费试用云产品</p><p class="url">https://free.aliyun.com/?productCode=learn</p></div></a></div><div class="tag link"><a class="link-card" title="魔搭社区授权" href="https://www.modelscope.cn/my/mynotebook/authorization"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">魔搭社区授权</p><p class="url">https://www.modelscope.cn/my/mynotebook/authorization</p></div></a></div><h3 id="报名赛事"><a href="#报名赛事" class="headerlink" title="报名赛事"></a>报名赛事</h3><div class="tag link"><a class="link-card" title="可图Kolors-LoRA风格故事挑战赛" href="https://tianchi.aliyun.com/competition/entrance/532254"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">可图Kolors-LoRA风格故事挑战赛</p><p class="url">https://tianchi.aliyun.com/competition/entrance/532254</p></div></a></div><h3 id="在魔搭社区创建实例"><a href="#在魔搭社区创建实例" class="headerlink" title="在魔搭社区创建实例"></a>在魔搭社区创建实例</h3><div class="tag link"><a class="link-card" title="魔搭社区-个人云账号授权实例" href="https://www.modelscope.cn/my/mynotebook/authorization"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">魔搭社区-个人云账号授权实例</p><p class="url">https://www.modelscope.cn/my/mynotebook/authorization</p></div></a></div><div class="note todo"><p>如果 在魔搭无法授权 或 点击【打开】无法打开，可到阿里云控制台创建 &amp; 打开实例</p></div><div class="note todo"><p>如果之前试用的额度已经过期，可使用魔搭的免费Notebook实例</p></div><h3 id="跑代码！"><a href="#跑代码！" class="headerlink" title="跑代码！"></a>跑代码！</h3><h4 id="下载baseline文件"><a href="#下载baseline文件" class="headerlink" title="下载baseline文件"></a>下载baseline文件</h4><pre><code>git lfs installgit clone https://www.modelscope.cn/datasets/maochase/kolors.git</code></pre><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/9c48484367066f5ff14a3c94159bf8b8481184837.png' data-fancybox='default' data-caption='下载baseline文件'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/9c48484367066f5ff14a3c94159bf8b8481184837.png" alt="下载baseline文件"></a><span class='image-caption'>下载baseline文件</span></div></div><h4 id="安装环境，然后重启kernel"><a href="#安装环境，然后重启kernel" class="headerlink" title="安装环境，然后重启kernel"></a>安装环境，然后重启kernel</h4><p>打开baseline文件，运行第一块儿代码。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/59ce803eb8d0c20f7f2887dd5d1cdb50481184837.png' data-fancybox='default' data-caption='运行第一块儿代码，安装环境'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/59ce803eb8d0c20f7f2887dd5d1cdb50481184837.png" alt="运行第一块儿代码，安装环境"></a><span class='image-caption'>运行第一块儿代码，安装环境</span></div></div><div class="note guide clear"><p><strong>安装 Data-Juicer 和 DiffSynth-Studio</strong></p><p>Data-Juicer：数据处理和转换工具，旨在简化数据的提取、转换和加载过程</p><p>DiffSynth-Studio：高效微调训练大模型工具</p></div><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/781c864eba9ecfbbee3170011251e413481184837.png' data-fancybox='default' data-caption='完成'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/781c864eba9ecfbbee3170011251e413481184837.png" alt="完成"></a><span class='image-caption'>完成</span></div></div><p>然后重启kernel。最上方点击这个按钮。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/22a83c31fd8ea500e77d972fee7eabdd481184837.png' data-fancybox='default' data-caption='这个按钮'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/22a83c31fd8ea500e77d972fee7eabdd481184837.png" alt="这个按钮"></a><span class='image-caption'>这个按钮</span></div></div><p>认准鼠标悬停时显示 <code>restart</code> 的那个。</p><h4 id="调整prompt"><a href="#调整prompt" class="headerlink" title="调整prompt"></a>调整prompt</h4><p>但不要运行这部分代码块儿。</p><h4 id="依次顺序运行剩余的代码块"><a href="#依次顺序运行剩余的代码块" class="headerlink" title="依次顺序运行剩余的代码块"></a>依次顺序运行剩余的代码块</h4><p>需要一个一个去点代码框左上角执行按钮。</p><div class="note success"><p>为节省时间，以上两步可同时进行，即在运行前面的代码块儿同时修改prompt。</p></div><div class="note danger"><p>但要注意代码块儿执行需要按顺序执行。</p></div><p>代码块按照功能主要分成这几类：</p><ol><li>使用Data-Juicer处理数据，整理训练数据文件</li><li>使用DiffSynth-Studio在基础模型上，使用前面整理好的数据文件进行训练微调</li><li>加载训练微调后的模型</li><li>使用微调后的模型，生成用户指定的prompt提示词的图片</li></ol><h3 id="上传结果"><a href="#上传结果" class="headerlink" title="上传结果"></a>上传结果</h3><div class="tag link"><a class="link-card" title="魔搭社区-模型库" href="https://www.modelscope.cn/models/create"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">魔搭社区-模型库</p><p class="url">https://www.modelscope.cn/models/create</p></div></a></div><h3 id="关闭实例"><a href="#关闭实例" class="headerlink" title="关闭实例"></a>关闭实例</h3><h3 id="代码一个小提示"><a href="#代码一个小提示" class="headerlink" title="代码一个小提示"></a>代码一个小提示</h3><pre><code>images = [np.array(Image.open(&quot;&#123;i&#125;.jpg&quot;)) for i in range(1, 9)],image = np.concatenate([    np.concatenate(images[0:2], axis=1),    np.concatenate(images[2:4], axis=1),    np.concatenate(images[4:6], axis=1),    np.concatenate(images[6:8], axis=1),], axis=0),image = Image.fromarray(image).resize((1024, 2048)),image</code></pre><p>这是最后一段代码，运行完这段代码后，将在主界面显示我们八张图片组成的故事。这是因为在python中，输入变量的名称回车，会返回变量的值。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/dd34d387f219718f423f44ed4a421ebe481184837.png' data-fancybox='default' data-caption='输入变量名称i，返回i的值'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/dd34d387f219718f423f44ed4a421ebe481184837.png" alt="输入变量名称i，返回i的值"></a><span class='image-caption'>输入变量名称i，返回i的值</span></div></div><p>而这段代码中，变量名称就是image。我们还可以在下面补上一句：</p><pre><code>image.save(&quot;all.jpg&quot;)</code></pre><p>这样它还会将我们的八图组成的图片保存为”all.jpg”。</p><h2 id="部分代码解读"><a href="#部分代码解读" class="headerlink" title="部分代码解读"></a>部分代码解读</h2><pre><code>!pip install simple-aesthetics-predictor!pip install -v -e data-juicer!pip uninstall pytorch-lightning -y!pip install peft lightning pandas torchvision!pip install -e DiffSynth-Studio</code></pre><p>我们上文已经提到，这部分是安装环境。</p><pre><code>#下载数据集from modelscope.msdatasets import MsDatasetds = MsDataset.load(    &#39;AI-ModelScope/lowres_anime&#39;,    subset_name=&#39;default&#39;,    split=&#39;train&#39;,    cache_dir=&quot;/mnt/workspace/kolors/data&quot;)import json, osfrom data_juicer.utils.mm_utils import SpecialTokensfrom tqdm import tqdmos.makedirs(&quot;./data/lora_dataset/train&quot;, exist_ok=True)os.makedirs(&quot;./data/data-juicer/input&quot;, exist_ok=True)with open(&quot;./data/data-juicer/input/metadata.jsonl&quot;, &quot;w&quot;) as f:    for data_id, data in enumerate(tqdm(ds)):        image = data[&quot;image&quot;].convert(&quot;RGB&quot;)        image.save(f&quot;/mnt/workspace/kolors/data/lora_dataset/train/&#123;data_id&#125;.jpg&quot;)        metadata = &#123;&quot;text&quot;: &quot;二次元&quot;, &quot;image&quot;: [f&quot;/mnt/workspace/kolors/data/lora_dataset/train/&#123;data_id&#125;.jpg&quot;]&#125;        f.write(json.dumps(metadata))        f.write(&quot;\n&quot;)        </code></pre><p>下载数据集。</p><pre><code>data_juicer_config = &quot;&quot;&quot;# global parametersproject_name: &#39;data-process&#39;dataset_path: &#39;./data/data-juicer/input/metadata.jsonl&#39;  # path to your dataset directory or filenp: 4  # number of subprocess to process your datasettext_keys: &#39;text&#39;image_key: &#39;image&#39;image_special_token: &#39;&lt;__dj__image&gt;&#39;export_path: &#39;./data/data-juicer/output/result.jsonl&#39;# process schedule# a list of several process operators with their argumentsprocess:    - image_shape_filter:        min_width: 1024        min_height: 1024        any_or_all: any    - image_aspect_ratio_filter:        min_ratio: 0.5        max_ratio: 2.0        any_or_all: any&quot;&quot;&quot;with open(&quot;data/data-juicer/data_juicer_config.yaml&quot;, &quot;w&quot;) as file:    file.write(data_juicer_config.strip())!dj-process --config data/data-juicer/data_juicer_config.yamlimport pandas as pdimport os, jsonfrom PIL import Imagefrom tqdm import tqdmtexts, file_names = [], []os.makedirs(&quot;./data/lora_dataset_processed/train&quot;, exist_ok=True)with open(&quot;./data/data-juicer/output/result.jsonl&quot;, &quot;r&quot;) as file:    for data_id, data in enumerate(tqdm(file.readlines())):        data = json.loads(data)        text = data[&quot;text&quot;]        texts.append(text)        image = Image.open(data[&quot;image&quot;][0])        image_path = f&quot;./data/lora_dataset_processed/train/&#123;data_id&#125;.jpg&quot;        image.save(image_path)        file_names.append(f&quot;&#123;data_id&#125;.jpg&quot;)data_frame = pd.DataFrame()data_frame[&quot;file_name&quot;] = file_namesdata_frame[&quot;text&quot;] = textsdata_frame.to_csv(&quot;./data/lora_dataset_processed/train/metadata.csv&quot;, index=False, encoding=&quot;utf-8-sig&quot;)data_frame</code></pre><p>处理数据集，保存数据处理结果。</p><pre><code># 下载模型from diffsynth import download_modelsdownload_models([&quot;Kolors&quot;, &quot;SDXL-vae-fp16-fix&quot;])#模型训练import oscmd = &quot;&quot;&quot;python DiffSynth-Studio/examples/train/kolors/train_kolors_lora.py \  --pretrained_unet_path models/kolors/Kolors/unet/diffusion_pytorch_model.safetensors \  --pretrained_text_encoder_path models/kolors/Kolors/text_encoder \  --pretrained_fp16_vae_path models/sdxl-vae-fp16-fix/diffusion_pytorch_model.safetensors \  --lora_rank 16 \  --lora_alpha 4.0 \  --dataset_path data/lora_dataset_processed \  --output_path ./models \  --max_epochs 1 \  --center_crop \  --use_gradient_checkpointing \  --precision &quot;16-mixed&quot;&quot;&quot;&quot;.strip()os.system(cmd)</code></pre><p>lora微调。</p><div class="note quote"><p>Stable Diffusion中的Lora（LoRA）模型是一种轻量级的微调方法，它代表了“Low-Rank Adaptation”，即低秩适应。Lora不是指单一的具体模型，而是指一类通过特定微调技术应用于基础模型的扩展应用。在Stable Diffusion这一文本到图像合成模型的框架下，Lora被用来对预训练好的大模型进行针对性优化，以实现对特定主题、风格或任务的精细化控制。</p></div><pre><code>from diffsynth import ModelManager, SDXLImagePipelinefrom peft import LoraConfig, inject_adapter_in_modelimport torchdef load_lora(model, lora_rank, lora_alpha, lora_path):    lora_config = LoraConfig(        r=lora_rank,        lora_alpha=lora_alpha,        init_lora_weights=&quot;gaussian&quot;,        target_modules=[&quot;to_q&quot;, &quot;to_k&quot;, &quot;to_v&quot;, &quot;to_out&quot;],    )    model = inject_adapter_in_model(lora_config, model)    state_dict = torch.load(lora_path, map_location=&quot;cpu&quot;)    model.load_state_dict(state_dict, strict=False)    return model# Load modelsmodel_manager = ModelManager(torch_dtype=torch.float16, device=&quot;cuda&quot;,                             file_path_list=[                                 &quot;models/kolors/Kolors/text_encoder&quot;,                                 &quot;models/kolors/Kolors/unet/diffusion_pytorch_model.safetensors&quot;,                                 &quot;models/kolors/Kolors/vae/diffusion_pytorch_model.safetensors&quot;                             ])pipe = SDXLImagePipeline.from_model_manager(model_manager)# Load LoRApipe.unet = load_lora(    pipe.unet,    lora_rank=16, # This parameter should be consistent with that in your training script.    lora_alpha=2.0, # lora_alpha can control the weight of LoRA.    lora_path=&quot;models/lightning_logs/version_0/checkpoints/epoch=0-step=500.ckpt&quot;)</code></pre><p>加载微调好的模型。</p><pre><code>torch.manual_seed(0)image = pipe(    prompt=&quot;二次元，一个紫色短发小女孩，在家中沙发上坐着，双手托着腮，很无聊，全身，粉色连衣裙&quot;,    negative_prompt=&quot;丑陋、变形、嘈杂、模糊、低对比度&quot;,    cfg_scale=4,    num_inference_steps=50, height=1024, width=1024,)image.save(&quot;1.jpg&quot;)</code></pre><p>图片生成（改变种子值重复8次）。</p><p>最后是我们上一节中提到的将8张图片合为一张。</p><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><div class="note guide clear"><p>这个图片的风格能不能修改，能不能微调出来一个其他风格类型的图片？</p></div><details green><summary> 点击展开 </summary>              <div class='content'>              <p>尽管比赛要求要不同的风格、我们也在注意不同风格的尝试，但经过不断的调整和观察对比大家的结果，我认为如果不对代码部分进行其它调整的话，这个图片的风格是不会改变的，即一直倾向于二次元风格。我认为这可能与训练数据有关。</p><p>而在上文代码解读中， <code>下载数据集</code> 部分里也写明了我们训练的数据只有“二次元”。</p>              </div>            </details><h2 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h2><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>自己写了prompt</p>            </div><div class='checkbox times green checked'><input type="checkbox" checked="checked"/>            <p>组成故事</p>            </div><div class='checkbox times yellow checked'><input type="checkbox" checked="checked"/>            <p>无明显bug</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>效果满意</p>            </div><p>我的第一张图片是测试上文中提到的prompt生产工具，按照自己喜好选了几个prompt生成的。接下来7张图都是调整prompt试图生成一张《孤独摇滚》中的波奇。没有进行连贯故事的尝试，<psw>因为我还没想好故事。</psw></p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/2ec0ca49650f204a4525b23b315afee6481184837.jpg' data-fancybox='default' data-caption='all.jpg'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/2ec0ca49650f204a4525b23b315afee6481184837.jpg" alt="all.jpg"></a><span class='image-caption'>all.jpg</span></div></div><p>画风崩坏还是挺严重的。</p><p>从效果上看，第6张与波奇最为接近，但同时第6张也是作画bug最大的一张：手臂不协调、手指数量不正确、吉他那儿有不明意义的大幅色块儿。</p><p>关于发卡：从一开始我就没指望AI能正确理解波奇的发卡长什么样子，但是画成这样还是让我很惊喜了。整体的氛围也很像《孤独摇滚》。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Datawhale_AI夏令营 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo网站访问速度优化</title>
      <link href="/2024/08/07/hexo%E7%BD%91%E7%AB%99%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96/"/>
      <url>/2024/08/07/hexo%E7%BD%91%E7%AB%99%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>哈哈，真是越来越慢了呢……（😊</p><p>本文关于hexo-offline-popup、gulp4。效果……有确实是有的……</p><span id="more"></span><p>这类教程文章真的很多，我不多介绍，可以参考下面的文章（精挑细选！）</p><div class="tag link"><a class="link-card" title="hexo-offline-popup" href="https://blog.csdn.net/weixin_58068682/article/details/116613947"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">hexo-offline-popup</p><p class="url">https://blog.csdn.net/weixin_58068682/article/details/116613947</p></div></a></div><div class="tag link"><a class="link-card" title="gulp4、hexo-neat" href="https://blog.csdn.net/qq_43625917/article/details/104136304"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">gulp4、hexo-neat</p><p class="url">https://blog.csdn.net/qq_43625917/article/details/104136304</p></div></a></div><p>第一篇文章关于hexo-offline-popup，完全照做即可。</p><p>第二篇文章关于gulp4和hexo-neat，这俩是同类型的东西，我不确定能否同时使用，我只使用了gulp4。</p><h2 id="对这篇文章做一些小的补丁："><a href="#对这篇文章做一些小的补丁：" class="headerlink" title="对这篇文章做一些小的补丁："></a>对这篇文章做一些小的补丁：</h2><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>文中 <code>0x02</code> - <code>2.安装gulp插件</code> 中，注释部分可以先不用管。</p><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p><code>3.部署执行</code> 中 <code>package.json</code> 文件指博客根目录下的。</p><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><pre><code>解决方法2：继续方法1 安装 babel 模块</code></pre><p>这部分中，要与我们上文跳过的 <code>0x02</code> - <code>2.安装gulp插件</code> 中的注释部分结合着看，这里面提到的都要装，但：</p><pre><code>#问题：如果安装gulp-imagemin错误请执行以下语句#sudo npm i gulp-imagemin --unsafe-perms</code></pre><p>除外。遇到装不上gulp-imagemin的问题才要装。</p><h2 id="然后是关于作者的-gulpfile-js文件-一些说明。"><a href="#然后是关于作者的-gulpfile-js文件-一些说明。" class="headerlink" title="然后是关于作者的 gulpfile.js文件 一些说明。"></a>然后是关于作者的 <code>gulpfile.js文件</code> 一些说明。</h2><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><pre><code>gulp.task(&#39;minify-js&#39;, function () &#123;    //纠错前：return gulp.src(&#39;./public/**/*.js&#39;)    return gulp.src([&#39;./public/**/*.js&#39;, &#39;!./public/lib/blog-encrypt.js&#39;])        .pipe(uglify())        .pipe(gulp.dest(&#39;./public&#39;))&#125;);</code></pre><p>这部分建议先写纠错前的那句，因为我们自己的博客不一定会遇到这个文件有问题。抛出结果以后，它说哪个js文件压缩不了，我们再对应的写上 <code>&#39;!文件&#39;</code> 。</p><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><pre><code>// 压缩图片//gulp.task(&#39;minify-images&#39;, function() &#123;//    return gulp.src(&#39;./public/images/**/*.*&#39;)//        .pipe(imagemin(//        [imagemin.gifsicle(&#123;&#39;optimizationLevel&#39;: 3&#125;),//        imagemin.jpegtran(&#123;&#39;progressive&#39;: true&#125;),//        imagemin.optipng(&#123;&#39;optimizationLevel&#39;: 7&#125;),//        imagemin.svgo()],//        &#123;&#39;verbose&#39;: true&#125;))//        .pipe(gulp.dest(&#39;./public/images&#39;))//&#125;);</code></pre><p>这部分作者由于特殊原因没写，我们可以写上看看会不会出现问题。上述的这些代码除了路径可以改一下其他外不需要改变，然后在开头有类似语句的地方写上</p><pre><code>var imagemin = require(&#39;gulp-imagemin&#39;);</code></pre><p>最后gulp.task的地方补上’minify-images’。</p><p>如果有</p><pre><code>require() of ES modules is not supported.</code></pre><p>的错误，请参照</p><div class="tag link"><a class="link-card" title="require() of ES modules is not supported." href="https://github.com/imagemin/imagemin/issues/380"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">require() of ES modules is not supported.</p><p class="url">https://github.com/imagemin/imagemin/issues/380</p></div></a></div><p>，将gulp-imagemin退回至7.1.0版本。这里面关于版本号问题问答还挺有意思的（冷幽默）。</p><p>可能能解决……如果解决不了的话，建议跟这位作者一样，注释掉吧……</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 优化 </category>
          
          <category> 速度优化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>volantis_navbar_logo_title的彩色方式</title>
      <link href="/2024/08/07/volantis-navbar-logo-title%E7%9A%84%E5%BD%A9%E8%89%B2%E6%96%B9%E5%BC%8F/"/>
      <url>/2024/08/07/volantis-navbar-logo-title%E7%9A%84%E5%BD%A9%E8%89%B2%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>查看Volantis社区源码时，突然发现 <code>navbar</code> 一栏 <code>logo</code> 使用了只填写 <code>title</code> 的方式，里面写的是 <code>title: &#39;Volantis 6 &lt;sup style=&quot;color:#ff9800&quot;&gt;alpha&lt;/sup&gt;&#39;</code>。这意味着在这一栏是支持CSS格式化的。</p><span id="more"></span><p>于是我写了 <code>&#39;&lt;span style=&quot;color:#c3bef0;font-weight:bold&quot;&gt;MOYUAN&lt;/span&gt;&#39;</code> ，效果正确。</p><p>我原本使用的是 <code>&lt;p&gt;</code> 标签，但是总觉得好像整体logo偏向上方，误以为是 <code>&lt;p&gt;</code> 标签为一个段落导致的，因此换用 <code>&lt;span&gt;</code> 标签，但感觉效果是一样的。也就是说这应该是我的错觉……？</p><p>将其修改后，突然发现整体很不协调。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/volantis_navbar_logo_title%E7%9A%84%E5%BD%A9%E8%89%B2%E6%96%B9%E5%BC%8F/%E4%B8%8D%E5%8D%8F%E8%B0%83%EF%BC%81.png' data-fancybox='default' data-caption='不协调！'><img fancybox itemprop="contentUrl" src="/class_1/volantis_navbar_logo_title%E7%9A%84%E5%BD%A9%E8%89%B2%E6%96%B9%E5%BC%8F/%E4%B8%8D%E5%8D%8F%E8%B0%83%EF%BC%81.png" alt="不协调！"></a><span class='image-caption'>不协调！</span></div></div><p>试图将相同方法应用在 <code>menu</code> 栏中，效果不正确，使用 <kbd>F12</kbd> -inspector。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/volantis_navbar_logo_title%E7%9A%84%E5%BD%A9%E8%89%B2%E6%96%B9%E5%BC%8F/%E4%BA%8E%E6%98%AF%E6%88%91%E6%8C%89%E4%B8%8BF12.png' data-fancybox='default' data-caption='于是我按下F12'><img fancybox itemprop="contentUrl" src="/class_1/volantis_navbar_logo_title%E7%9A%84%E5%BD%A9%E8%89%B2%E6%96%B9%E5%BC%8F/%E4%BA%8E%E6%98%AF%E6%88%91%E6%8C%89%E4%B8%8BF12.png" alt="于是我按下F12"></a><span class='image-caption'>于是我按下F12</span></div></div><p>发现这样写的确会导致一些错误。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/volantis_navbar_logo_title%E7%9A%84%E5%BD%A9%E8%89%B2%E6%96%B9%E5%BC%8F/%E5%87%BA%E6%9D%A5%E4%BF%A9%E6%96%87%E5%AD%97.png' data-fancybox='default' data-caption='出来俩文字'><img fancybox itemprop="contentUrl" src="/class_1/volantis_navbar_logo_title%E7%9A%84%E5%BD%A9%E8%89%B2%E6%96%B9%E5%BC%8F/%E5%87%BA%E6%9D%A5%E4%BF%A9%E6%96%87%E5%AD%97.png" alt="出来俩文字"></a><span class='image-caption'>出来俩文字</span></div></div><p><img src="/class_1/volantis_navbar_logo_title%E7%9A%84%E5%BD%A9%E8%89%B2%E6%96%B9%E5%BC%8F/%E4%BF%A9%E6%96%87%E5%AD%97%E6%83%85%E5%86%B5%E5%8A%A8%E5%9B%BE.gif" alt="俩文字情况动图"></p><p>看起来像是标签意外闭合了……不过我对前端了解极浅，所以就这样算啦！</p><p>8月25日更新：我明白了，真傻。应该用的是Volantis的</p><pre><code>&#123;% span %&#125;</code></pre><p>用法。</p>]]></content>
      
      
      <categories>
          
          <category> volantis主题 </category>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Volantis主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于hexo-helper-live2d无法显示自己的模型的一种可能</title>
      <link href="/2024/08/01/%E5%85%B3%E4%BA%8Ehexo-helper-live2d%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A8%A1%E5%9E%8B%E7%9A%84%E4%B8%80%E7%A7%8D%E5%8F%AF%E8%83%BD/"/>
      <url>/2024/08/01/%E5%85%B3%E4%BA%8Ehexo-helper-live2d%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A8%A1%E5%9E%8B%E7%9A%84%E4%B8%80%E7%A7%8D%E5%8F%AF%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用hexo-helper-live2d来为Hexo博客添加看板娘功能，若使用GitHub提供的模型则可以显示，按照其提示添加自己的模型则不能显示。检查lib完整、路径正确、模型看不出问题。</p><span id="more"></span><h2 id="省流"><a href="#省流" class="headerlink" title="省流"></a>省流</h2><p>检查模型是否是.moc3、.model3.json格式，这种格式在hexo-helper-live2d不被支持。请参考下面链接的问答：</p><div class="tag link"><a class="link-card" title="关于moc和moc3格式的问题" href="https://github.com/Eikanya/Live2d-model/issues/30"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">关于moc和moc3格式的问题</p><p class="url">https://github.com/Eikanya/Live2d-model/issues/30</p></div></a></div><p>该问答所在的GitHub仓库也是一位大佬整理出来的Live2d模型。</p><h2 id="救命"><a href="#救命" class="headerlink" title="救命"></a>救命</h2><p>今天一天都在检查究竟是哪里出了问题呢。。。整个网站还回滚了一次，好在并无大碍。</p><div class="video"><video controls preload><source src='/class_2/视频/原来想使用的live2d模型.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><p>由于直接引用B站视频画质不清晰，所以我将视频下载后再引用了。<a href="https://www.bilibili.com/video/BV1S8411H7zf/?share_source=copy_web&vd_source=c806d41a4bffef5b492529ce1bae16d6"><em>原视频地址</em></a></p><p>这个是我原本想使用的模型，来自<a href="https://space.bilibili.com/1815643596">Yuri幽里_official</a>与<a href="https://space.bilibili.com/39488">慈善小霓</a>老师。真的很可惜没能使用到！</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>datawhale-24-3-3-2</title>
      <link href="/2024/07/29/datawhale-24-3-3-2/"/>
      <url>/2024/07/29/datawhale-24-3-3-2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Hi大家好，这里依旧是默元。今天分享 Datawhale_AI夏令营 第二次任务！</p><span id="more"></span><p>上一篇笔记中我们已经大致梳理了baseline的基本结构。今天继续详细解读代码，并回答几个小问题。</p><h2 id="代码解读（接上一篇笔记）"><a href="#代码解读（接上一篇笔记）" class="headerlink" title="代码解读（接上一篇笔记）"></a>代码解读（接上一篇笔记）</h2><div class="tag link"><a class="link-card" title="上一篇笔记点这里" href="https://changakira.github.io/2024/07/25/datawhale-24-3-3-1/"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">上一篇笔记点这里</p><p class="url">https://changakira.github.io/2024/07/25/datawhale-24-3-3-1/</p></div></a></div><p>上一篇笔记中，对baseline代码详细解读到了<code># 这里使用extract抽取模获得抽取的结果</code>这一部分。我们接着往下看。</p><pre><code># 这里使用extract抽取模获得抽取的结果def extract(input_text):    ans_pattern = re.compile(r&quot;答案是：(.)&quot;, re.S)    problems = ans_pattern.findall(input_text)    # print(problems)    if(problems == &#39;&#39;):        return &#39;A&#39;    return problems[0]</code></pre><p>extract直译为提取，那么这个函数就是提取函数啦！input_text是什么？我们只知道它是“输入文本”的意思，它在哪里出现过吗？</p><p>我们使用<kbd>CTRL</kbd>+<kbd>F</kbd>找一下。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/73fde18ad3fa6ac3c9ad7bdcf71974af481184837.png' data-fancybox='default' data-caption='只有这里'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/73fde18ad3fa6ac3c9ad7bdcf71974af481184837.png" alt="只有这里"></a><span class='image-caption'>只有这里</span></div></div><p>怎么回事呢？全部代码文件中，只有这里（和这个函数里面）出现了input_text，它到底是什么？</p><p>其实，input_text在这里只是一个“形式参数”，而不是一个实际参数。形式参数可以和真正的参数名字一样，也可以不一样。这一点在大部分编程语言中都有类似情况。详细可以阅读这一篇文章：</p><div class="tag link"><a class="link-card" title="深入理解函数的参数——实际参数（实参）和形式参数（形参）" href="https://blog.csdn.net/JDSZGLLL/article/details/124403905"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">深入理解函数的参数——实际参数（实参）和形式参数（形参）</p><p class="url">https://blog.csdn.net/JDSZGLLL/article/details/124403905</p></div></a></div><p>所以input_text是什么？我们要看extract函数在使用时传入参数传入了什么。所以我们后面遇到再解析。</p><p>我们再来看这个函数的功能。</p><p>re是一个python模块，re.compile函数用于编译正则表达式，生成一个 Pattern 对象，它的一般使用形式如下：</p><pre><code>re.compile(pattern[, flag])</code></pre><p>其中，pattern 是一个字符串形式的正则表达式，flag 是一个可选参数，表示匹配模式，比如忽略大小写，多行模式等。re.S表示使 . 匹配包括换行在内的所有字符。</p><p>更多内容可以阅读：</p><div class="tag link"><a class="link-card" title="正则表达式re.compile()的使用" href="https://blog.csdn.net/weixin_42793426/article/details/88545939"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">正则表达式re.compile()的使用</p><p class="url">https://blog.csdn.net/weixin_42793426/article/details/88545939</p></div></a></div><div class="tag link"><a class="link-card" title="python中re.compile()用法详解" href="https://blog.csdn.net/weixin_44799217/article/details/126456660"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">python中re.compile()用法详解</p><p class="url">https://blog.csdn.net/weixin_44799217/article/details/126456660</p></div></a></div><p>也就是说，在这里，我们将“返回形如 ‘答案是：(.)’ 中 . 的位置的所有字符（包括换行符在内）”。</p><p>这里我们需要结合上文的prompt看一下（在上一篇笔记中详细介绍过）：</p><div class="note quote"><p><strong>上文的 prompt 内容</strong></p><p>prompt &#x3D; f”””你是一个逻辑推理专家，擅长解决逻辑推理问题。以下是一个逻辑推理的题目，形式为单项选择题。所有的问题都是（close-world assumption）闭世界假设，即未观测事实都为假。请逐步分析问题并在最后一行输出答案，最后一行的格式为”答案是：A”。题目如下：</p></div><p>我们可以看到，我们让大语言模型逐步分析问题并在最后一行输出答案，最后一行的格式为”答案是：A”。那么，通过上文”答案是：(.)”的正则表达式，我们便可以提取到大语言模型作出的答案。</p><p>接下来我们做了一个判断：如果我们提取到的结果为空字符串，则返回为’A’。否则的话返回为我们提取到的第0个结果。</p><p>为什么会有第0个结果呢，难道还可能有很多结果吗？为什么还会有空字符串的情况呢？</p><p>我们可以想到，这都是因为大语言模型输出结果不准确，有时候，它可能在一段话中先后说出“答案是：A”和“答案是B”这样自相矛盾的结果，也可能根本没有遵守我们设定的格式，如回答“我认为答案是A”这样的情况。这时，baseline的处理方法是如果大语言模型没有按约定回答，则输出为A，如果大语言模型回答了多个，则输出为第一个回答。</p><p>知道了这一点后，我们就可以想到改进的办法。</p><ol><li>我们可以改变prompt的措辞。</li></ol><p>如，我们可以改成这样：</p><wavy>prompt = f"""你是一个逻辑推理专家，擅长解决逻辑推理问题，能够从前后各语句之间的因果、转折、包含、递进等关系中推断出其他正确的信息。以下是一个逻辑推理的题目，形式为单项选择题。我将先给出一段基本的论断，论断都是正确的。接下来询问你几个选择题并附有几个选项，请逐步分析问题并在最后一行输出你认为正确的答案。一定注意，最后一行输出答案的格式为形如"答案是：A"的语句。所有的问题都是基于闭世界假设，即不确定，或已知的信息中未提到的信息为假(False)。一定注意，最后一行输出答案的格式为形如"答案是：A"的语句。题目如下：</wavy><ol start="2"><li>当大模型输出结果不正确时，重新调用函数让大模型输出。<br>使用这种方法时，要特别注意重试次数应该有一个上限（和上文尝试重连api次数一个道理）。这种方法我们下文会写。</li></ol><p>我们继续看代码。</p><pre><code>def process_datas(datas,MODEL_NAME):    results = []</code></pre><p>定义函数process_datas，传入参数datas和MODEL_NAME。初始化一个空的results。</p><pre><code>    with ThreadPoolExecutor(max_workers=16) as executor:</code></pre><p>ThreadPoolExecutor线程池。max_workers最大工作者数量（直译），也就是最大的同时进行的线程数量。</p><div class="tag link"><a class="link-card" title="Python 使用ThreadPoolExecutor时的max_workers数量选择" href="https://geek-docs.com/python/python-ask-answer/770_python_number_of_max_workers_when_using_threadpoolexecutor_from_concurrentfutures.html"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">Python 使用ThreadPoolExecutor时的max_workers数量选择</p><p class="url">https://geek-docs.com/python/python-ask-answer/770_python_number_of_max_workers_when_using_threadpoolexecutor_from_concurrentfutures.html</p></div></a></div><p>这一段代码使过程使用多线程执行，加快了执行速度。</p><pre><code>def main(ifn, ofn):    if os.path.exists(ofn):        pass    data = []    # 按行读取数据    with open(ifn) as reader:    for line in reader:        sample = json.loads(line)        data.append(sample)    datas = data    # print(data)    # 均匀地分成多个数据集    return_list = process_datas(datas,MODEL_NAME)    print(len(return_list))    print(&quot;All tasks finished!&quot;)    return return_list</code></pre><p>主函数，读取数据，没什么特别的。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Datawhale_AI夏令营 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Datawhale_AI夏令营_24_3_3_1_记录</title>
      <link href="/2024/07/25/datawhale-24-3-3-1/"/>
      <url>/2024/07/25/datawhale-24-3-3-1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Hi大家好，这里依旧是默元。今天完成了Datawhale AI夏令营的第一次任务，有所收获。</p><span id="more"></span><h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><div class="note "><p>从零入门AI+逻辑推理 是 Datawhale 2024 年 AI 夏令营第三期的学习活动（“AI+逻辑推理”方向），基于“第二届世界科学智能大赛逻辑推理赛道：复杂推理能力评估” 开展学习活动。</p><div class="note done"><p>适合想学习大语言模型、想用AI完成逻辑推理任务的学习者参与。</p></div></div><h2 id="Task1内容"><a href="#Task1内容" class="headerlink" title="Task1内容"></a>Task1内容</h2><h3 id="报名赛事"><a href="#报名赛事" class="headerlink" title="报名赛事"></a>报名赛事</h3><p>报名<a href="http://competition.sais.com.cn/competitionDetail/532231/format"> <em>第二届世界科学智能大赛逻辑推理赛道：复杂推理能力评估</em> </a>比赛。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/dd3d7a1408451a835c142ef50ac7eb11481184837.png' data-fancybox='default' data-caption='大赛官网'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/dd3d7a1408451a835c142ef50ac7eb11481184837.png" alt="大赛官网"></a><span class='image-caption'>大赛官网</span></div></div><h3 id="申领大模型API"><a href="#申领大模型API" class="headerlink" title="申领大模型API"></a>申领大模型API</h3><div class="note yellow"><p><strong>使用的开源模型</strong></p><p>这次我们为了保证大家可以顺利体验大模型，同时满足比赛要求，采用阿里开源大模型Qwen系列，通过api的形式调用，使用的模型是目前限时免费的 qwen1.5-1.8b-chat 模型。</p><p>开通 DashScope(阿里云灵积平台) 可以获赠一些其他模型的限时免费使用额度，大部分有效期为30天。<br>本Task代码跑一次需要大概 500w Tokens，大家可以尝试灵积平台上提供的其他开源模型的API服务，但注意不要超出赠送额度，否则会扣费。</p></div><div class="tag link"><a class="link-card" title="阿里云灵积平台" href="https://dashscope.console.aliyun.com/apiKey"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">阿里云灵积平台</p><p class="url">https://dashscope.console.aliyun.com/apiKey</p></div></a></div><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/96eeb76331f68c2e3597f400be41dcfe481184837.png' data-fancybox='default' data-caption='创建API key'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/96eeb76331f68c2e3597f400be41dcfe481184837.png" alt="创建API key"></a><span class='image-caption'>创建API key</span></div></div><p>创建一个API key并保存在安全的地方。不要忘记或泄露！</p><details yellow><summary> 什么是“API”？ </summary>              <div class='content'>              <div class="note quote yellow"><p>API（Application Programming Interface,应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。</p></div><p><strong>API是接口。</strong></p><p>我们在日常生活中可能有这样的烦恼：为什么数据线的种类有这么多？micro、type C……我们有时直接叫做安卓口、苹果口、梯形口……</p><p>当我们有一些不方便改变的接口，又不适合我们的需求时，我们就会用到下面这一类小东西：转接头。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/9c1f2eb70f58b31e43c7db8a26f0572b481184837.png' data-fancybox='default' data-caption='绿联USB 3.0转Type C转接头'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/9c1f2eb70f58b31e43c7db8a26f0572b481184837.png" alt="绿联USB 3.0转Type C转接头"></a><span class='image-caption'>绿联USB 3.0转Type C转接头</span></div></div><p>同样的，我们现在写了一堆代码。如何我们想要实现某个功能，但是这时我们发现这个功能不好集成到我们的代码中，或者干脆不好写、懒得写，恰巧别人写过这个功能了，我们就希望拿来使用。这时，功能的所有者可以把全部代码给我们，也可以自己保留代码，而给我们一个接口，我们只需要调用这个接口就可以使用他的函数。API就像一座桥梁，把我们连接起来。如果说我的代码是一块儿正方体，他的代码是一块儿球体，那么API就像一个一段是正方形一端是圆形的皮套把我们连接在一起。</p><p>以上是我自己的理解和浅显的解答，更多内容可以看这一篇文章<a href="https://blog.csdn.net/lph188/article/details/87979601"> <em>什么是API？（看完你就理解了）</em> </a>。</p>              </div>            </details><details blue><summary> 什么是“API key”？ </summary>              <div class='content'>              <p>通过上面的解释，我们可以知道API权限对于API创建者来说很重要，要保证别人不能拿到API权限，也就是说，你是正方体，我是球体，你想要让我们结合，我就借你一个一面正方形一面圆形的皮套让我们连接起来。但是这个皮套是我的，不能让你随意使用，更不能让你对我的球体做更改。</p><div class="note quote yellow"><p>API 密钥是一个字母数字字符串，API 开发人员使用该字符串来控制对其 API 的访问权限。</p></div><p>详细解释可以看amazon的这篇文章：<a href="https://aws.amazon.com/cn/what-is/api-key/"> <em>什么是 API 密钥？</em> </a>。</p>              </div>            </details><h3 id="启动魔搭Notebook"><a href="#启动魔搭Notebook" class="headerlink" title="启动魔搭Notebook"></a>启动魔搭Notebook</h3><div class="tag link"><a class="link-card" title="魔搭社区" href="https://www.modelscope.cn/my/mynotebook/preset"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">魔搭社区</p><p class="url">https://www.modelscope.cn/my/mynotebook/preset</p></div></a></div><p>使用默认的配置，点击启动。等待实例启动后，点击“查看Notebook”。</p><details yellow><summary> 什么是“Notebook”？ </summary>              <div class='content'>              <p>Notebook我们都知道，是英文“笔记本”、“笔记本电脑”的意思。</p><p>而在这里，“Notebook”指的其实就是“Jupyter Notebook”。我们可以看到，在魔搭平台页面上写明了：</p><div class="note quote yellow"><p>ModelScope社区与阿里云合作，Notebook功能由阿里云提供产品和资源支持。</p></div><details yellow><summary> 什么是“Jupyter Notebook”？ </summary>              <div class='content'>              <div class="note quote yellow"><p>Jupyter Notebook是基于网页的用于交互计算的应用程序。其可被应用于全过程计算：开发、文档编写、运行代码和展示结果。</p></div><p>简而言之，Jupyter Notebook是以网页的形式打开，可以在网页页面中 <strong>直接</strong> 编写代码和运行代码，代码的运行结果也会直接在代码块下显示。如在编程过程中需要编写说明文档，可在同一个页面中直接编写，便于作及时的说明和解释。</p><p>我们可以看到，点击“查看Notebook”后，正是一个“Jupyter Notebook”界面。</p>              </div>            </details>              </div>            </details><h3 id="体验baseline"><a href="#体验baseline" class="headerlink" title="体验baseline"></a>体验baseline</h3><h4 id="下载代码及测试集"><a href="#下载代码及测试集" class="headerlink" title="下载代码及测试集"></a>下载代码及测试集</h4><p class='p green'>代码及测试集在DataWhale学习手册中可以找到，我就不再转载。</p><u>baseline01.ipynb</u>是代码文件。<u>round1_test_data.jsonl</u>文件是测试集文件。<p>将这两个文件拖拽到Jupyter Notebook左侧文件栏进行上传。</p><h4 id="填写API-key"><a href="#填写API-key" class="headerlink" title="填写API key"></a>填写API key</h4><p>在相应位置填写API key。</p><h4 id="下载结果文件"><a href="#下载结果文件" class="headerlink" title="下载结果文件"></a>下载结果文件</h4><p>等待代码运行完成后（ <em>需要约30分钟</em> ），右键upload.jsonl文件，下载到本地。</p><h4 id="提交至大赛"><a href="#提交至大赛" class="headerlink" title="提交至大赛"></a>提交至大赛</h4><p>将得到的结果文档<a href="http://competition.sais.com.cn/competitionDetail/532231/mySubmissions"> <em>提交至大赛</em> </a>，大约两分钟后可以查看分数。</p><h3 id="文件详解"><a href="#文件详解" class="headerlink" title="文件详解"></a>文件详解</h3><h4 id="代码文件详解"><a href="#代码文件详解" class="headerlink" title="代码文件详解"></a>代码文件详解</h4><p>我们在Jupyter Notebook中再次打开代码文件。</p><pre><code>pip install scipy openai tiktoken retry dashscope loguru</code></pre><p>pip是包管理工具。这里通过pip来下载一个包。</p><div class="tag link"><a class="link-card" title="Python pip 安装与使用（菜鸟文档）" href="https://www.runoob.com/w3cnote/python-pip-install-usage.html"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">Python pip 安装与使用（菜鸟文档）</p><p class="url">https://www.runoob.com/w3cnote/python-pip-install-usage.html</p></div></a></div><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/6602dc16fea11b131a690aa7c7e1c62f481184837.png' data-fancybox='default' data-caption='代码图'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/6602dc16fea11b131a690aa7c7e1c62f481184837.png" alt="代码图"></a><span class='image-caption'>代码图</span></div></div><p>下面跟的这一大堆是pip install过程中的输出。由于我的已经运行过一遍，所以可以看到一堆”Requirement already satisfied”（请求已经满足了），后面还有一些路径，就是我们要下载的包，它已经存在于这个路径下。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/325159b58c1d8b05a46f7a09aab61e12481184837.png' data-fancybox='default' data-caption='提示pip更新'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/325159b58c1d8b05a46f7a09aab61e12481184837.png" alt="提示pip更新"></a><span class='image-caption'>提示pip更新</span></div></div><p>这里提示我们更新pip，因为没必要，所以不用管它。而我记得在自己电脑上，这是一个大坑，<del>为什么是大坑我忘了反正搞了不知道多少次都没搞好。。。</del></p><pre><code>from multiprocessing import Process, Managerimport jsonimport osfrom pprint import pprintimport refrom tqdm import tqdmimport randomimport uuidimport openaiimport tiktokenimport jsonimport numpy as npimport requestsfrom retry import retryfrom scipy import sparse#from rank_bm25 import BM25Okapi#import jiebafrom http import HTTPStatusimport dashscopefrom concurrent.futures import ThreadPoolExecutor, as_completedfrom loguru import loggerimport jsonimport timefrom tqdm import tqdm</code></pre><p>接下来这些都是导入模块。</p><pre><code>logger.remove()  # 移除默认的控制台输出logger.add(&quot;logs/app_&#123;time:YYYY-MM-DD&#125;.log&quot;, level=&quot;INFO&quot;, rotation=&quot;00:00&quot;, retention=&quot;10 days&quot;, compression=&quot;zip&quot;)</code></pre><p>这俩关于日志的不是太懂。</p><details cyan><summary> 不过我可以猜测一下： </summary>              <div class='content'>              <ol><li>移除默认的控制台输出。这个注释里也告诉我们了。</li><li>添加日志语句。添加的内容就是引号里面的。</li><li>time:YYYY-MM-DD是典型的日期格式了，YYYY表示四位数year，MM表示两位数month，DD表示两位数date，中间用“-”连接。</li><li>level&#x3D;”INFO”，很明显是说日志等级。INFO为information，我们可以认为是一般重要的日志信息。我们可以猜测level还有error、warning值，它们不仅是等级标识，也可以作为分类依据。</li><li><psw>后面的确实不懂。</psw></li></ol>              </div>            </details><pre><code>MODEL_NAME = &#39;qwen2-7b-instruct&#39;</code></pre><p>模型名称。可以猜得到是通义千问系列。</p><pre><code># 注意：这里需要填入你的key~ 咱们在第二步申请的。dashscope.api_key=&quot;sk-&quot;</code></pre><p>填写API key，让我们的可以通过接口访问得到资源。</p><pre><code>这段代码定义了一个名为 call_qwen_api 的函数，该函数用于调用一个名为 dashscope.Generation 的 API 来生成文本。以下是该代码的功能、用途和特点的详细介绍：功能 调用 API 生成文本：该函数通过传递一个模型名称 (MODEL_NAME) 和一个查询 (query) 来调用 dashscope.Generation.call 方法，生成相应的文本。 处理 API 响应：函数会检查 API 的响应状态码，如果状态码为 HTTPStatus.OK，则提取并返回生成的文本内容。如果状态码不是 HTTPStatus.OK，则打印错误信息并抛出异常。用途 文本生成：该函数主要用于通过调用外部 API 来生成文本，适用于需要动态生成内容的场景，如聊天机器人、内容创作辅助等。 错误处理：通过检查 API 响应状态码并处理错误情况，确保在调用失败时能够及时发现并处理问题。特点 重试机制：函数使用了 @retry(delay=3, tries=3) 装饰器，这意味着在调用 API 失败时，函数会自动重试最多 3 次，每次重试间隔 3 秒。 消息格式：在调用 API 时，设置了 result_format=‘message’，表示期望的响应格式是消息格式。 错误处理：在 API 调用失败时，函数会打印详细的错误信息，包括请求 ID、状态码、错误代码和错误消息，并抛出异常，以便上层调用者能够捕获并处理这些错误。</code></pre><p>接下来有一串注释。注释中的“这段代码”指向并不是特别清楚，我们可以<kbd>CTRL</kbd>+<kbd>F</kbd>找一下<code>“call_qwen_api”</code>函数。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/96de253a28b0a51dd195b9638cb2b28f481184837.png' data-fancybox='default' data-caption='call_qwen_api函数'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/96de253a28b0a51dd195b9638cb2b28f481184837.png" alt="call_qwen_api函数"></a><span class='image-caption'>call_qwen_api函数</span></div></div><p>我们可以看到，下面两块儿代码是与这有关的。</p><pre><code>def api_retry(MODEL_NAME, query):</code></pre><p>定义api_retry函数，传入参数是 MODEL_NAME 与 query 。可以想得到这个函数的作用就是“重试”，在学习过程中，计算机网络这门课中出现次数比较多。MODEL_NAME为模型名字，上文已经定义。query意为查询，接下来解析。</p><pre><code>    max_retries = 5    retry_delay = 60  # in seconds    attempts = 0</code></pre><p>max_retries最大重试次数。如果连接不到api，我们不可能一直重试，这里我们选择最大重试次数为5，即如果重试次数达到5次，那就不要再试了，浪费时间，中断、显示error。</p><p>retry_delay &#x3D; 60，单位是秒。如果连接不到api，立马重试的话，多半还是连接不上。我们可以稍等一会儿再去连接。这里等待的时间就是1分钟。</p><p>attempts是我们已经尝试的次数，初始值为0.每尝试一次，使attempts加1，再与max_retries比较。</p><pre><code>    while attempts &lt; max_retries:        try:            return call_qwen_api(MODEL_NAME, query)    except Exception as e:        attempts += 1           if attempts &lt; max_retries:            logger.warning(f&quot;Attempt &#123;attempts&#125; failed for text: &#123;query&#125;. Retrying in &#123;retry_delay&#125; seconds...&quot;)            time.sleep(retry_delay)        else:            logger.error(f&quot;All &#123;max_retries&#125; attempts failed for text: &#123;query&#125;. Error: &#123;e&#125;&quot;)            raise</code></pre><p>try……except……是python中常用的处理异常的语句，我们把可能发生错误的语句放在try模块里，用except来处理异常。</p><p>这里，我们试图（try）调用call_qwen_api函数（下一大块儿代码中定义的）。如果发生异常，则重试次数+1，检查重试次数是否超过max_retries。如果未超过，日志打印一份”Warning”，提示“Retrying in {retry_delay} seconds…”（将在{retry_delay}秒后重试），而{retry_delay}就是我们设定的60.接下来，<code>time.sleep(retry_delay)</code>休眠60s。由于是while语句，接下来将返回try部分。如果重试次数已经超过最大重试次数，则日志打印”error”，将错误原因”e”打印出来。从这里我们可以看出，上文对于日志的猜测是完全正确的。</p><p>为什么错误原因是”e”呢？因为<code>except Exception as e:</code>。</p><div class="tag link"><a class="link-card" title="try……except……详解" href="https://blog.csdn.net/aliYz/article/details/128955150"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">try……except……详解</p><p class="url">https://blog.csdn.net/aliYz/article/details/128955150</p></div></a></div><pre><code>def call_qwen_api(MODEL_NAME, query):    # 这里采用dashscope的api调用模型推理，通过http传输的json封装返回结果    messages = [        &#123;&#39;role&#39;: &#39;user&#39;, &#39;content&#39;: query&#125;]    response = dashscope.Generation.call(        MODEL_NAME,        messages=messages,        result_format=&#39;message&#39;,  # set the result is message format.    )    if response.status_code == HTTPStatus.OK:        # print(response)        return response[&#39;output&#39;][&#39;choices&#39;][0][&#39;message&#39;][&#39;content&#39;]    else:        print(&#39;Request id: %s, Status code: %s, error code: %s, error message: %s&#39; % (            response.request_id, response.status_code,            response.code, response.message        ))        raise Exception()</code></pre><p>这里就到call_qwen_api函数本身了，可以看上面的那一块儿注释。</p><pre><code># 这里定义了prompt推理模版def get_prompt(problem, question, options):    options = &#39;\n&#39;.join(f&quot;&#123;&#39;ABCDEFG&#39;[i]&#125;. &#123;o&#125;&quot; for i, o in enumerate(options))    prompt = f&quot;&quot;&quot;你是一个逻辑推理专家，擅长解决逻辑推理问题。以下是一个逻辑推理的题目，形式为单项选择题。所有的问题都是（close-world assumption）闭世界假设，即未观测事实都为假。请逐步分析问题并在最后一行输出答案，最后一行的格式为&quot;答案是：A&quot;。题目如下：### 题目:&#123;problem&#125;### 问题:&#123;question&#125;&#123;options&#125;&quot;&quot;&quot;    # print(prompt)    return prompt</code></pre><div class="note guide clear"><p><strong>什么是 prompt ？</strong></p><p>在使用大语言模型时，使用 prompt 往往可以获得更好、更精确的结果。prompt直译为“提示语”。现在已经有专门研究大语言模型prompt的工作（prompt engineer）。</p></div><div class="tag link"><a class="link-card" title="关于提示工程（Prompt Engineering）" href="https://www.promptingguide.ai/zh"><div class="left"><img src="https://unpkg.com/volantis-static@0.0.1654736714924/media/org.volantis/logo/256/safari.png"/></div><div class="right"><p class="text">关于提示工程（Prompt Engineering）</p><p class="url">https://www.promptingguide.ai/zh</p></div></a></div><p>在我的理解中，大语言模型其实就是一个基于概率机器人。它会根据你的问题，计算各个字（实际上通常是是几个字几个字作为整体）的概率，输出概率最大的那个。并且，前面的回答内容也将作为依据加入到后续回答的计算中，这也就是为什么我们看到的大语言模型基本全是几个字几个字地在输出，并不是为了显示效果，而是技术决定的。（我们当然也可以先将各结果放在一个缓冲区一样的东西中，再一并输出给用户。）</p><p>因此，通过prompt为大模型设置一个身份（在这里，我们告诉大模型“你是一个逻辑推理专家”），可以让大模型计算概率时向这方面靠拢。但是设置prompt也并不像我们自然语言表达的那样简单，由于大模型将几个字几个字看作为一组数据，我们对prompt的更改并不总会起作用。例如（只是例如）：“你是一个逻辑推理专家”和“你是一个逻辑推理学者”的区别对大模型的影响可能微乎其微，也可能影响很大。这就是prompt工程师的工作。</p><p>以上是代码的通用部分一些简单的分析。接下来就是一些具体的分析过程，包括提交任务，读取数据，返回结果，格式化结果等，不再详细介绍。</p><h4 id="测试集文件详解"><a href="#测试集文件详解" class="headerlink" title="测试集文件详解"></a>测试集文件详解</h4><p>下面对测试集文件做简单分析。</p><p>学习手册中写明：</p><div class="note quote"><p>测试集中包含500条测试数据。每个问题包括若干子问题，每个子问题为单项选择题，选项不定（最多5个）具体的，每条训练数据包含 content, questions字段，其中content是题干，questions为具体的子问题。questions是一个子问题列表，每个子问题包括options和answer字段，其中options是一个列表，包含具体的选项，按照ABCDE顺序排列，answer是标准答案。测试集 round1_test_data.jsonl 不包含answer字段。</p></div><p>我们使用记事本或类似软件（我使用NotePad–）打开测试集文件。</p><p>简单看一下第一行：</p><pre><code>&#123;&quot;problem&quot;: &quot;有一群人和一些食物类型。下列是关于这些个体和食物的已知信息：\n\n1. 鸡肉是一种食物。\n2. 苹果是一种食物。\n3. 如果X吃了Y，且X活着，则Y是一种食物。\n4. Bill存活。\n5. Bill吃了花生。\n6. John吃所有食物。\n7. Sue吃所有Bill吃的食物。\n8. John喜欢所有食物。\n\n根据以上信息，回答以下选择题：&quot;, &quot;questions&quot;: [&#123;&quot;question&quot;: &quot;选择题 1：\n谁喜欢吃花生？&quot;, &quot;options&quot;: [&quot;Bill&quot;, &quot;Sue&quot;, &quot;John&quot;, &quot;None of the above&quot;]&#125;], &quot;id&quot;: &quot;round1_test_data_000&quot;&#125;</code></pre><p>\n表示换行。但不是在文件本身中换行，而是要在读取数据的时候换行。为了方便阅读，我们改写一下格式：</p><pre><code>&#123;    problem:         有一群人和一些食物类型。下列是关于这些个体和食物的已知信息：                1. 鸡肉是一种食物。        2. 苹果是一种食物。        3. 如果X吃了Y，且X活着，则Y是一种食物。        4. Bill存活。        5. Bill吃了花生。        6. John吃所有食物。        7. Sue吃所有Bill吃的食物。        8. John喜欢所有食物。                根据以上信息，回答以下选择题：        questions:        选择题 1：        谁喜欢吃花生？            options:        [&quot;Bill&quot;, &quot;Sue&quot;, &quot;John&quot;, &quot;None of the above&quot;]&#125;]            id:         round1_test_data_000&#125;    </code></pre><div class="note warning"><p>注意实际程序中并不是这样处理数据的，我们只是为了方便研究而改写格式！</p></div><p>哈哈，是一道很简单的问题，我们人类可以很轻松地回答出来。但是对于大语言模型，这个问题真的好回答吗？读者可以复制上面改写好格式的文本去考考大语言模型。</p><h4 id="结果文件详解"><a href="#结果文件详解" class="headerlink" title="结果文件详解"></a>结果文件详解</h4><p>最后我们看一下得到的结果文件（upload.jsonl）的第一行。</p><pre><code>&#123;&quot;problem&quot;: &quot;有一群人和一些食物类型。下列是关于这些个体和食物的已知信息：\n\n1. 鸡肉是一种食物。\n2. 苹果是一种食物。\n3. 如果X吃了Y，且X活着，则Y是一种食物。\n4. Bill存活。\n5. Bill吃了花生。\n6. John吃所有食物。\n7. Sue吃所有Bill吃的食物。\n8. John喜欢所有食物。\n\n根据以上信息，回答以下选择题：&quot;, &quot;questions&quot;: [&#123;&quot;question&quot;: &quot;选择题 1：\n谁喜欢吃花生？&quot;, &quot;options&quot;: [&quot;Bill&quot;, &quot;Sue&quot;, &quot;John&quot;, &quot;None of the above&quot;], &quot;answer&quot;: &quot;D&quot;&#125;], &quot;id&quot;: &quot;round1_test_data_000&quot;&#125;</code></pre><p>我们对比可以发现，仅多了<code>&quot;answer&quot;: &quot;D&quot;</code>这一字段。看来我们的这个模型做错了呢。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Datawhale_AI夏令营 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HiVolanyisAssistant_READ_ME</title>
      <link href="/2024/07/24/HiVolanyisAssistant/"/>
      <url>/2024/07/24/HiVolanyisAssistant/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>哈喽大家好哇！最近没更新都是在干这件事啦！这是我编写的一个简化博客书写的小工具-Volantis Assistant。</p><span id="more"></span><h1 id="Volantis-Assistant"><a href="#Volantis-Assistant" class="headerlink" title="Volantis_Assistant"></a>Volantis_Assistant</h1><p>一个Hexo框架-Voalntis主题的书写博客助手，帮助快速书写一些非标准MarkDown写法。通过修改规则，也可用于Hexo的其它主题。</p><h2 id="重要提示"><a href="#重要提示" class="headerlink" title="重要提示"></a>重要提示</h2><p>由于作者水平太差了，所以除主界面外，请使用页面上的“Back”按钮返回，否则会引发错误。</p><h2 id="开源与下载"><a href="#开源与下载" class="headerlink" title="开源与下载"></a>开源与下载</h2><h3 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h3><p>使用Desktop Qt 5.7.1 MSVC2015_64bit编写，代码详见main分支，描述为”code”。</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>点击download文件夹，点击volantis_assistant_v_1_0.rar（或其它版本）文件。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/961d70b99b31070018e0ba2d0d582cca481184837.png' data-fancybox='default' data-caption='点击下载按钮'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/961d70b99b31070018e0ba2d0d582cca481184837.png" alt="点击下载按钮"></a><span class='image-caption'>点击下载按钮</span></div></div><p>点击图中红圈所指的下载按钮。</p><p>也可以通过夸克网盘<a href="https://pan.quark.cn/s/43213628cdf3">分享文件</a>下载，提取码：hdD4。</p><p>将.RAR文件解压缩至合适位置，点击.exe即可使用。</p><h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><p>Volantis是Hexo框架的一个主题，官方网站<a href="https://volantis.js.org/"><em>Volantis</em></a>.</p><p>Volantis主题提供一些插件等的快捷写法以及很多主题带来的元素效果。仅以插入图片来说，有四五种效果、功能不尽相同的写法。我在写自己的博客时，经常需要一边看Volantis文档一边写。有一次，我在网上学了一种前端效果并用在自己的博客文章中，后来才发现Volantis已经有该效果插件，不需要自己再写。这些增加了作者的书写量，带来了一些重复性的工作，作者需要记忆相当量的MarkDown“方言”。于是我编写了这样一个工具，使常用的一些非标准MarkDown写法插入变得简单。</p><p>该工具简化了博客书写过程，让作者更加专注于内容本身的书写。通过配置规则集文件，也可以适用于其它主题。</p><p>本项目为开源项目，使用Qt5.7.1.0框架编写。本人学生，才思不足，疏漏百出。如果对你有一点点的帮助，希望点一个标星，或在B站介绍视频中点一个免费的赞。</p><p>项目介绍视频在B站，代码开源于Github，部分细节在我的博客网站中介绍。</p><p>在这里，我想感谢学校、BOE俱乐部对我的帮助。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><h3 id="各界面介绍"><a href="#各界面介绍" class="headerlink" title="各界面介绍"></a>各界面介绍</h3><h4 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h4><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/b123ea02e2d33e79799e9e3e2df31d47481184837.png' data-fancybox='default' data-caption='主界面'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/b123ea02e2d33e79799e9e3e2df31d47481184837.png" alt="主界面"></a><span class='image-caption'>主界面</span></div></div><h4 id="About-1"><a href="#About-1" class="headerlink" title="About"></a>About</h4><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/60dd249de369597946883b3b0fe30045481184837.png' data-fancybox='default' data-caption='About'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/60dd249de369597946883b3b0fe30045481184837.png" alt="About"></a><span class='image-caption'>About</span></div></div><p>跟上文的About内容是一样的。</p><h4 id="选择规则集页面"><a href="#选择规则集页面" class="headerlink" title="选择规则集页面"></a>选择规则集页面</h4><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/0d706abc9b6a8af6f195e9a9d5882696481184837.png' data-fancybox='default' data-caption='选择规则集页面'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/0d706abc9b6a8af6f195e9a9d5882696481184837.png" alt="选择规则集页面"></a><span class='image-caption'>选择规则集页面</span></div></div><p>在编辑规则集和开始一个新编辑之前均会出现。支持三个规则集文件，规则集文件是保存在软件目录下的形如 <em>“rule_set_1”</em> 的.txt文件。首次打开软件时创建这三个默认规则集。</p><h4 id="编辑规则集页面"><a href="#编辑规则集页面" class="headerlink" title="编辑规则集页面"></a>编辑规则集页面</h4><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/3c2064d7a894359c218b706b6b56fa7f481184837.png' data-fancybox='default' data-caption='编辑规则集页面'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/3c2064d7a894359c218b706b6b56fa7f481184837.png" alt="编辑规则集页面"></a><span class='image-caption'>编辑规则集页面</span></div></div><p>读取规则集文件并显示。在输入框中任意编辑，点击该界面上的”SAVE”按钮保存。</p><p>不可同时打开多个编辑规则集界面。（软件中已做限制）</p><h4 id="摸鱼界面"><a href="#摸鱼界面" class="headerlink" title="摸鱼界面"></a>摸鱼界面</h4><p>还没做，<del>哈哈</del></p><h4 id="编辑文字界面"><a href="#编辑文字界面" class="headerlink" title="编辑文字界面"></a>编辑文字界面</h4><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/237597fb3950820244c77b44a6783dee481184837.png' data-fancybox='default' data-caption='编辑文字界面'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/237597fb3950820244c77b44a6783dee481184837.png" alt="编辑文字界面"></a><span class='image-caption'>编辑文字界面</span></div></div><p>点击右侧按钮，插入对应语法。请在文字框中使用<kbd>Ctrl</kbd> + <kbd>C</kbd> 和 <kbd>Ctrl</kbd> + <kbd>V</kbd>。</p><p>可以同时打开多个编辑文字界面。不能同时打开编辑规则集界面和编辑文字界面。（软件中已做限制）</p><h3 id="规则集文件具体介绍"><a href="#规则集文件具体介绍" class="headerlink" title="规则集文件具体介绍"></a>规则集文件具体介绍</h3><h4 id="规则集文件示例"><a href="#规则集文件示例" class="headerlink" title="规则集文件示例"></a>规则集文件示例</h4><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/cca4e64978d2245f7085ff9724e4d497481184837.png' data-fancybox='default' data-caption='规则集文件示例'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/cca4e64978d2245f7085ff9724e4d497481184837.png" alt="规则集文件示例"></a><span class='image-caption'>规则集文件示例</span></div></div><h4 id="提示文字"><a href="#提示文字" class="headerlink" title="提示文字"></a>提示文字</h4><p>形如 <strong>{:%规则集名%:}</strong> 的内容为直接使用记事本(NotePad)等打开规则集文件时的提示文字 <del>没什么用处。</del> 这段字符之后就是会在编辑时插入的文字。</p><h4 id="需自己填写的字段"><a href="#需自己填写的字段" class="headerlink" title="需自己填写的字段"></a>需自己填写的字段</h4><p>下划线+文字的内容表示这部分是在编辑文字时需要自己填写的地方。这部分内容有：</p><ol><li>_链接  _IMG_链接</li><li>_宽度  _高度</li><li>_文字</li><li>_标题</li><li>_参数参考各类便签    <em>在便签块儿(NodeBlock)中</em></li><li>_颜色</li><li>_这里随便写点什么，但同一个页面内多个Tab块儿这里的内容不能重复    <em>在Tabs中</em></li><li>_时间线标题</li><li>_网盘类型  _PSW  _FILE_名称    <em>_PSW表示的是网盘提取码</em></li></ol><p>编辑时，插入相应MarkDown写法后，应将这部分内容替换为自己需要的内容。</p><h4 id="可省略的字段"><a href="#可省略的字段" class="headerlink" title="可省略的字段"></a>可省略的字段</h4><p>规则集中，以<del>$ $</del>来包裹可省略的字段。</p><p>如复选框 <code>&#123;:%复选框%:&#125;&#123;% checkbox ~$_颜色$~ ~$checked$~ ::_文字 %&#125;</code></p><p>在编辑文字时插入后，文字编辑框中就会出现<code>&#123;% checkbox ~$_颜色$~ ~$checked$~ ::_文字 %&#125;</code>。这是，我们将 <em>_文字</em> 替换为我们需要的文字。而被<del>$ $</del>包裹的 <em>_颜色</em> 和 <em>checked</em> 字段为可省略字段。</p><p>如果不需要可省略字段，应将其（连同 <em><del>$ $</del></em> 符号）删除。若需要该可省略字段，则只需要删除 <em><del>$ $</del></em> 符号。</p><p>如，这些是正确的：</p><ol><li><code>&#123;% checkbox  ::_文字 %&#125;</code>    复选框样式文字。</li><li><code>&#123;% checkbox  checked ::_文字 %&#125;</code>    选中的复选框样式文字。</li><li><code>&#123;% checkbox blue ::_文字 %&#125;</code>    蓝色的复选框样式文字。</li><li><code>&#123;% checkbox blue checked ::_文字 %&#125;</code>    蓝色的选中的复选框样式文字。</li></ol><h4 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h4><p>在规则集文件中，使用汉字字符“丨”（gun，三声）作为换行符。在自定义规则中需要换行的，只需要在需要换行的地方插入 <strong>一个</strong> “丨”，程序中就会自动插入空行。</p><h4 id="请不要随意在记事本-NotePad-中修改"><a href="#请不要随意在记事本-NotePad-中修改" class="headerlink" title="请不要随意在记事本(NotePad)中修改"></a>请不要随意在记事本(NotePad)中修改</h4><p>由于程序中已经写死，所以规则集文件最多有50行，且前45行顺序调换后会导致提示文字和实际输入MarkDown写法不匹配。</p><h4 id="对参数有疑问？"><a href="#对参数有疑问？" class="headerlink" title="对参数有疑问？"></a>对参数有疑问？</h4><p>对参数有疑问的部分，请查阅<a href="https://volantis.js.org/v5/tag-plugins">Volantis标签插件文档</a>。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>首先，使用命令行新建文件。打开文件，自行输入标签(tags)、目录(categories)等（这些和不使用软件是一样的）。</p><p>接下来打开软件。确认规则集无误。打开编辑页面。</p><p>编辑完成后，将内容复制到文件中。</p><h2 id="相关页面"><a href="#相关页面" class="headerlink" title="相关页面"></a>相关页面</h2><ol><li>我的博客页面<a href="https://changakira.github.io/2024/07/24/HiVolanyisAssistant/">HiVolanyisAssistant</a></li><li>B站<a href="https://space.bilibili.com/481184837"><em>https://space.bilibili.com/481184837</em></a></li><li>邮箱<a href="mailto:a259759666@163.com"><em>a259759666@163.com</em></a></li><li>gitter聊天室<a href="https://app.gitter.im/#/room/#maimuju:gitter.im"><em>https://app.gitter.im/#/room/#maimuju:gitter.im</em></a></li></ol><p>如果还有任何问题，我期望得到与你的联系！</p>]]></content>
      
      
      <categories>
          
          <category> 小玩意儿 </category>
          
          <category> Qt5.7.1 </category>
          
          <category> volantis_assistant </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小玩意儿 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂谈-你也在不断重复造轮子吗</title>
      <link href="/2024/07/13/misc-%E9%87%8D%E5%A4%8D%E9%80%A0%E8%BD%AE%E5%AD%90/"/>
      <url>/2024/07/13/misc-%E9%87%8D%E5%A4%8D%E9%80%A0%E8%BD%AE%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>杂谈-观重复造轮子有感</p><span id="more"></span><p>我在<a href="https://changakira.github.io/2024/05/11/qt-connect-mysql/#:~:text=%E7%BB%93%E6%9E%9C%E4%B8%AD%E6%9C%89%E2%80%9CQMYSQL%E2%80%9D%EF%BC%89%E3%80%82-,%E5%85%A8%E9%83%A8%E4%BB%A3%E7%A0%81%E8%B7%B3%E8%BD%AC%E6%AD%A4%E5%A4%84%E6%9F%A5%E7%9C%8B,-%EF%BC%88%E6%9C%AC%E6%96%87%E4%B8%AD%E9%99%A4"><em>Qt旧版本（以5.7.1.0为例）连接mysql数据库</em></a>一文中，自己在W3school上找了一个隐藏文字的效果，然后用在了了这篇文章<a href="https://changakira.github.io/HTML/test.html">放代码的地方</a>。</p><p>当天晚上，在寻找其它东西的时候就发现，volantis主题已经提供了这样的标签：<a href="https://volantis.js.org/v5/tag-plugins#folding">folding</a>。不得不承认，当时我是非常难过的。</p><details green><summary> 写一下 </summary>              <div class='content'>              <p>效果完全一样，但是集成度更高，与整体主题更符合。</p>              </div>            </details><p>我看过一句感触特别深的话：</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='https://i0.hdslb.com/bfs/article/438f40bd6e9a77bf697675a20684e4c2481184837.jpg' data-fancybox='default' data-caption='汗流浃背了没？'><img fancybox itemprop="contentUrl" src="https://i0.hdslb.com/bfs/article/438f40bd6e9a77bf697675a20684e4c2481184837.jpg" alt="汗流浃背了没？"></a><span class='image-caption'>汗流浃背了没？</span></div></div><p>本来还想升华一下主题的，但是有点困了。</p><p>晚安，世界😊😊</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo创建自定义的html页面</title>
      <link href="/2024/07/12/html-posts/"/>
      <url>/2024/07/12/html-posts/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>当我们想在自己用Hexo搭建的博客页上展示前端代码的效果时，总会遇到麻烦：有时候hexo的主题样式会优先显示。如果我们能写完全的html网页多好呢！</p><span id="more"></span><h2 id="文件夹准备"><a href="#文件夹准备" class="headerlink" title="文件夹准备"></a>文件夹准备</h2><p>在hexo的source文件夹下创建一个存放这些html页面的文件夹，如我创建的是HTML文件夹，如图。</p><p><img src="https://i0.hdslb.com/bfs/article/9e56231954c3dad59eaa52f039dc0890481184837.png" alt="创建文件夹"></p><p>在该文件夹里编写html文件。</p><p><img src="https://i0.hdslb.com/bfs/article/8abc3b5ebd92e44d140e30f68461df27481184837.png" alt="编写html文件"></p><h2 id="使hexo对该文件夹下的文件不进行渲染"><a href="#使hexo对该文件夹下的文件不进行渲染" class="headerlink" title="使hexo对该文件夹下的文件不进行渲染"></a>使hexo对该文件夹下的文件不进行渲染</h2><p>在主题的或hexo的_cofig.yml中修改skip_render项（若（主题的）_config.yml中没有这一项，在合适的地方添加即可）。在skip_render：后面加上要跳过渲染的文件夹名称（这里还是以文件夹名称为HTML为例）。</p><p>修改方式有几种：</p><pre><code>skip_render: HTML/xxxx.html只跳过该文件的渲染skip_render: HTML/*单个文件夹下的全部文件skip_render: HTML/*.html该文件夹下某一类型的全部文件skip_render: HTML/**该文件夹下的全部子文件夹和文件skip_render:- &#39;HTML1/*.html&#39;- &#39;HTML2/**&#39;多个文件夹或其它复杂情况</code></pre><p>以上修改中，若写为单行（1~4的情况），则不需要加引号。写为多行（5）的情况，则需要加引号，单引号双引号均可。</p><p>另外，单行的也可以写成多行的便于以后增添或删除，注意添加引号，如情况2也可以写作：</p><pre><code>skip_render:- &#39;HTML1/*&#39;</code></pre><h2 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h2><p>使用hexo clean，hexo s命令开启本地服务器。地址栏输入相应的网址打开网页查看效果。在本例中，html文件在source文件夹下HTML文件夹下，因此网址是<a href="http://localhost:4000/HTML/test.html%E3%80%82">http://localhost:4000/HTML/test.html。</a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>首先明确，这样做完以后，hexo d部署以后，在互联网上只能通过输入url的方式打开这个页面（将<code>http://localhost:4000</code>替换成你相应的域名），为了更便于阅读，以前端代码为例，我大致总结出几种使用方式。</p><h3 id="1-在一篇文章写原理和代码，插入超链接展示效果"><a href="#1-在一篇文章写原理和代码，插入超链接展示效果" class="headerlink" title="1.在一篇文章写原理和代码，插入超链接展示效果"></a>1.在一篇文章写原理和代码，插入超链接展示效果</h3><h3 id="2-在一篇文章中，使用iframe标签展示效果"><a href="#2-在一篇文章中，使用iframe标签展示效果" class="headerlink" title="2.在一篇文章中，使用iframe标签展示效果"></a>2.在一篇文章中，使用iframe标签展示效果</h3><p><a href="https://www.w3school.com.cn/tags/tag_iframe.asp"><em>请参考iframe标签</em></a></p><p>效果大致是这样的：</p><iframe src="https://www.w3school.com.cn/tags/tag_iframe.asp" width="100%" height="300" style="border:1px solid black;"></iframe><h3 id="3-在hexo顶端栏目中添加传送门"><a href="#3-在hexo顶端栏目中添加传送门" class="headerlink" title="3.在hexo顶端栏目中添加传送门"></a>3.在hexo顶端栏目中添加传送门</h3><p>就像首页、归档、友链这些东西一样</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 用法 </category>
          
          <category> 自定义html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二进制文件</title>
      <link href="/2024/05/23/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6/"/>
      <url>/2024/05/23/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>忙完这段时间写</p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂项 </tag>
            
            <tag> 二进制文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>qCharts避免多个表造成的卡顿</title>
      <link href="/2024/05/23/qCharts%E9%81%BF%E5%85%8D%E5%A4%9A%E4%B8%AA%E8%A1%A8%E9%80%A0%E6%88%90%E7%9A%84%E5%8D%A1%E9%A1%BF/"/>
      <url>/2024/05/23/qCharts%E9%81%BF%E5%85%8D%E5%A4%9A%E4%B8%AA%E8%A1%A8%E9%80%A0%E6%88%90%E7%9A%84%E5%8D%A1%E9%A1%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>忙完这段时间写</p>]]></content>
      
      
      <categories>
          
          <category> Qt </category>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用bat文件进行预操作的思路</title>
      <link href="/2024/05/23/%E4%BD%BF%E7%94%A8bat%E6%96%87%E4%BB%B6%E8%BF%9B%E8%A1%8C%E9%A2%84%E6%93%8D%E4%BD%9C%E7%9A%84%E6%80%9D%E8%B7%AF/"/>
      <url>/2024/05/23/%E4%BD%BF%E7%94%A8bat%E6%96%87%E4%BB%B6%E8%BF%9B%E8%A1%8C%E9%A2%84%E6%93%8D%E4%BD%9C%E7%9A%84%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>忙完这段时间写</p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂项 </tag>
            
            <tag> bat文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wsl2</title>
      <link href="/2024/05/23/wsl2%E4%B8%8Exfce4%E4%B8%AD%E6%96%87%E4%B8%8E%E8%BE%93%E5%85%A5%E6%B3%95%E8%AE%BE%E7%BD%AE/"/>
      <url>/2024/05/23/wsl2%E4%B8%8Exfce4%E4%B8%AD%E6%96%87%E4%B8%8E%E8%BE%93%E5%85%A5%E6%B3%95%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>忙完这段时间写</p>]]></content>
      
      
      <categories>
          
          <category> WSL2 </category>
          
          <category> 用法 </category>
          
          <category> xfce4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WSL2 </tag>
            
            <tag> xfce4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wsl2的网络连接</title>
      <link href="/2024/05/23/wsl2%E7%9A%84%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/"/>
      <url>/2024/05/23/wsl2%E7%9A%84%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>忙完这段时间写</p>]]></content>
      
      
      <categories>
          
          <category> WSL2 </category>
          
          <category> 用法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WSL2 </tag>
            
            <tag> xfce4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wsl，xfce4与XLaunch的图形化界面</title>
      <link href="/2024/05/23/wsl%E4%B8%8E%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%EF%BC%88Ubuntu24-04%E4%B8%8Exfce4%E4%B8%BA%E4%BE%8B%EF%BC%89/"/>
      <url>/2024/05/23/wsl%E4%B8%8E%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%EF%BC%88Ubuntu24-04%E4%B8%8Exfce4%E4%B8%BA%E4%BE%8B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用xfce4与XLaunch的小伙伴们，相信在究竟如何稳定打开图形化界面一定受过很多困扰。按照网上的教程，有时候可行，有时候哐哐报错。这里我摸索出来稳定的方法。</p><span id="more"></span><p>已经安装好xfce4与XLaunch,只是不知道如何稳定打开图形化界面的同学，请点击右侧目录跳转至第3节。</p><psw>另注：这一篇文章中我尝试了使用volantis主题提供的标签插件，还有更改了插入图片的写法</psw><p>搭配食用~</p><div class="audio"><audio controls preload><source src='/class_2/音频/不知名的摇.aac' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><h2 id="1-WSL安装xfce4"><a href="#1-WSL安装xfce4" class="headerlink" title="1.WSL安装xfce4"></a>1.WSL安装xfce4</h2><p>先更新apt-get</p><pre><code>sudo apt-get update &amp;&amp; sudo apt-get upgrade -y</code></pre><p>xorg是xfce桌面需要的一个基础依赖</p><pre><code>sudo apt-get install xorg</code></pre><p>安装XFCE桌面环境</p><pre><code>sudo apt-get install xfce4 -y</code></pre><p>xfce4-goodies是一个丰富某些功能的包。具体内容可以<a href="https://www.jianshu.com/p/95c24f4d96e3#:~:text=Xfce4%2D-,goodies,-%E6%98%AF%E7%94%B1%E4%B8%8B%E9%9D%A2"><em>移步此处</em></a>。</p><pre><code>sudo apt-get install xfce4-goodies -y</code></pre><h2 id="2-安装XLaunch"><a href="#2-安装XLaunch" class="headerlink" title="2.安装XLaunch"></a>2.安装XLaunch</h2><div class="note info"><p>这是Windows软件</p></div><div class="note done"><p>默认安装即可</p></div><span class='btn center large'><a class="button" href='https://sourceforge.net/projects/vcxsrv/' title='去下载网站！'><i class='fas fa-download'></i>去下载网站！</a></span><h2 id="3-打开图形化界面"><a href="#3-打开图形化界面" class="headerlink" title="3.打开图形化界面"></a>3.打开图形化界面</h2><p>打开X-Launch软件，选择One large window，Display number选择0。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/wsl%EF%BC%8Cxfce4%E4%B8%8EXLaunch%E7%9A%84%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/X-Launch%E8%BD%AF%E4%BB%B6.png' data-fancybox='default' data-caption='X-Launch软件'><img fancybox itemprop="contentUrl" src="/class_1/wsl%EF%BC%8Cxfce4%E4%B8%8EXLaunch%E7%9A%84%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/X-Launch%E8%BD%AF%E4%BB%B6.png" alt="X-Launch软件"></a><span class='image-caption'>X-Launch软件</span></div></div><p>点击几次下一页，这里将最后一项勾选上，然后点下一页、完成。出现一个大的黑窗口。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/wsl%EF%BC%8Cxfce4%E4%B8%8EXLaunch%E7%9A%84%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/%E5%B0%86%E6%9C%80%E5%90%8E%E4%B8%80%E9%A1%B9%E5%8B%BE%E9%80%89%E4%B8%8A.png' data-fancybox='default' data-caption='将最后一项勾选上'><img fancybox itemprop="contentUrl" src="/class_1/wsl%EF%BC%8Cxfce4%E4%B8%8EXLaunch%E7%9A%84%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/%E5%B0%86%E6%9C%80%E5%90%8E%E4%B8%80%E9%A1%B9%E5%8B%BE%E9%80%89%E4%B8%8A.png" alt="将最后一项勾选上"></a><span class='image-caption'>将最后一项勾选上</span></div></div><p>Linux中输入</p><pre><code>export DISPLAY=localhost:0</code></pre><p>然后输入</p><pre><code>startxfce4</code></pre><p>等待完成后，就能在刚刚的黑窗口中看到图形化窗口了。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/wsl%EF%BC%8Cxfce4%E4%B8%8EXLaunch%E7%9A%84%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/linux%E4%B8%AD%E6%98%BE%E7%A4%BA%E5%86%85%E5%AE%B9.png' data-fancybox='default' data-caption='linux中显示内容'><img fancybox itemprop="contentUrl" src="/class_1/wsl%EF%BC%8Cxfce4%E4%B8%8EXLaunch%E7%9A%84%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/linux%E4%B8%AD%E6%98%BE%E7%A4%BA%E5%86%85%E5%AE%B9.png" alt="linux中显示内容"></a><span class='image-caption'>linux中显示内容</span></div></div><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/wsl%EF%BC%8Cxfce4%E4%B8%8EXLaunch%E7%9A%84%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/%E6%A1%8C%E9%9D%A2.png' data-fancybox='default' data-caption='桌面'><img fancybox itemprop="contentUrl" src="/class_1/wsl%EF%BC%8Cxfce4%E4%B8%8EXLaunch%E7%9A%84%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/%E6%A1%8C%E9%9D%A2.png" alt="桌面"></a><span class='image-caption'>桌面</span></div></div><h2 id="4-关闭图形化界面"><a href="#4-关闭图形化界面" class="headerlink" title="4.关闭图形化界面"></a>4.关闭图形化界面</h2><p>直接点击右上角关闭，点击Exit。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/wsl%EF%BC%8Cxfce4%E4%B8%8EXLaunch%E7%9A%84%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/%E7%82%B9%E5%87%BBExit.png' data-fancybox='default' data-caption='点击Exit'><img fancybox itemprop="contentUrl" src="/class_1/wsl%EF%BC%8Cxfce4%E4%B8%8EXLaunch%E7%9A%84%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/%E7%82%B9%E5%87%BBExit.png" alt="点击Exit"></a><span class='image-caption'>点击Exit</span></div></div><p>然后在Linux中按<kbd>CTRL</kbd> + <kbd>C</kbd>。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/wsl%EF%BC%8Cxfce4%E4%B8%8EXLaunch%E7%9A%84%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/%E6%8C%89Ctrl+C.png' data-fancybox='default' data-caption='按Ctrl+C'><img fancybox itemprop="contentUrl" src="/class_1/wsl%EF%BC%8Cxfce4%E4%B8%8EXLaunch%E7%9A%84%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/%E6%8C%89Ctrl+C.png" alt="按Ctrl+C"></a><span class='image-caption'>按Ctrl+C</span></div></div><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5.总结"></a>5.总结</h2><p>要再打开图形化界面，只要重复做3和4即可。</p>]]></content>
      
      
      <categories>
          
          <category> WSL2 </category>
          
          <category> 用法 </category>
          
          <category> xfce4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WSL2 </tag>
            
            <tag> xfce4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hackrf在linux下</title>
      <link href="/2024/05/23/hackrf%E5%9C%A8linux%E4%B8%8B/"/>
      <url>/2024/05/23/hackrf%E5%9C%A8linux%E4%B8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>忙完这段时间写</p><p>hackrf_transfer -r hackrf_copied.iq -f 95500000 -a 1 -l 16 -s 8000000</p><p> explorer.exe .</p>]]></content>
      
      
      <categories>
          
          <category> hackRF </category>
          
          <category> 用法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hackRF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows与hackRF收听广播</title>
      <link href="/2024/05/23/windows%E4%B8%8EhackRF%E6%94%B6%E5%90%AC%E5%B9%BF%E6%92%AD/"/>
      <url>/2024/05/23/windows%E4%B8%8EhackRF%E6%94%B6%E5%90%AC%E5%B9%BF%E6%92%AD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>忙完这段时间写</p>]]></content>
      
      
      <categories>
          
          <category> hackRF </category>
          
          <category> 用法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hackRF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hackRF_one_基本使用</title>
      <link href="/2024/05/23/hackRF-one-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%EF%BC%88linux%E4%B8%8B%E5%BD%95%E5%88%B6%E4%B8%8EWindows%E4%B8%AD%E7%BB%98%E5%88%B6%E5%9B%BE%E5%BD%A2%EF%BC%89%EF%BC%88%E5%8C%85%E6%8B%ACWindows%E8%AE%BF%E9%97%AEwsl2%E6%96%87%E4%BB%B6%EF%BC%89/"/>
      <url>/2024/05/23/hackRF-one-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%EF%BC%88linux%E4%B8%8B%E5%BD%95%E5%88%B6%E4%B8%8EWindows%E4%B8%AD%E7%BB%98%E5%88%B6%E5%9B%BE%E5%BD%A2%EF%BC%89%EF%BC%88%E5%8C%85%E6%8B%ACWindows%E8%AE%BF%E9%97%AEwsl2%E6%96%87%E4%BB%B6%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>忙完这段时间写</p>]]></content>
      
      
      <categories>
          
          <category> hackRF </category>
          
          <category> 用法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hackRF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wsl共享主机usb设备（以hackrf_one为例）</title>
      <link href="/2024/05/23/wsl%E5%85%B1%E4%BA%AB%E4%B8%BB%E6%9C%BAusb%E8%AE%BE%E5%A4%87%EF%BC%88%E4%BB%A5hackrf-one%E4%B8%BA%E4%BE%8B%EF%BC%89/"/>
      <url>/2024/05/23/wsl%E5%85%B1%E4%BA%AB%E4%B8%BB%E6%9C%BAusb%E8%AE%BE%E5%A4%87%EF%BC%88%E4%BB%A5hackrf-one%E4%B8%BA%E4%BE%8B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>忙完这段时间写</p>]]></content>
      
      
      <categories>
          
          <category> hackRF </category>
          
          <category> WSL2 </category>
          
          <category> 用法 </category>
          
          <category> 用法 </category>
          
          <category> 遇到问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hackRF </tag>
            
            <tag> WSL2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Qt旧版本（以5.7.1.0为例）连接mysql数据库</title>
      <link href="/2024/05/11/qt-connect-mysql/"/>
      <url>/2024/05/11/qt-connect-mysql/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>网上查阅Qt如何连接mysql数据库，多为新版本Qt（需要自己编译动态链接库），对旧版本Qt连接描述较少，回答也不甚清晰。</p><span id="more"></span><h2 id="在QT中打印当前QT版本支持的数据库"><a href="#在QT中打印当前QT版本支持的数据库" class="headerlink" title="在QT中打印当前QT版本支持的数据库"></a>在QT中打印当前QT版本支持的数据库</h2><p>为简便起见，新建一个Qt console application即可。</p><p><img src="https://i0.hdslb.com/bfs/article/1b6ac5933c70ea2956d6700b01a6596f481184837.png" alt="Qt_console_App"></p><p>全部选择默认创建。</p><p>.pro文件中，添加</p><pre><code>qt += sql</code></pre><p>.cpp文件中，添加</p><pre><code>#include &lt;QDebug&gt;</code></pre><p>和</p><pre><code>qDebug() &lt;&lt; QSqlDatabase::drivers();</code></pre><p>运行，在下方“3 应用程序输出”中查看结果，如下图所示，在旧版本Qt中，已经默认自带MySQL的动态链接库（结果中有“QMYSQL”）。</p><p><img src="https://i0.hdslb.com/bfs/article/7dfe213be1d4c434bd0484edc0d8994b481184837.png" alt="结果中有“QMYSQL”"></p><p><a href ="https://changakira.github.io/HTML/test.html" target = "_blank"><em>全部代码跳转此处查看</em></a>（本文中除上述三条代码外未做任何改动）（也可以将如上三条语句放在任意已经存在的项目中）</p><h2 id="库文件拷贝"><a href="#库文件拷贝" class="headerlink" title="库文件拷贝"></a>库文件拷贝</h2><p>确认该版本的Qt默认支持MySQL后，将MySQL安装目录下的lib文件夹中这两个库文件（如图所示）拷贝到QT安装目录的bin文件夹下。</p><p><img src="https://i0.hdslb.com/bfs/article/e419e90f5cd00bd62c570d35abcd3dca481184837.png" alt="源文件"></p><p><img src="https://i0.hdslb.com/bfs/article/aa6abc3a6ff58038410dc7c6072241df481184837.png" alt="目标文件夹"></p><h2 id="检查是否可以成功连接数据库"><a href="#检查是否可以成功连接数据库" class="headerlink" title="检查是否可以成功连接数据库"></a>检查是否可以成功连接数据库</h2><p>使用如下代码：</p><pre><code>QSqlDatabase db = QSqlDatabase::addDatabase(&quot;QMYSQL&quot;);//链接数据库db.setHostName(&quot;127.0.0.1&quot;);db.setUserName(&quot;root&quot;);db.setPassword(&quot;123456&quot;);db.setDatabaseName(&quot;mysql&quot;);if(!db.open())&#123;    qDebug() &lt;&lt; &quot;0&quot;;&#125;else&#123;    qDebug() &lt;&lt; &quot;1&quot;;&#125;</code></pre><p>将其添加至上面创建的main.cpp中。</p><p>需要注意的是，这样写，点击运行会导致程序异常退出。推测原因是程序还在等待操作的循环中，具体原因也不太清楚。发现若删除<code>return a.exec();</code>代码，则变为每次重新运行时报错。读到<code>return a.exec()</code>的<a href="https://blog.csdn.net/hxp1994/article/details/102673538"><em>具体含义解释文章</em></a>，尝试在<code>return a.exec()</code>之前添加<code>exit(0)</code>，问题解决。</p><p>先在终端管理员中打开MySQL服务：</p><pre><code>net start mysql</code></pre><p>然后运行Qt项目，下方“3 应用程序输出”中输出0表示连接不成功，输出1表示连接成功。</p><p>若连接失败，可先尝试使用终端管理员查看能否登录数据库：</p><pre><code>mysql -u your_username -p</code></pre><p><a href ="https://changakira.github.io/HTML/test.html" target = "_blank"><em>全部代码跳转此处查看</em></a>（和上面的全部代码传送门指向一个地方）</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> Qt </category>
          
          <category> mysql </category>
          
          <category> 用法 </category>
          
          <category> 用法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> Qt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql修改密码报错</title>
      <link href="/2024/05/10/mysql-reset-password/"/>
      <url>/2024/05/10/mysql-reset-password/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文讨论两个报错：<code>Operation ALTER USER failed for &#39;root&#39;@&#39;%&#39;</code>与<code>Plugin &#39;mysql_native_password&#39; is not loaded</code></p><span id="more"></span><h2 id="报错Operation-ALTER-USER-failed-for-‘root‘-’-’"><a href="#报错Operation-ALTER-USER-failed-for-‘root‘-’-’" class="headerlink" title="报错Operation ALTER USER failed for ‘root‘@’%’"></a>报错Operation ALTER USER failed for ‘root‘@’%’</h2><p>安装mysql后，更改初始密码时，按照教程输入<code>ALTER USER &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;123&#39;;</code>，报错<code>Operation ALTER USER failed for &#39;root&#39;@&#39;%&#39;</code>。（或者输入<code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123&#39;;</code>，报错<code>Operation ALTER USER failed for &#39;root&#39;@&#39;localhost&#39;</code>）</p><p>解决：在已登录mysql后输入<br>    use mysql<br>    select user,host from user;</p><p><img src="https://i0.hdslb.com/bfs/article/5049e94dd1af39f4c9c005ecc92dca9f481184837.png" alt="输入`select user,host from user;`"></p><p>如上图，显示user中<code>root</code>的host为<code>localhost</code>，则应输入<code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123&#39;;</code></p><p>反之，若显示user中<code>root</code>的host为<code>%</code>，则应输入<code>ALTER USER &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;123&#39;;</code></p><h2 id="报错Plugin-‘mysql-native-password’-is-not-loaded"><a href="#报错Plugin-‘mysql-native-password’-is-not-loaded" class="headerlink" title="报错Plugin ‘mysql_native_password’ is not loaded"></a>报错Plugin ‘mysql_native_password’ is not loaded</h2><p>上文中的代码已经避开了接下来讨论的这一个ERROR。实际上，在网上教程中，我查到的代码是<code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;123&#39;;</code>，然后遇到报错<code>Plugin &#39;mysql_native_password&#39; is not loaded</code>，如下图所示。</p><p><img src="https://i0.hdslb.com/bfs/article/ea0aa144583aadcf51af96f7bc36d43a481184837.png" alt="报错显示"></p><p>我在网上查到的资料中没有线索。这时，我发现有人提到</p><blockquote><p>MySQL5.8从开始将caching_sha2_password替代mysql_native_password作为默认的身份验证插件</p></blockquote><p>于是我将代码中的<code>mysql_native_password</code>改为<code>caching_sha2_password</code>，即输入：</p><pre><code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH caching_sha2_password BY &#39;123&#39;;</code></pre><p><img src="https://i0.hdslb.com/bfs/article/c0a58b89bd050f3c44e6e65f1c85acb5481184837.png" alt="替换后"><br>成功。<br>后来我查阅资料，又发现直接省略这部分就行：</p><pre><code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123456&#39;;</code></pre><p><img src="https://i0.hdslb.com/bfs/article/4c299ab527d0e79d62930e6640352ec9481184837.png" alt="省略"></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> mysql </category>
          
          <category> 遇到问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QT5.7.1与VisualStudio2015</title>
      <link href="/2024/02/08/QT5-7-1%E4%B8%8EVisualStudio2015/"/>
      <url>/2024/02/08/QT5-7-1%E4%B8%8EVisualStudio2015/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>因为项目的需要，我需要使用Qt5.7.1与VisualStudio2015进行联合开发，由于都是很老的版本了，在配置过程中遇上了数不尽的坑，这些坑还大多是网上很多人有同样问题却未能解决的。在无数次失败后我终于找到了完美的源，在此分享。</p><span id="more"></span><h2 id="VS2015"><a href="#VS2015" class="headerlink" title="VS2015"></a>VS2015</h2><p>虽然微软的<a href="https://visualstudio.microsoft.com/zh-hans/vs/older-downloads/">旧版本VS</a>号称是可以下载得到，但在官网上其实只有企业版和专业版。找很久后终于找到了<a href="http://download.microsoft.com/download/B/4/8/B4870509-05CB-447C-878F-2F80E4CB464C/vs2015.com_chs.iso">社区版的下载地址</a>。若使用Qt开发，语言只需要勾选VC++即可。使用该文件可能有部分内容安装不成功，不影响正常使用。注意，VS2015对应的VC++版本应该是14.0。下图是在Qt creator中应该自动检测到的。</p><p><img src="https://i0.hdslb.com/bfs/article/b069d50509a275de41cb2b8431511390481184837.png" alt="Qt中，显示的VC++版本应该是14.0"></p><h2 id="Qt5-7-1-0"><a href="#Qt5-7-1-0" class="headerlink" title="Qt5.7.1.0"></a>Qt5.7.1.0</h2><p>该版本的Qt在官网上也是十分难找。我一度以为该版本已经不受支持而从官网撤下去了，在网上下载的其它包却不能完美运行，后来终于找到了：<a href="https://download.qt.io/new_archive/qt/5.7/5.7.1/">https://download.qt.io/new_archive&#x2F;qt&#x2F;5.7&#x2F;5.7.1&#x2F;</a></p><p>我们应该选择这一项。注意“2015”，“msvc”和“_64”(如果你是64位系统)。</p><p><img src="https://i0.hdslb.com/bfs/article/4bae213fdce54d22e0992391a68eaafa481184837.png" alt="选这个！"></p><h2 id="Windows-调试工具"><a href="#Windows-调试工具" class="headerlink" title="Windows 调试工具"></a>Windows 调试工具</h2><p>如果Qt缺失debuggers，则需要下载此项。</p><p><img src="https://i0.hdslb.com/bfs/article/e6346aacecdc1453a66f620095206bb1481184837.png" alt="Qt中的debuggers项"></p><p><a href="https://learn.microsoft.com/zh-cn/windows-hardware/drivers/debugger/debugger-download-tools">Windows 调试工具官网介绍</a></p><p>省流：安装 <a href="https://developer.microsoft.com/zh-cn/windows/downloads/windows-sdk/">Windows SDK</a>，然后在功能列表中只选择“ Windows 调试工具”。</p><h2 id="安装Qt在VS中的插件"><a href="#安装Qt在VS中的插件" class="headerlink" title="安装Qt在VS中的插件"></a>安装Qt在VS中的插件</h2><p>从清华源安装版本2.4.3（后续版本有bug）：<a href="https://mirrors.tuna.tsinghua.edu.cn/qt/archive/vsaddin/2.4.3/">https://mirrors.tuna.tsinghua.edu.cn/qt/archive/vsaddin/2.4.3/</a>，选择2015版本，下载后双击打开。如果VS已经打开则安装完成后需要重启VS。</p><p>然后在VS扩展中禁用其自动更新。</p><p><img src="https://i0.hdslb.com/bfs/article/e526f60e8a9b4f4dc13059bf3d465810481184837.png" alt="扩展"></p><p><img src="https://i0.hdslb.com/bfs/article/ae33457cd941695ef8a38e4f35dd78e9481184837.png" alt="禁用"></p><p>点击Qt VS Toos，点击Qt Options，添加您的Qt安装路径。</p><p><img src="https://i0.hdslb.com/bfs/article/7f409be77142a843f87dd2dfe5ad6930481184837.png" alt="Qt Options"></p><p>（添加至bin的上一级目录，如下图）。</p><p><img src="https://i0.hdslb.com/bfs/article/2844d672681116491f1981498edc0381481184837.png" alt="添加目录"></p><p>这样就全部弄好啦！</p>]]></content>
      
      
      <categories>
          
          <category> 存档点 </category>
          
          <category> VS2015&amp;QT5.7.1 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VS </tag>
            
            <tag> Qt5 </tag>
            
            <tag> 存档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win11家庭版启用Hyper-V并搭载win10家庭版系统</title>
      <link href="/2024/02/08/Hyper-V/"/>
      <url>/2024/02/08/Hyper-V/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Hyper-V是win8及以上内置的虚拟机平台。本文以win11（家庭版）物理机上启用Hyper-V并搭载win10（家庭版）系统为例，其它情况可酌情参考。</p><span id="more"></span><p>确认您的系统版本。必须为64位机，且支持CPU虚拟化。</p><p>注意Hyper-V与VirthalBox不兼容。</p><p>注意官方不建议在家庭版开启Hyper-V功能，原文为：</p><blockquote><p>关于 “启用 Hyper-V 虚拟机” 的问题， 十分抱歉，Hyper-V 功能仅适用于 Windows 10 企业版、专业版与教育版，暂不支持 Windows 10 家庭版。 如果您希望使用 Hyper-V 相关功能的话，建议您改为使用 Windows 10 专业版系统。 注意：请勿尝试在 Windows 10 家庭版上安装 Hyper-V 角色，避免设备出现意料之外的故障。</p></blockquote><p>我已知存在的问题有<a href="https://answers.microsoft.com/zh-hans/windows/forum/all/win10%E5%AE%B6%E5%BA%AD%E7%89%88%E5%A6%82%E4%BD%95/dbed5740-f2f2-4ae1-b661-34abaeacc819">不能完全关闭</a>，但似乎也<a href="https://blog.csdn.net/qq_41890209/article/details/113844451">已经找到了解决办法</a>。（我没有尝试奥）（我用着到目前为止还没出什么幺蛾子）</p><p>如果你仍然决定在家庭版中使用就看下去吧！</p><h2 id="开启CPU虚拟化"><a href="#开启CPU虚拟化" class="headerlink" title="开启CPU虚拟化"></a>开启CPU虚拟化</h2><p>首先打开任务管理器（您可以右键开始菜单找到它），点击性能-CPU，在右下角查看是否已开启CPU虚拟化。若为是，跳至下一章节。</p><p><img src="https://i0.hdslb.com/bfs/article/851705a5779ba402a92e58fd1a8a7f89481184837.png" alt="任务管理器内图示"></p><p>若为否，则需要先开启CPU虚拟化（VT）功能。各品牌电脑操作不同，可以参考雷电模拟器提供的详细操作：<a href="https://help.ldmnq.com/docs/jg8S1J">https://help.ldmnq.com/docs/jg8S1J</a>或<a href="https://zhuanlan.zhihu.com/p/115103952">https://zhuanlan.zhihu.com/p/115103952</a>。雷电模拟器是我曾使用的一款安卓模拟器，它基于VirthalBox，与Hyper-V不兼容，因为它开启VT的教程比较详细所以放上来。</p><h2 id="启用Hyper-V功能"><a href="#启用Hyper-V功能" class="headerlink" title="启用Hyper-V功能"></a>启用Hyper-V功能</h2><h3 id="Windows专业版、企业版与教育版"><a href="#Windows专业版、企业版与教育版" class="headerlink" title="Windows专业版、企业版与教育版"></a>Windows专业版、企业版与教育版</h3><p>Hyper-V在Windows专业版、企业版与教育版中已内置，只需打开即可。进入控制面板-程序&#x2F;卸载程序-启用或关闭Windows功能，找到Hyper-V，勾选复选框，点击确定，点击重新启动即可。</p><h3 id="Windows家庭版"><a href="#Windows家庭版" class="headerlink" title="Windows家庭版"></a>Windows家庭版</h3><p>新建一个文本文档，输入以下：</p><pre><code>pushd &quot;%~dp0&quot; dir /b %SystemRoot%\servicing\Packages\*Hyper-V*.mum &gt;hv.txt for /f %%i in (&#39;findstr /i . hv.txt 2^&gt;nul&#39;) do dism /online /norestart /add-package:&quot;%SystemRoot%\servicing\Packages\%%i&quot; del hv.txt Dism /online /enable-feature /featurename:Microsoft-Hyper-V -All /LimitAccess /ALL pause </code></pre><p>修改后缀名为.bat，以管理员身份运行并等待（等待时间比较长，终端窗口的输出看起来是重复的，实际上是正确的，耐心等待运行结束），根据提示输入y并回车使设备重启。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>首先我们需要一个系统映像文件，我选择win10的ISO文件。我是从<a href="https://msdn.itellyou.cn/">MSDN - I tell you </a>下载的。本站完全免费，支持BT下载。</p><p>Windows版本中，business_editions 版本包含：Education(教育版); Enterprise (企业版); Professional(专业版)；consumer_editions 版本包含：Home(家庭版); Education(教育版) ; Professional(专业版)；LTSC是Windows企业版的特殊版本，更加专注于操作系统的长期稳定运行和兼容性。</p><p><img src="https://i0.hdslb.com/bfs/article/d7bc3a813bb7b2fdc78c59cc2f17e7eb481184837.png" alt="各版本图示"></p><p>因为我想搭载家庭版，选择consumer_editions。</p><p>打开HYyper-V管理器，选择新建-虚拟机。</p><p>在第二页中，可以给虚拟机起个名字并选择一个地方安装。根据自己使用电脑的经验推断至少需要多少空间。</p><p><img src="https://i0.hdslb.com/bfs/article/88dfb81af71caaa1b5d007fbfc4d6aeb481184837.png" alt="第二页图示"></p><p>第三页中选择代数。win7选择第一代，高版本Windows需要选择第二代。</p><p>第四页分配动态内存。默认的4G也可以，设一个更大的数也可以。因为在微软介绍中，win10的硬件条件为4G以上，所以最好不要往低调。</p><p>配置网络需选择Default Switch。</p><p>选择创建虚拟硬盘。</p><p><img src="https://i0.hdslb.com/bfs/article/efd1c4734ebc339073e583f6d9fbd5be481184837.png" alt="创建虚拟硬盘页图示"></p><p>这会在你物理机的磁盘中创建一个虚拟硬盘来存储虚拟机的信息。</p><p>最后的安装选项，选择“从可启动的映像文件安装操作系统”，并选择我们刚才下载的ISO文件。</p><p><img src="https://i0.hdslb.com/bfs/article/ffbf259094089abc2d245dca4f029956481184837.png" alt="安装操作系统图示"></p><p>点击完成。</p><p>双击我们刚刚新建的虚拟机，点击启动，然后不停按任意键，进入Windows安装界面。根据自己的喜好安装，等待结束即可。（选择我没有激活序列码）</p><h2 id="激活与分辨率调整"><a href="#激活与分辨率调整" class="headerlink" title="激活与分辨率调整"></a>激活与分辨率调整</h2><p>这时我们的虚拟机是很小的一个屏幕。我们直接在虚拟机设置中调整分辨率即可，不用看网上其他的复杂操作。</p><p>在这里放一个我用着好用的win10激活工具：<a href="https://www.xitongtiandi.net/wenzhang/win10/44982.html">https://www.xitongtiandi.net/wenzhang/win10/44982.html</a>。包很小，本地下载即可。</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
          <category> Windows技巧 </category>
          
          <category> Hyper-V </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Hyper-V </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>B站图床</title>
      <link href="/2024/02/07/bili%E5%9B%BE%E5%BA%8A/"/>
      <url>/2024/02/07/bili%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>好！本站现在起改用B站图床啦！以后的图片肯定能加载好！以下是使用中遇到的问题与解决方法。</p><span id="more"></span><h2 id="有关介绍"><a href="#有关介绍" class="headerlink" title="有关介绍"></a>有关介绍</h2><p>这里使用的图床为<a href="https://blog.csdn.net/qq_31201781?type=blog">执笔看墨花开</a>大佬开发的插件。图床本身是很容易使用的，这里记录一下在hexo上使用时需要用到“注入器”的问题。</p><p><a href="https://blog.csdn.net/qq_31201781/article/details/102801912?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170731367616800182118640%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=170731367616800182118640&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-3-102801912-null-null.nonecase&utm_term=%E5%9B%BE%E5%BA%8A&spm=1018.2226.3001.4450">大佬的首篇有关博客</a>记录的是Ta在开发chrome插件时遇到的问题与项目地址，大佬后续又开发了edge插件。</p><p>因为我主要使用的是edge浏览器，因此可以直接给出<a href="https://microsoftedge.microsoft.com/addons/detail/b%E7%AB%99%E5%9B%BE%E5%BA%8A/hfjlcmnnkgeppnaigbphhiibhnbnmbip?hl=zh-CN">edge插件的下载地址</a>，而chrome插件下载需要您自己查找。</p><p><img src="https://i0.hdslb.com/bfs/article/af5d2a7da92150d22f0fd3a99b464e25481184837.png" alt="插件打开长这样"></p><h2 id="使用hexo时存在的问题"><a href="#使用hexo时存在的问题" class="headerlink" title="使用hexo时存在的问题"></a>使用hexo时存在的问题</h2><p>上传图片之后就可以获得链接或代码。但是由于B站开启了防盗链，利用HTTP的Referer属性做判断。如果Referer是其白名单之外的网站，就会返回403。我们需要在html的<code>&lt;</code>head<code>&gt;</code>标签中设置如下标志，使资源引用不会携带referrer。<br><code>&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;</code></p><p>如果自己就是使用html语法写网站的，该问题就此结束。而在hexo中，我们写博客时只使用markdown语法写正文部分，其它部分是由hexo生成的。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>这里需要使用到注入器。官方介绍点<a href="https://hexo.io/zh-cn/api/injector.html">这里</a>。</p><p>在博客的根目录下创建 scripts 文件夹，然后在里面任意命名创建一个 js 文件。在里面编写即可。</p><p>在这个具体的问题中，我们需要写上：<br><code>hexo.extend.injector.register(&#39;head_end&#39;, &#39;&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;&#39;,&#39;default&#39;)</code></p><p>第一个参数head_end表示在html的<code>&lt;</code>head<code>&gt;</code>标签后注入。第二个参数是我们需要注入的内容,第三个参数default默认全部页面注入。注意都是字符串形式。</p><p>这样，我们就可以顺利地使用该图床了。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 用法，注入器 </category>
          
          <category> 优化 </category>
          
          <category> 速度优化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在此系统上禁止运行脚本或未对文件数字签名而不能运行脚本</title>
      <link href="/2024/02/07/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%EF%BC%9F/"/>
      <url>/2024/02/07/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用终端时遇到问题“在此系统上禁止运行脚本或未对文件数字签名而不能运行脚本”。</p><span id="more"></span><h2 id="问题详述"><a href="#问题详述" class="headerlink" title="问题详述"></a>问题详述</h2><p>书接上回，长时间未使用过hexo，且曾对电脑安装内容进行过数次大幅改动，在检查hexo是否完整时发生如图所示在此系统上禁止运行脚本错误。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%88%96%E6%9C%AA%E5%AF%B9%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E8%80%8C%E4%B8%8D%E8%83%BD%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC.png' data-fancybox='default' data-caption='在此系统上禁止运行脚本'><img fancybox itemprop="contentUrl" src="/class_1/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%88%96%E6%9C%AA%E5%AF%B9%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E8%80%8C%E4%B8%8D%E8%83%BD%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC.png" alt="在此系统上禁止运行脚本"></a><span class='image-caption'>在此系统上禁止运行脚本</span></div></div><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>既然给出了<a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7.4">参阅网址</a>，那我们就去看一看。网址写的还是很详尽的。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%88%96%E6%9C%AA%E5%AF%B9%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E8%80%8C%E4%B8%8D%E8%83%BD%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/%E8%8E%B7%E5%8F%96%E6%9C%89%E6%95%88%E7%9A%84%E6%89%A7%E8%A1%8C%E7%AD%96%E7%95%A5%E3%80%81%E8%8E%B7%E5%8F%96%E5%BD%B1%E5%93%8D%E5%BD%93%E5%89%8D%E4%BC%9A%E8%AF%9D%E7%9A%84%E6%89%80%E6%9C%89%E6%89%A7%E8%A1%8C%E7%AD%96%E7%95%A5.png' data-fancybox='default' data-caption='获取有效的执行策略、获取影响当前会话的所有执行策略'><img fancybox itemprop="contentUrl" src="/class_1/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%88%96%E6%9C%AA%E5%AF%B9%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E8%80%8C%E4%B8%8D%E8%83%BD%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/%E8%8E%B7%E5%8F%96%E6%9C%89%E6%95%88%E7%9A%84%E6%89%A7%E8%A1%8C%E7%AD%96%E7%95%A5%E3%80%81%E8%8E%B7%E5%8F%96%E5%BD%B1%E5%93%8D%E5%BD%93%E5%89%8D%E4%BC%9A%E8%AF%9D%E7%9A%84%E6%89%80%E6%9C%89%E6%89%A7%E8%A1%8C%E7%AD%96%E7%95%A5.png" alt="获取有效的执行策略、获取影响当前会话的所有执行策略"></a><span class='image-caption'>获取有效的执行策略、获取影响当前会话的所有执行策略</span></div></div><p>如上图。我们尝试获取有效的执行策略，返回为“Restricted”，意为“阻止运行所有脚本文件”。但我们获取影响当前会话的所有执行策略时，返回均为“Undefined”，意为“当前范围内没有设置执行策略”。</p><p>这看起来不对，因为这样的话我们获取当前 PowerShell 会话的有效执行策略（在这个具体问题中，即UserPolicy）时返回的也应该是“Undefined”。</p><p>对于这个问题参阅网址上也已经写明：如果所有范围内的执行策略均为 Undefined，则对于 Windows 客户端，有效执行策略为 Restricted；对于 Windows Server，有效执行策略为 RemoteSigned。我的环境显然属于前者。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%88%96%E6%9C%AA%E5%AF%B9%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E8%80%8C%E4%B8%8D%E8%83%BD%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/Restricted%E5%92%8CUndefined%E6%89%A7%E8%A1%8C%E7%AD%96%E7%95%A5%E6%8F%8F%E8%BF%B0.png' data-fancybox='default' data-caption='Restricted和Undefined执行策略描述'><img fancybox itemprop="contentUrl" src="/class_1/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%88%96%E6%9C%AA%E5%AF%B9%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E8%80%8C%E4%B8%8D%E8%83%BD%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/Restricted%E5%92%8CUndefined%E6%89%A7%E8%A1%8C%E7%AD%96%E7%95%A5%E6%8F%8F%E8%BF%B0.png" alt="Restricted和Undefined执行策略描述"></a><span class='image-caption'>Restricted和Undefined执行策略描述</span></div></div><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>根据参阅网址的提示，我输入了更改执行策略的命令：</p><p><code>Set-ExecutionPolicy -ExecutionPolicy AllSigned</code></p><p>之后重新输入我原来需要的命令hexo -v，此时的报错提示发生了变化：未对文件数字签名而不能运行脚本。这是由于AllSigned策略只允许运行带有数字签名的脚本。</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%88%96%E6%9C%AA%E5%AF%B9%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E8%80%8C%E4%B8%8D%E8%83%BD%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/AllSigned%E7%AD%96%E7%95%A5%E6%8F%8F%E8%BF%B0.png' data-fancybox='default' data-caption='AllSigned策略描述'><img fancybox itemprop="contentUrl" src="/class_1/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%88%96%E6%9C%AA%E5%AF%B9%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E8%80%8C%E4%B8%8D%E8%83%BD%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/AllSigned%E7%AD%96%E7%95%A5%E6%8F%8F%E8%BF%B0.png" alt="AllSigned策略描述"></a><span class='image-caption'>AllSigned策略描述</span></div></div><p>虽然不知道为什么我的hexo脚本没有数字签名，但我相信它是清白的（这一点很重要！）。于是我将策略改为了Bypass：</p><p><code>Set-ExecutionPolicy -ExecutionPolicy Bypass</code></p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%88%96%E6%9C%AA%E5%AF%B9%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E8%80%8C%E4%B8%8D%E8%83%BD%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/Bypass%E7%AD%96%E7%95%A5%E6%8F%8F%E8%BF%B0.png' data-fancybox='default' data-caption='Bypass策略描述'><img fancybox itemprop="contentUrl" src="/class_1/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%88%96%E6%9C%AA%E5%AF%B9%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E8%80%8C%E4%B8%8D%E8%83%BD%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/Bypass%E7%AD%96%E7%95%A5%E6%8F%8F%E8%BF%B0.png" alt="Bypass策略描述"></a><span class='image-caption'>Bypass策略描述</span></div></div><p>问题解决：</p><div galleryFlag itemscope itemtype="http://schema.org/ImageGallery" class="gallery " data-group='default'><div class='fancybox'><a class='fancybox' pjax-fancybox itemscope itemtype="http://schema.org/ImageObject" itemprop="url" href='/class_1/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%88%96%E6%9C%AA%E5%AF%B9%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E8%80%8C%E4%B8%8D%E8%83%BD%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%9B%BE%E7%A4%BA.png' data-fancybox='default' data-caption='问题解决图示'><img fancybox itemprop="contentUrl" src="/class_1/%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%88%96%E6%9C%AA%E5%AF%B9%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E8%80%8C%E4%B8%8D%E8%83%BD%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%9B%BE%E7%A4%BA.png" alt="问题解决图示"></a><span class='image-caption'>问题解决图示</span></div></div>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
          <category> 遇到问题 </category>
          
          <category> terminal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> terminal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>孩子们，我回来啦！龙年大吉！</title>
      <link href="/2024/02/07/%E6%88%91%E5%9B%9E%E6%9D%A5%E5%95%A6/"/>
      <url>/2024/02/07/%E6%88%91%E5%9B%9E%E6%9D%A5%E5%95%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>哎哟终于连上了！这个这个hexo就是这样有点难连，在学校里想写博客时，一写！一上传！死活上传不上来。放寒假回家啦，试试，果然还是在家里用的顺利。</p><span id="more"></span><p>过去的一年也是充当废物的一年。有时间稍微整理一下自己都做了什么事情吧。</p><p>过去写的内容也会稍有整理！过去一年里有过重装系统，有过换用系统，来来去去的，有些操作、学习断断续续的，现在竟然回想不起来一点，尽量写一点吧。</p><p>写博客真的是一件很累的事情，有时候心血来潮还要面对连接不上的问题。我也想过要不要转战知乎、csdn或者博客园，但思来想去，还是觉得自己的这一片小天地最适合自己。</p><p>在学校多次连接无果后，已经有相当长的时间没有打开过自己的博客页面了。而因为校内的学习和项目，磁盘空间日益捉急，很多内容卸了下下了卸，崩溃至极，已决定下学期就购置硬盘。兜兜转转，node.js和git在此情形下也没有幸免。而当我刚刚要重启博客计划时，嘿！您猜怎么着？</p><p>我发现node.js没有也可以正常部署博客！只要还保有node和npm即可。我还意外遇到了一桩怪事，下一篇单独拿出来讲。</p><p>这一篇就先这样吧！回看一年前自己的博客，未免有些幼稚，我将重新整理整理自己的措辞。</p><p>另：默元祝各位龙年快乐！</p>]]></content>
      
      
      <categories>
          
          <category> 庆典 </category>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 庆典 </tag>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Begin  Hexo博客指南</title>
      <link href="/2023/07/23/BeginYourCreattiveMindFromHere/"/>
      <url>/2023/07/23/BeginYourCreattiveMindFromHere/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>你好呀！这里是默元。我将为您介绍如何使用Hexo和Github来方便快捷地搭建自己的博客页面。<br><em>真的非常抱歉！我使用的图床在国内环境下访问速度极慢，可能您自己探索配好以后回到网站才发现我有放详细的过程图！</em></p><h2 id="Hexo简要介绍（以及杂谈）"><a href="#Hexo简要介绍（以及杂谈）" class="headerlink" title="Hexo简要介绍（以及杂谈）"></a>Hexo简要介绍（以及杂谈）</h2><p><a href="https://hexo.io/zh-cn/index.html">Hexo</a>是一个快速、简洁且高效的静态博客框架，搭配Github可以让您快速完成自己的静态博客搭建，十分简明友好。Hexo提供极丰富的主题风格与功能模块，对于新手来说也能快速拥有很好的效果。</p><p>Hexo使用的是Markdown语法。你可以在<a href="https://markdown.com.cn/basic-syntax/">这里</a>学习Markdown语法。</p><p>Hexo使用的是Markdown语法，但使用HTML来书写你的博客也是可以的。虽然这样会复杂一些……我也只是顺口一提。如果想学习HTML，我个人推荐<a href="https://www.w3school.com.cn/">w3school</a>。</p><h2 id="让我们开始吧！"><a href="#让我们开始吧！" class="headerlink" title="让我们开始吧！"></a>让我们开始吧！</h2><p>以下我所说的全部内容，你也可以在<a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a>中找到。</p><h3 id="一、前置准备"><a href="#一、前置准备" class="headerlink" title="一、前置准备"></a>一、前置准备</h3><p>为了使用Hexo，你需要下载<a href="https://nodejs.org/en">Node.JS</a>和<a href="https://git-scm.com/">git</a>。</p><p>Node.js官网十分简洁明了：<img src="https://s2.loli.net/2023/07/23/rQoqHCZxshawWyR.png" alt="Node.js官网截图">左为“推荐给大多数用户的版本”，也就是通俗意义上的“稳定版”，右为最新版。选择哪个无所谓。你可以更改安装目录，接下来一直点击next即可。</p><p>将光标置于开始菜单徽标上，右键选择终端。</p><p>第一次选择终端（管理员）时可能报错找不到程序，先以普通权限打开终端即可自动解决。输入<code>node -v</code>、<code>npm -v</code>来查看版本，若成功显示则安装完成。<br><img src="https://s2.loli.net/2023/07/23/UsqWBdJQOt8zPDi.png" alt="屏幕截图 2023-07-23 165843.png"></p><p>注：npm是Node的开放式模块登记和管理系统，是Node.js包的标准发布平台，用于Node.js包的发布、传播、依赖控制，npm在安装Node.js时会连带被安装。如果你仔细查看安装步骤过程的英文，应该对其有所印象。</p><p>npm全局下载的东西默认存在C盘，如果你对此不满意，可以进行如下操作。</p><p>使用<code>npm get prefix</code>查看npm全局模块的存放路径；使用<code>npm get cache</code>查看npm缓存默认存放路径。你应该会看到两个C盘路径。在自己安装Node.js的路径中新建node_cache、node_global文件夹（名字不要更改），在node_global文件夹中再新建node_modules文件夹。下图以E盘安装Node.js为例，图一中node_modules文件夹是本来就有的，不要动。<br><img src="https://s2.loli.net/2023/07/23/yVaFjkptib4MHZ8.png" alt="图一"><br><img src="https://s2.loli.net/2023/07/23/RO4kybcHn5GQjEg.png" alt="图二"><br>在终端执行以下命令来设置全局模块的安装路径到 “node_global” 文件夹，<br><code>npm config set prefix &quot;刚刚建的node_global文件夹地址&quot;</code><br>在终端执行以下命令来设置缓存到 “node_cache” 文件夹<br><code>npm config set cache &quot;刚刚建的node_cache文件夹地址&quot;</code><br>Tips:不会写文件夹地址的同学，可以在文件资源管理器中打开那个文件夹，然后单击上方路径，CTRL+C复制即可。<br><img src="https://s2.loli.net/2023/07/23/dbzJBpoPrxqtknS.png" alt="屏幕截图 2023-07-23 152318.png"></p><p>由于 node 全局模块大多数都是可以通过命令行访问的，还要把[node_global]的路径加入到系统变量中，方便直接使用命令行运行.</p><p>现在大家基本都用win10及更高系统，最简单的打开环境变量的方法是在搜索中直接搜索“环境”或“高级”，点击对应选项，点击“环境变量”。<br><img src="https://s2.loli.net/2023/07/23/6Y3dD9uCLBOVT48.png" alt="搜索环境变量"></p><p><img src="https://s2.loli.net/2023/07/23/fmdoPFY3MjcLibD.png" alt="搜索高级系统配置"></p><p><img src="https://s2.loli.net/2023/07/23/uYGcrdt6KBJjyqO.png" alt="点击环境变量"><br>可以看到环境变量分为用户变量和系统变量。用户变量只针对当前电脑登录的用户有效，而系统变量对所有使用这台电脑的用户有效。<a href="https://zhuanlan.zhihu.com/p/93719752">更多区别可以点我了解</a><br>双击系统变量（下边那堆）中的PATH，对最下面空白的一个格子双击（或点击新建），写入刚刚创建的node_global文件夹对应路径。然后点击确定。</p><p>最后对刚刚新建的三个文件夹进行如下操作：右键-属性-安全-编辑-勾选完全控制。这样才能确保使用npm时有权限写入文件夹。<br><img src="https://s2.loli.net/2023/07/23/vC8ijWFbuB7zlOf.png" alt="屏幕截图 2023-07-23 153525.png"><br><img src="https://s2.loli.net/2023/07/23/L3vq1m6lU2xVo5Y.png" alt="屏幕截图 2023-07-23 153553.png"></p><p>接下来我们安装Git吧！</p><p>Git安装会自动添加到环境变量，因此省心不少，唯独安装过程中大量的选择和英文比较麻烦。<a href="https://zhuanlan.zhihu.com/p/242540359">这位作者</a>的翻译非常好，大家可以看看。如果不关心安装过程中的具体内容，也可以（除更换安装路径外）全部选择默认（下一步）。</p><p>我们还需要一个强大的文件编辑软件。很多文件，我们虽然可以用记事本(Notepad)打开，却无法编辑。我使用<a href="https://gitee.com/cxasm/notepad--">Notepad–</a>打开并编辑。</p><p>找到下载界面，选择Notepad–v2.6.0-win10-single-portable.zip下载。解压缩至合适位置。</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>使用 npm 安装 Hexo。在终端输入<code>npm install -g hexo-cli</code>，回车并稍后。依旧用<code>hexo -v</code>查看一下版本确认安装成功。<br>新建一个文件夹，任意名字都行，它将会是你博客所有内容存储的地方，比如我在D盘新建一个文件夹blog_byHexo。然后右键-更多，选择Git bash here。<br><img src="https://s2.loli.net/2023/07/23/TjhvorW2bi43uCa.png" alt="屏幕截图 2023-07-20 220454.png"></p><p>在Git bash中，不可以使用CTRL+C&#x2F;V来复制粘贴。你可以右键选择copy和paste。</p><p>输入<code>hexo init</code>，回车。结束后你将发现文件夹中多了许多东西，这就是初始化的内容。<br>输入<code>hexo g</code>,回车稍候，生成静态文件。输入<code>hexo s</code>，回车稍候，开启本地预览服务。<br>这时，在浏览器访问<a href="http://localhost:4000/">http://localhost:4000/</a>就可以查看你的初始博客页面了。博客页面的美化与各种功能模块的添加可以自行探索。</p><p>此时我们的博客页面只能在本地访问，接下来我们将通过Github将其部署至互联网上。</p><h3 id="Github上要做的事情"><a href="#Github上要做的事情" class="headerlink" title="Github上要做的事情"></a>Github上要做的事情</h3><p>确保你有一个Github账号。注册时如果一个邮箱注册不上，换一个邮箱。我当时QQ邮箱无法注册，使用学校邮箱注册的，但是有人QQ邮箱就能注册上。</p><p>顺便介绍一下这个地方：点击右上角自己的头像，选择Your profile，<br><img src="https://s2.loli.net/2023/07/23/7f8RwBbqEcp5A2J.png" alt="屏幕截图 2023-07-23 161010.png"><br>下面这些格子，每个格子代表一天，颜色越绿，表示你在这一天向Github上传的代码数量越多（GitHub是世界上最大的代码托管平台）。<br><img src="https://s2.loli.net/2023/07/23/AMEHxJi2C3yNK4k.png" alt="屏幕截图 2023-07-23 161503.png"><br>如果你的大学生涯中这些格子全是绿的，面试时给考官一看，相信考官一定会对你惊为天人，青睐有加。<br><img src="https://s2.loli.net/2023/07/23/12pRZGbOhJyUYci.png" alt="R.png"></p><p>说回正题，在自己的个人主页，新建一个仓库。注意记住仓库这个词。<br><img src="https://s2.loli.net/2023/07/23/B9TtjvbVEYnl5ON.png" alt="屏幕截图 2023-07-23 160941.png"><br>Repository name<strong>一定</strong>要填写[自己的github账户名].github.io（没有中括号）。剩下的可以不动。确保一定是public！</p><p>对博客文件夹右键-Git bash here（翻译：在此文件夹路径中打开git bash），输入<code>git config --global user.name &quot;你的github用户名&quot;</code>,<code>git config --global user.email &quot;你的github注册邮箱&quot;</code>。<br>接下来<code>ssh-keygen -t rsa -C &quot;你的github注册邮箱&quot;</code>，生成ssh密钥文件。有提示按提示输入yes，无提示按回车。</p><p>这样会生成id_rsa和id_rsa.pub两个文件（在C:\Users\你的电脑用户名.ssh）。接着用记事本或Notepad–打开id_rsa.pub 密钥，将全部内容复制（CTRL+A，CTRL+C）。<br>注：使用Notepad–打开的方式：1.右键-打开方式-选择其他应用-在电脑上选择应用-找到你安装Notepad–的位置，点击Notepad–。2.或者先打开Notepad–，再将文件拖入Notepad–窗口中。</p><p>接下来回到Github，点击右上角头像，选择settings，选择SSH and GPG keys那一项，点击new SSH Key.title为你key的名称，任意填写。将刚刚复制的内容全部粘贴在下方Key输入框中。<br><img src="https://s2.loli.net/2023/07/23/42sV8wBhREzQ6xA.png" alt="屏幕截图 2023-07-23 163650.png"></p><h3 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h3><p>在你的博客文件夹中找到站点配置文件<code>_config.yml</code>,将最后一段更改为</p><pre><code>deploy:    type: git    repo: https://github.com/ChangAkira/ChangAkira.github.io.git(你Github上建好的的仓库地址)    branch: master</code></pre><h3 id="到这里就全部结束啦！"><a href="#到这里就全部结束啦！" class="headerlink" title="到这里就全部结束啦！"></a>到这里就全部结束啦！</h3><p>git bash中，依次执行<code>hexo clean</code>,<code>hexo g</code>,<code>hexo d</code>。等待一会儿（延迟）后，你就可以在”Github用户名.github.io”网站看到自己的博客了。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>终于将建站步骤大致梳理清晰了。</p><p>本文难免有各种疏漏之处，建站也经常会遇到各种诡异的现象，还请大家多多包含。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>easyx分享会代码</title>
      <link href="/2023/07/23/easyx/"/>
      <url>/2023/07/23/easyx/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="跟随鼠标壁纸（需要自行引入资源图片）："><a href="#跟随鼠标壁纸（需要自行引入资源图片）：" class="headerlink" title="跟随鼠标壁纸（需要自行引入资源图片）："></a>跟随鼠标壁纸（需要自行引入资源图片）：</h2><pre><code>#define _CRT_SECURE_NO_WARNINGS#include&lt;stdio.h&gt;#include&lt;graphics.h&gt;#include&quot;resource.h&quot;#include&lt;conio.h&gt;int main()&#123;    ExMessage message;    IMAGE bg;    int cx = GetSystemMetrics(SM_CXSCREEN);    int cy = GetSystemMetrics(SM_CYSCREEN);    initgraph(cx, cy, EX_NOCLOSE | EX_NOMINIMIZE);    HWND hwnd = GetForegroundWindow();    SetWindowLong(hwnd, GWL_STYLE, GetWindowLong(hwnd, GWL_STYLE) &amp; ~WS_CAPTION &amp; ~WS_THICKFRAME &amp; ~WS_BORDER);    SetWindowPos(hwnd, HWND_TOP, 0, 0, cx, cy, SWP_SHOWWINDOW);    loadimage(&amp;bg, _T(&quot;JPG&quot;),  MAKEINTRESOURCE(IDR_JPG1), cx * 1.2, cy * 1.2, 0 );    putimage(-0.1 * cx, -0.1 * cy, &amp;bg);    BeginBatchDraw();    while(!_kbhit())    &#123;        peekmessage(&amp;message, EX_MOUSE, TRUE);        putimage(0.2 * (message.x - cx), 0.2 * (message.y - cy),&amp;bg);        FlushBatchDraw();        cleardevice();    &#125;    EndBatchDraw();    closegraph();    return 0;&#125;</code></pre><h2 id="立方体开始动画"><a href="#立方体开始动画" class="headerlink" title="立方体开始动画"></a>立方体开始动画</h2><pre><code>#include &lt;graphics.h&gt;#include &lt;math.h&gt;#include&lt;conio.h&gt;#definesquare_root_two1.4142135623731#definesquare_root_three1.7320508075689#define     square_root_six2.4494897427832#definePI3.1415926535898#definecubenum5// 正方体数量#defineLineCOLORBLACK#definebkCOLORWHITE#defineturnrate3// 正方体之间旋转等待#defineStardelay800#defineEnddelay750#defineFPS50// 帧数int cx = GetSystemMetrics(SM_CXSCREEN);int cy = GetSystemMetrics(SM_CYSCREEN);int center_x = cx / 2;int center_y = cy / 2;int sidegap = 35;///////////////////////// 结构定义// 定义三维点class POINT3D&#123;public:    double x, y, z;    POINT3D() &#123;&#125;    POINT3D(double x, double y, double z) &#123;        this-&gt;x = x;        this-&gt;y = y;        this-&gt;z = z;    &#125;    POINT3D(POINT3D&amp; P) &#123;        x = P.x;        y = P.y;        z = P.z;    &#125;private:&#125;;//定义正方体struct  Cube&#123;    doubleside_length;// 边长    POINT3D P[8];// 当前坐标    POINT3D tP[8];// 初始坐标    POINTp[8];// 投影坐标    inttaking;// 是否在可以运动 0否1是 初始为1 运动结束为0    intshoptime;// 暂停时间    inthaddone;// 已完成帧数，到 FPS值 停止 taking变为0&#125;cube[cubenum];// cubenum个边长低为10 公差10int end;// 0为初始值，所有正方体停止后end变为1int temp;// 临时变量，可以随便用///////////////////////// 函数声明// 功能函数POINT projection(POINT3D&amp; P3);// 降维投影得到起始二维坐标// 过程函数void Initcube();// 初始化所有正方体信息void rotation();// 旋转void Drawcube();// 描点连线void changing();// 计算二维点void ifend();// 判断是否结束///////////////////////// 函数定义int main()&#123;    // 设置画布相关信息    initgraph(cx, cy, EX_NOCLOSE | EX_NOMINIMIZE);    HWND hwnd = GetForegroundWindow();    SetWindowLong(hwnd, GWL_STYLE, GetWindowLong(hwnd, GWL_STYLE) &amp; ~WS_CAPTION &amp; ~WS_THICKFRAME &amp; ~WS_BORDER);    SetWindowPos(hwnd, HWND_TOP, 0, 0, cx, cy, SWP_SHOWWINDOW);    setbkcolor(bkCOLOR);    setbkmode(TRANSPARENT);    setlinecolor(LineCOLOR);    setlinestyle(PS_SOLID, 2);    BeginBatchDraw();        cleardevice();        Initcube();        // 静态输出        Drawcube();        FlushBatchDraw();        Sleep(Stardelay);        // 开始动画        while (end == 0)        &#123;            cleardevice();            rotation();            changing();            Drawcube();            FlushBatchDraw();            ifend();            Sleep(1000 / FPS);          // 1000/帧数 = 延迟时间        &#125;    Sleep(Enddelay);    for (int i = 1; i &lt;= 255; i+=(i/51+1))    &#123;        cleardevice();        sidegap = sidegap + i;        Initcube();        // 静态输出        setbkcolor(RGB(255-i, 255-i, 255-i));        setlinecolor(RGB(i, i, i));        //setlinecolor(RGB(255 - i, 255 - i, 255 - i));        //setbkcolor(RGB(i, i, i));        Drawcube();        FlushBatchDraw();        cleardevice();        Sleep(5);    &#125;    system(&quot;pause&quot;);    EndBatchDraw();    closegraph();    return 0;&#125;// 初始化所有正方体信息void Initcube()&#123;    end = 0;    for (int num = 0; num &lt; cubenum; num++)    &#123;        // 设置边长        cube[num].side_length = square_root_two * (num + 1) * sidegap;        // 设置三维点        cube[num].tP[0] = &#123; 0,0,0 &#125;;        cube[num].tP[1] = &#123; cube[num].side_length / square_root_two ,                            cube[num].side_length / square_root_two ,                            0 &#125;;        cube[num].tP[2] = &#123; 0,                            cube[num].side_length * square_root_two ,                            0 &#125;;        cube[num].tP[3] = &#123; cube[num].side_length / square_root_two * (-1) ,                            cube[num].side_length / square_root_two ,                            0 &#125;;        for (int num1 = 4; num1 &lt; 9; num1++)        &#123;            cube[num].P[(num1 - 4)] = cube[num].tP[(num1 - 4)];            cube[num].tP[num1] = &#123; cube[num].P[(num1 - 4)].x ,cube[num].P[(num1 - 4)].y ,                cube[num].P[(num1 - 4)].z + cube[num].side_length &#125;;            cube[num].P[num1] = cube[num].tP[num1];        &#125;        cube[num].taking = 1;        cube[num].shoptime = (int)(num * turnrate);        cube[num].haddone = 0;    &#125;    // 转换得到投影点    changing();&#125;// 旋转void rotation()&#123;    // 旋转轴点为（0，cube[num].side_length / square_root_two，z)    for (int num = 0; num &lt; cubenum; num++)    &#123;        if (cube[num].taking == 1)        &#123;            if (cube[num].shoptime == 0)            &#123;                // 底面做旋转操作                for (int num1 = 0; num1 &lt; 4; num1++)                &#123;                    cube[num].P[num1].x = (cube[num].tP[num1].x - 0) * cos(-cube[num].haddone * PI / FPS) - (cube[num].tP[num1].y - cube[num].side_length / square_root_two) * sin(-cube[num].haddone * PI / FPS) + 0;                    cube[num].P[num1].y = (cube[num].tP[num1].x - 0) * sin(-cube[num].haddone * PI / FPS) + (cube[num].tP[num1].y - cube[num].side_length / square_root_two) * cos(-cube[num].haddone * PI / FPS) + cube[num].side_length / square_root_two;                &#125;                // 顶面                for (int num2 = 4; num2 &lt; 8; num2++)                &#123;                    cube[num].P[num2].x = cube[num].P[(num2 - 4)].x;                    cube[num].P[num2].y = cube[num].P[(num2 - 4)].y;                    cube[num].P[num2].z = cube[num].P[(num2 - 4)].z + cube[num].side_length;                &#125;                cube[num].haddone++;                if (cube[num].haddone == (FPS + 1))                    cube[num].taking = 0;            &#125;            elsecube[num].shoptime--;        &#125;    &#125;&#125;// 计算二维点void changing()&#123;    for (int num = 0; num &lt; cubenum; num++)        for (int num1 = 0; num1 &lt; 8; num1++)            cube[num].p[num1] = projection(cube[num].P[num1]);&#125;// 描点连线void Drawcube()&#123;    for (int num = 0; num &lt; cubenum; num++)    &#123;        for (int num1 = 0; num1 &lt; 4; num1++)        &#123;            // 底层            temp = ((num1 + 1) == 4) ? 0 : (num1 + 1);            line(cube[num].p[num1].x, cube[num].p[num1].y, cube[num].p[temp].x, cube[num].p[temp].y);            // 侧楞            temp = num1 + 4;            line(cube[num].p[num1].x, cube[num].p[num1].y, cube[num].p[temp].x, cube[num].p[temp].y);            // 顶层            temp = ((num1 + 5) == 8) ? 4 : (num1 + 5);            line(cube[num].p[(num1 + 4)].x, cube[num].p[(num1 + 4)].y, cube[num].p[temp].x, cube[num].p[temp].y);        &#125;    &#125;&#125;// 判断是否结束void ifend()&#123;    if (cube[(cubenum - 1)].taking == 0)        end = 1;&#125;// 投影得到起始二维坐标POINT projection(POINT3D&amp; p3)&#123;    POINT p2;    // x直接取值    p2.x = (long)p3.x + center_x;    // y用点到直线公式    p2.y = (long)((p3.y * square_root_two - p3.z * 2) / square_root_six + center_y);    return p2;&#125;</code></pre><p>立方体开始动画作品由星羽1704（email <a href="mailto:&#49;&#x34;&#x37;&#57;&#x32;&#x34;&#x35;&#x30;&#x35;&#48;&#x40;&#113;&#x71;&#46;&#x63;&#111;&#109;">&#49;&#x34;&#x37;&#57;&#x32;&#x34;&#x35;&#x30;&#x35;&#48;&#x40;&#113;&#x71;&#46;&#x63;&#111;&#109;</a> 联系方式 qq 1479245050 ）在<a href="https://codebus.cn/featherstar/dynamic-figure" title="将三维空间的点投影到二维平面，感受三维正方体的旋转的视觉盛宴">easyx例程文档</a>中给出。本文将其做少量的修改，得到另外的效果。</p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> EasyX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
